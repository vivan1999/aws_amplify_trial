{"ast":null,"code":"/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass InputState {\n  hasCategory() {\n    return this.category !== undefined;\n  }\n  constructor(token, category) {\n    this.token = token;\n    this.category = category;\n  }\n}\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar LogicalFilterOperator;\n(function (LogicalFilterOperator) {\n  LogicalFilterOperator[\"EQUAL\"] = \"Equal\";\n  LogicalFilterOperator[\"NOT_EQUAL\"] = \"Not equal\";\n})(LogicalFilterOperator || (LogicalFilterOperator = {}));\nexport { InputState as I, LogicalFilterOperator as L };","map":{"version":3,"names":["InputState","hasCategory","category","undefined","constructor","token","LogicalFilterOperator"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\category-filter\\input-state.ts","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\category-filter\\logical-filter-operator.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class InputState {\n  public token: string;\n  public category: string;\n\n  public hasCategory() {\n    return this.category !== undefined;\n  }\n\n  constructor(token: string, category: string) {\n    this.token = token;\n    this.category = category;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport enum LogicalFilterOperator {\n  EQUAL = 'Equal',\n  NOT_EQUAL = 'Not equal',\n}\n"],"mappings":"AAAA;;;;;;;;MASaA,UAAU;EAIdC,WAAWA,CAAA;IAChB,OAAO,IAAI,CAACC,QAAQ,KAAKC,SAAS;;EAGpCC,YAAYC,KAAa,EAAEH,QAAgB;IACzC,IAAI,CAACG,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACH,QAAQ,GAAGA,QAAQ;;;;ACnB5B;;;;;;;;IASYI,qBAAA;AAAZ,WAAYA,qBAAqB;EAC/BA,qBAAA,mBAAe;EACfA,qBAAA,2BAAuB;AACzB,CAAC,EAHWA,qBAAqB,KAArBA,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}