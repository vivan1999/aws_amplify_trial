{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { g as getSlottedElements } from './shadow-dom.js';\nconst inputGroupCss = \":host{position:relative;display:flex;width:100%;flex-wrap:wrap;align-items:stretch}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .group{display:flex;position:absolute;align-items:center;height:100%}:host .group-start{left:0px;height:2rem;margin-left:0.375rem;color:var(--theme-color-soft-text)}:host .group-end{right:0px;height:2rem;margin-right:0.375rem;color:var(--theme-color-soft-text)}:host ::slotted(*){display:flex}\";\nconst InputGroup = /*@__PURE__*/proxyCustomElement(class InputGroup extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.inputPaddingLeft = 0;\n    this.inputPaddingRight = 0;\n  }\n  get inputElement() {\n    return this.hostElement.querySelector('input');\n  }\n  componentWillLoad() {\n    var _a;\n    const {\n      valid\n    } = this.inputElement.validity;\n    this.inputElement.addEventListener('valid', () => {\n      this.onValidInput();\n    });\n    this.inputElement.addEventListener('invalid', () => {\n      this.onInvalidInput();\n    });\n    this.inputElement.addEventListener('input', () => {\n      this.startSlotChanged();\n    });\n    (_a = this.inputElement.form) === null || _a === void 0 ? void 0 : _a.addEventListener('submit', () => {\n      this.startSlotChanged();\n    });\n    valid ? this.onValidInput() : this.onInvalidInput();\n    this.observer = new MutationObserver(() => {\n      this.startSlotChanged();\n      this.endSlotChanged();\n    });\n    this.observer.observe(this.hostElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      characterData: true\n    });\n  }\n  componentDidRender() {\n    this.prepareInputElement();\n  }\n  onValidInput() {\n    this.startSlotChanged();\n  }\n  onInvalidInput() {\n    this.startSlotChanged();\n  }\n  prepareInputElement() {\n    if (this.inputElement) {\n      this.inputElement.style.width = '100%';\n      if (this.inputPaddingRight !== 0) {\n        this.inputElement.style.paddingRight = this.inputPaddingRight + 'px';\n      } else {\n        this.inputElement.style.paddingRight = '0.5rem';\n      }\n      if (this.inputPaddingLeft !== 0) {\n        this.inputElement.style.paddingLeft = this.inputPaddingLeft + 'px';\n      } else {\n        this.inputElement.style.paddingLeft = '0.5rem';\n      }\n    } else {\n      console.warn('You used the ix-input-group without an input tag, e.g. <input class=\"form-control\" />');\n    }\n  }\n  startSlotChanged() {\n    const slot = this.hostElement.shadowRoot.querySelector('slot[name=\"input-start\"]');\n    setTimeout(() => {\n      var _a, _b;\n      const startPadding = this.getChildrenWidth(slot);\n      if (startPadding !== 0) {\n        this.inputPaddingLeft = 15 + startPadding;\n      } else {\n        this.inputPaddingLeft = 0;\n      }\n      if (!this.inputElement) {\n        return;\n      }\n      const isInputInvalid = !this.inputElement.validity.valid || this.inputElement.classList.contains('is-invalid');\n      const formWasValidated = ((_a = this.inputElement.form) === null || _a === void 0 ? void 0 : _a.classList.contains('was-validated')) || ((_b = this.inputElement.form) === null || _b === void 0 ? void 0 : _b.noValidate) === false;\n      if (formWasValidated && isInputInvalid) {\n        const left = this.inputPaddingLeft !== 0 ? this.inputPaddingLeft : 8;\n        this.inputElement.style.backgroundPosition = `left ${left}px center`;\n        this.inputPaddingLeft += 32;\n      }\n    });\n  }\n  endSlotChanged() {\n    const slot = this.hostElement.shadowRoot.querySelector('slot[name=\"input-end\"]');\n    setTimeout(() => {\n      this.inputPaddingRight = 15 + this.getChildrenWidth(slot);\n    });\n  }\n  getChildrenWidth(slotElement) {\n    if (!slotElement) {\n      return 0;\n    }\n    const endElements = getSlottedElements(slotElement);\n    if (endElements.length === 0) {\n      return 0;\n    }\n    let width = 0;\n    endElements.forEach(element => {\n      width += element.getBoundingClientRect().width;\n    });\n    return width;\n  }\n  render() {\n    return h(Host, null, h(\"div\", {\n      class: \"group group-start\"\n    }, h(\"slot\", {\n      name: \"input-start\"\n    })), h(\"slot\", null), h(\"div\", {\n      class: \"group group-end\"\n    }, h(\"slot\", {\n      name: \"input-end\"\n    })));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return inputGroupCss;\n  }\n}, [1, \"ix-input-group\", {\n  \"inputPaddingLeft\": [32],\n  \"inputPaddingRight\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-input-group\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-input-group\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, InputGroup);\n        }\n        break;\n    }\n  });\n}\nconst IxInputGroup = InputGroup;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxInputGroup, defineCustomElement };","map":{"version":3,"names":["inputGroupCss","InputGroup","proxyCustomElement","HTMLElement","inputElement","hostElement","querySelector","componentWillLoad","valid","validity","addEventListener","onValidInput","onInvalidInput","startSlotChanged","_a","form","observer","MutationObserver","endSlotChanged","observe","subtree","childList","attributes","characterData","componentDidRender","prepareInputElement","style","width","inputPaddingRight","paddingRight","inputPaddingLeft","paddingLeft","console","warn","slot","shadowRoot","setTimeout","startPadding","getChildrenWidth","isInputInvalid","classList","contains","formWasValidated","_b","noValidate","left","backgroundPosition","slotElement","endElements","getSlottedElements","length","forEach","element","getBoundingClientRect","render","h","Host","class","name"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\input-group\\input-group.scss?tag=ix-input-group&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\input-group\\input-group.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  position: relative;\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  align-items: stretch;\n\n  .group {\n    display: flex;\n    position: absolute;\n    align-items: center;\n    height: 100%;\n  }\n\n  .group-start {\n    left: 0px;\n    height: 2rem;\n    margin-left: 0.375rem;\n    color: var(--theme-color-soft-text);\n  }\n\n  .group-end {\n    right: 0px;\n    height: 2rem;\n    margin-right: 0.375rem;\n    color: var(--theme-color-soft-text);\n  }\n\n  ::slotted(*) {\n    display: flex;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, State } from '@stencil/core';\nimport { getSlottedElements } from '../utils/shadow-dom';\n\n@Component({\n  tag: 'ix-input-group',\n  styleUrl: 'input-group.scss',\n  shadow: true,\n})\nexport class InputGroup {\n  @Element() hostElement!: HTMLIxInputGroupElement;\n\n  @State() inputPaddingLeft = 0;\n  @State() inputPaddingRight = 0;\n\n  private get inputElement() {\n    return this.hostElement.querySelector('input') as HTMLInputElement;\n  }\n\n  private observer: MutationObserver;\n\n  componentWillLoad() {\n    const { valid } = this.inputElement.validity;\n    this.inputElement.addEventListener('valid', () => {\n      this.onValidInput();\n    });\n    this.inputElement.addEventListener('invalid', () => {\n      this.onInvalidInput();\n    });\n    this.inputElement.addEventListener('input', () => {\n      this.startSlotChanged();\n    });\n\n    this.inputElement.form?.addEventListener('submit', () => {\n      this.startSlotChanged();\n    });\n\n    valid ? this.onValidInput() : this.onInvalidInput();\n\n    this.observer = new MutationObserver(() => {\n      this.startSlotChanged();\n      this.endSlotChanged();\n    });\n\n    this.observer.observe(this.hostElement, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n      characterData: true,\n    });\n  }\n\n  componentDidRender() {\n    this.prepareInputElement();\n  }\n\n  private onValidInput() {\n    this.startSlotChanged();\n  }\n\n  private onInvalidInput() {\n    this.startSlotChanged();\n  }\n\n  private prepareInputElement() {\n    if (this.inputElement) {\n      this.inputElement.style.width = '100%';\n\n      if (this.inputPaddingRight !== 0) {\n        this.inputElement.style.paddingRight = this.inputPaddingRight + 'px';\n      } else {\n        this.inputElement.style.paddingRight = '0.5rem';\n      }\n\n      if (this.inputPaddingLeft !== 0) {\n        this.inputElement.style.paddingLeft = this.inputPaddingLeft + 'px';\n      } else {\n        this.inputElement.style.paddingLeft = '0.5rem';\n      }\n    } else {\n      console.warn(\n        'You used the ix-input-group without an input tag, e.g. <input class=\"form-control\" />'\n      );\n    }\n  }\n\n  private startSlotChanged() {\n    const slot = this.hostElement.shadowRoot.querySelector(\n      'slot[name=\"input-start\"]'\n    );\n\n    setTimeout(() => {\n      const startPadding = this.getChildrenWidth(slot);\n\n      if (startPadding !== 0) {\n        this.inputPaddingLeft = 15 + startPadding;\n      } else {\n        this.inputPaddingLeft = 0;\n      }\n\n      if (!this.inputElement) {\n        return;\n      }\n\n      const isInputInvalid =\n        !this.inputElement.validity.valid ||\n        this.inputElement.classList.contains('is-invalid');\n\n      const formWasValidated =\n        this.inputElement.form?.classList.contains('was-validated') ||\n        this.inputElement.form?.noValidate === false;\n\n      if (formWasValidated && isInputInvalid) {\n        const left = this.inputPaddingLeft !== 0 ? this.inputPaddingLeft : 8;\n        this.inputElement.style.backgroundPosition = `left ${left}px center`;\n        this.inputPaddingLeft += 32;\n      }\n    });\n  }\n\n  private endSlotChanged() {\n    const slot = this.hostElement.shadowRoot.querySelector(\n      'slot[name=\"input-end\"]'\n    );\n\n    setTimeout(() => {\n      this.inputPaddingRight = 15 + this.getChildrenWidth(slot);\n    });\n  }\n\n  private getChildrenWidth(slotElement: Element) {\n    if (!slotElement) {\n      return 0;\n    }\n\n    const endElements = getSlottedElements<HTMLElement>(slotElement);\n    if (endElements.length === 0) {\n      return 0;\n    }\n\n    let width = 0;\n\n    endElements.forEach((element) => {\n      width += element.getBoundingClientRect().width;\n    });\n\n    return width;\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class=\"group group-start\">\n          <slot name=\"input-start\"></slot>\n        </div>\n        <slot></slot>\n        <div class=\"group group-end\">\n          <slot name=\"input-end\"></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}