{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { d as defineCustomElement$2 } from './icon-button.js';\nimport { d as defineCustomElement$1 } from './spinner.js';\nconst toastCss = \":host{display:flex;flex-direction:column;position:relative;min-width:17.5rem;max-width:17.5rem;min-height:3.5rem;pointer-events:all;background-color:var(--theme-toast--background);border:var(--theme-toast--border-thickness) solid var(--theme-toast--border-color);border-radius:var(--theme-toast--border-radius);box-shadow:var(--theme-toast--box-shadow);--animate-duration:300ms}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .toast-body{display:flex;position:relative;min-height:3.5rem;width:100%;flex-grow:1;padding:0.75rem}:host .toast-body .toast-icon{display:flex;align-items:flex-start;margin-right:1rem}:host .toast-body .toast-content{overflow:hidden;text-overflow:ellipsis;min-width:0;width:100%}:host .toast-body .toast-content .toast-title{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:700;line-height:1.143em;color:var(--theme-color-std-text);margin:0.25rem 0px}:host .toast-body .toast-content .toast-message{min-width:0;-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:400;line-height:1.429em;color:var(--theme-color-std-text)}:host .toast-body .toast-icon+.toast-content{max-width:10.25rem}:host .toast-close{display:flex;position:relative;pointer-events:all;margin-left:auto;margin-right:0px}:host .toast-progress-bar{position:absolute;bottom:0;height:0.25rem;width:100%;background-color:var(--theme-toast-timer-value--background);transform-origin:left}:host .toast-progress-bar--animated{animation:trackProgress linear 1 forwards}@keyframes trackProgress{0%{transform:scaleX(1)}100%{transform:scaleX(0)}}\";\nconst Toast = /*@__PURE__*/proxyCustomElement(class Toast extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.closeToast = createEvent(this, \"closeToast\", 7);\n    this.type = 'info';\n    this.toastTitle = undefined;\n    this.autoCloseDelay = 5000;\n    this.autoClose = true;\n    this.icon = undefined;\n    this.iconColor = undefined;\n    this.progress = 0;\n    this.touched = false;\n  }\n  getIcon() {\n    if (this.icon) {\n      return h(\"ix-icon\", {\n        name: this.icon,\n        color: this.iconColor,\n        size: \"24\"\n      });\n    }\n    switch (this.type) {\n      case 'info':\n        return h(\"ix-icon\", {\n          name: 'info',\n          size: \"24\",\n          color: \"color-std-text\"\n        });\n      case 'error':\n        return h(\"ix-icon\", {\n          name: 'error',\n          size: \"24\",\n          color: \"color-alarm\"\n        });\n      case 'success':\n        return h(\"ix-icon\", {\n          name: 'success',\n          size: \"24\",\n          color: \"color-success\"\n        });\n      case 'warning':\n        return h(\"ix-icon\", {\n          name: 'warning',\n          size: \"24\",\n          color: \"color-warning\"\n        });\n      default:\n        return '';\n    }\n  }\n  close() {\n    if (this.hostElement) {\n      this.hostElement.classList.add('animate__fadeOut');\n    }\n    setTimeout(() => {\n      this.closeToast.emit();\n    }, 250);\n  }\n  render() {\n    let progressBarStyle = {};\n    const progressBarClass = ['toast-progress-bar'];\n    progressBarStyle = {\n      animationDuration: `${this.autoCloseDelay}ms`,\n      animationPlayState: this.touched ? 'paused' : 'running'\n    };\n    progressBarClass.push('toast-progress-bar--animated');\n    return h(Host, {\n      class: \"animate__animated animate__fadeIn\"\n    }, h(\"div\", {\n      class: \"toast-body\",\n      onPointerLeave: () => {\n        this.touched = false;\n      },\n      onPointerEnter: () => {\n        this.touched = true;\n      }\n    }, this.type || this.icon ? h(\"div\", {\n      class: \"toast-icon\"\n    }, this.getIcon()) : null, h(\"div\", {\n      class: \"toast-content\"\n    }, this.toastTitle ? h(\"div\", {\n      class: \"toast-title\"\n    }, this.toastTitle) : null, h(\"div\", {\n      class: \"toast-message\"\n    }, h(\"slot\", null))), h(\"div\", {\n      class: \"toast-close\"\n    }, h(\"ix-icon-button\", {\n      icon: 'close',\n      size: \"24\",\n      ghost: true,\n      onClick: () => this.closeToast.emit()\n    }))), this.autoClose ? h(\"div\", {\n      class: progressBarClass.join(' '),\n      style: progressBarStyle,\n      onAnimationEnd: () => {\n        this.close();\n      },\n      onTransitionEnd: () => {\n        if (this.progress === 0) {\n          this.close();\n        }\n      }\n    }) : null);\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return toastCss;\n  }\n}, [1, \"ix-toast\", {\n  \"type\": [1],\n  \"toastTitle\": [1, \"toast-title\"],\n  \"autoCloseDelay\": [2, \"auto-close-delay\"],\n  \"autoClose\": [4, \"auto-close\"],\n  \"icon\": [1],\n  \"iconColor\": [1, \"icon-color\"],\n  \"progress\": [32],\n  \"touched\": [32]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-toast\", \"ix-icon-button\", \"ix-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-toast\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Toast);\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { Toast as T, defineCustomElement as d };","map":{"version":3,"names":["toastCss","Toast","proxyCustomElement","HTMLElement","getIcon","icon","h","name","color","iconColor","size","type","close","hostElement","classList","add","setTimeout","closeToast","emit","render","progressBarStyle","progressBarClass","animationDuration","autoCloseDelay","animationPlayState","touched","push","Host","class","onPointerLeave","onPointerEnter","toastTitle","ghost","onClick","autoClose","join","style","onAnimationEnd","onTransitionEnd","progress"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\toast\\toast.scss?tag=ix-toast&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\toast\\toast.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n@import 'legacy/mixins/fonts';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  min-width: 17.5rem;\n  max-width: 17.5rem;\n  min-height: 3.5rem;\n\n  pointer-events: all;\n\n  background-color: var(--theme-toast--background);\n  border: var(--theme-toast--border-thickness) solid\n    var(--theme-toast--border-color);\n  border-radius: var(--theme-toast--border-radius);\n  box-shadow: var(--theme-toast--box-shadow);\n\n  --animate-duration: #{$medium-time};\n\n  .toast-body {\n    display: flex;\n    position: relative;\n    min-height: 3.5rem;\n    width: 100%;\n    flex-grow: 1;\n    padding: 0.75rem;\n\n    .toast-icon {\n      display: flex;\n      align-items: flex-start;\n      margin-right: $default-space;\n    }\n\n    .toast-content {\n      overflow: hidden;\n      text-overflow: ellipsis;\n      min-width: 0;\n      width: 100%;\n\n      .toast-title {\n        @include text-default-title-single;\n        margin: 0.25rem 0px;\n      }\n\n      .toast-message {\n        min-width: 0;\n\n        @include text-default;\n      }\n    }\n\n    .toast-icon + .toast-content {\n      max-width: 10.25rem;\n    }\n  }\n\n  .toast-close {\n    display: flex;\n    position: relative;\n    pointer-events: all;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n\n  .toast-progress-bar {\n    position: absolute;\n    bottom: 0;\n    height: $tiny-space;\n    width: 100%;\n    background-color: var(--theme-toast-timer-value--background);\n    transform-origin: left;\n\n    &--animated {\n      animation: trackProgress linear 1 forwards;\n    }\n  }\n\n  @keyframes trackProgress {\n    0% {\n      transform: scaleX(1);\n    }\n    100% {\n      transform: scaleX(0);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { ToastType } from './toast-utils';\n\n@Component({\n  tag: 'ix-toast',\n  styleUrl: 'toast.scss',\n  shadow: true,\n})\nexport class Toast {\n  /**\n   * Toast type\n   */\n  @Prop() type: ToastType = 'info';\n\n  /**\n   * Toast title\n   */\n  @Prop() toastTitle: string;\n\n  /**\n   * Autoclose title after delay\n   */\n  @Prop() autoCloseDelay = 5000;\n\n  /**\n   * Autoclose behavior\n   */\n  @Prop() autoClose = true;\n\n  /**\n   * Icon of toast\n   */\n  @Prop() icon: string;\n\n  /**\n   * Icon color of toast\n   */\n  @Prop() iconColor: string;\n\n  /**\n   * Toast closed\n   */\n  @Event() closeToast: EventEmitter;\n\n  @State() progress = 0;\n  @State() touched = false;\n\n  @Element() hostElement!: HTMLIxToastElement;\n\n  private getIcon() {\n    if (this.icon) {\n      return <ix-icon name={this.icon} color={this.iconColor} size=\"24\" />;\n    }\n\n    switch (this.type) {\n      case 'info':\n        return <ix-icon name={'info'} size=\"24\" color=\"color-std-text\" />;\n\n      case 'error':\n        return <ix-icon name={'error'} size=\"24\" color=\"color-alarm\" />;\n\n      case 'success':\n        return <ix-icon name={'success'} size=\"24\" color=\"color-success\" />;\n\n      case 'warning':\n        return <ix-icon name={'warning'} size=\"24\" color=\"color-warning\" />;\n\n      default:\n        return '';\n    }\n  }\n\n  private close() {\n    if (this.hostElement) {\n      this.hostElement.classList.add('animate__fadeOut');\n    }\n    setTimeout(() => {\n      this.closeToast.emit();\n    }, 250);\n  }\n\n  render() {\n    let progressBarStyle: Record<string, string> = {};\n\n    const progressBarClass = ['toast-progress-bar'];\n\n    progressBarStyle = {\n      animationDuration: `${this.autoCloseDelay}ms`,\n      animationPlayState: this.touched ? 'paused' : 'running',\n    };\n\n    progressBarClass.push('toast-progress-bar--animated');\n\n    return (\n      <Host class=\"animate__animated animate__fadeIn\">\n        <div\n          class=\"toast-body\"\n          onPointerLeave={() => {\n            this.touched = false;\n          }}\n          onPointerEnter={() => {\n            this.touched = true;\n          }}\n        >\n          {this.type || this.icon ? (\n            <div class=\"toast-icon\">{this.getIcon()}</div>\n          ) : null}\n          <div class=\"toast-content\">\n            {this.toastTitle ? (\n              <div class=\"toast-title\">{this.toastTitle}</div>\n            ) : null}\n            <div class=\"toast-message\">\n              <slot></slot>\n            </div>\n          </div>\n          <div class=\"toast-close\">\n            <ix-icon-button\n              icon={'close'}\n              size=\"24\"\n              ghost\n              onClick={() => this.closeToast.emit()}\n            />\n          </div>\n        </div>\n        {this.autoClose ? (\n          <div\n            class={progressBarClass.join(' ')}\n            style={progressBarStyle}\n            onAnimationEnd={() => {\n              this.close();\n            }}\n            onTransitionEnd={() => {\n              if (this.progress === 0) {\n                this.close();\n              }\n            }}\n          ></div>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}