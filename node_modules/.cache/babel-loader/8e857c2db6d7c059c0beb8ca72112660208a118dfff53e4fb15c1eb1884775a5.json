{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nconst layoutGridCss = \":host{--ix-layout-grid-gutter:24px;display:block;flex:1 1 0%;width:100%;padding-left:calc(var(--ix-layout-grid-gutter) * 0.5);padding-right:calc(var(--ix-layout-grid-gutter) * 0.5)}:host(.no-margin){padding-left:0;padding-right:0}\";\nconst LayoutGrid = /*@__PURE__*/proxyCustomElement(class LayoutGrid extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.noMargin = false;\n    this.gap = '24';\n    this.columns = 12;\n  }\n  render() {\n    return h(Host, {\n      class: {\n        'no-margin': this.noMargin\n      },\n      style: {\n        '--ix-layout-grid-columns': `${this.columns}`,\n        '--ix-layout-grid-gutter': `${this.gap}px`\n      }\n    }, h(\"slot\", null));\n  }\n  static get style() {\n    return layoutGridCss;\n  }\n}, [1, \"ix-layout-grid\", {\n  \"noMargin\": [4, \"no-margin\"],\n  \"gap\": [1],\n  \"columns\": [2]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-layout-grid\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-layout-grid\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, LayoutGrid);\n        }\n        break;\n    }\n  });\n}\nconst IxLayoutGrid = LayoutGrid;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxLayoutGrid, defineCustomElement };","map":{"version":3,"names":["layoutGridCss","LayoutGrid","proxyCustomElement","HTMLElement","render","h","Host","class","noMargin","style","columns","gap"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\grid\\layout-grid.scss?tag=ix-layout-grid&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\grid\\layout-grid.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n:host {\n  --ix-layout-grid-gutter: 24px;\n\n  display: block;\n  flex: 1 1 0%;\n  width: 100%;\n\n  padding-left: calc(var(--ix-layout-grid-gutter) * 0.5);\n  padding-right: calc(var(--ix-layout-grid-gutter) * 0.5);\n}\n\n:host(.no-margin) {\n  padding-left: 0;\n  padding-right: 0;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, h, Host, Prop } from '@stencil/core';\n\n/**\n * @since 2.0.0\n */\n@Component({\n  tag: 'ix-layout-grid',\n  styleUrl: 'layout-grid.scss',\n  shadow: true,\n})\nexport class LayoutGrid {\n  /**\n   * The grid will not have any horizontal padding\n   */\n  @Prop() noMargin = false;\n\n  /**\n   * Grid gap\n   */\n  @Prop() gap: '8' | '12' | '16' | '24' = '24';\n\n  /**\n   * Overwrite the default number of columns. Choose between 2 and 12 columns.\n   */\n  @Prop() columns = 12;\n\n  render() {\n    return (\n      <Host\n        class={{\n          'no-margin': this.noMargin,\n        }}\n        style={{\n          '--ix-layout-grid-columns': `${this.columns}`,\n          '--ix-layout-grid-gutter': `${this.gap}px`,\n        }}\n      >\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":";AAAA,MAAMA,aAAa,GAAG,wOAAwO;MCmBjPC,UAAU,gBAAAC,kBAAA,OAAAD,UAAA,SAAAE,WAAA;;;;;oBAIF,KAAK;eAKgB,IAAI;mBAK1B,EAAE;;EAEpBC,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI;MACHC,KAAK,EAAE;QACL,WAAW,EAAE,IAAI,CAACC;OACnB;MACDC,KAAK,EAAE;QACL,0BAA0B,EAAE,GAAG,IAAI,CAACC,OAAO,EAAE;QAC7C,yBAAyB,EAAE,GAAG,IAAI,CAACC,GAAG;;IACvC,GAEDN,CAAA,cAAa,CACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}