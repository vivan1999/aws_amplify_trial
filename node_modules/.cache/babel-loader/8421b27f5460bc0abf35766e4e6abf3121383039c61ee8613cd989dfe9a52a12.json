{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { c as createMutationObserver } from './mutation-observer.js';\nimport { d as defineCustomElement$7 } from './button.js';\nimport { d as defineCustomElement$6 } from './card.js';\nimport { d as defineCustomElement$5 } from './card-content.js';\nimport { d as defineCustomElement$4 } from './icon-button.js';\nimport { d as defineCustomElement$3 } from './spinner.js';\nimport { d as defineCustomElement$2 } from './typography.js';\nconst cardListCss = \":host{display:flex;position:relative;flex-direction:column;align-items:flex-start;margin:0.5rem}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .CardList_Title{display:flex;position:relative;height:1.5rem;align-items:center;width:100%;margin-bottom:0.5rem}:host .CardList__Title__Button{margin-right:1rem;transition:var(--theme-default-time) transform ease-in-out}:host .CardList__Title__Button__Collapsed{transform:rotate(-90deg)}:host .CardList__Title__Show__All{align-self:center;margin-left:auto;margin-right:0px}:host .CardList__Content{display:flex;position:relative;height:calc(100% - 1.5rem);width:100%;gap:1.5rem;transition:var(--theme-default-time) ease-in-out;overflow:auto}:host .CardList__Content__Collapsed{min-height:0px;max-height:0px;overflow:hidden;opacity:0}:host .CardList__Style__Flexbox__Scroll{flex-wrap:wrap}:host .CardList__Style__Infinite__Scroll{flex-wrap:nowrap;-ms-overflow-style:none;scrollbar-width:none}:host .CardList__Style__Infinite__Scroll::-webkit-scrollbar{display:none}:host .CardList__Overflow{display:block;position:relative;height:100%;width:100%;pointer-events:all;-webkit-mask-image:var(--ix-card-list-overflow, none);mask-image:var(--ix-card-list-overflow, none)}:host .Show__All__Card{display:flex;position:relative;align-self:flex-start;justify-self:center;max-width:11.25rem;min-width:11.25rem;width:11.25rem;min-height:11.25rem;max-height:11.25rem;height:11.25rem;--ix-card-border-color:var(--theme-color-primary);color:var(--theme-color-primary)}:host .CardList__Style__Infinite__Scroll .Show__All__Card{margin-top:2.375rem}:host .CardList__Style__Flexbox__Scroll .Show__All__Card{margin-bottom:2.375rem}:host .Show__All__Card:hover{background-color:var(--theme-color-ghost--hover)}:host .Show__All__Card:active{background-color:var(--theme-color-ghost--active)}:host .Show__All__Card__Content{display:flex;justify-content:center;align-items:center}:host .Show__All__Card__Icon{display:flex;position:absolute;height:4rem;width:4rem;justify-content:center;align-items:center}:host .Show__All__Card__Text{margin-bottom:0px;margin-top:auto}\";\nfunction CardListTitle(props) {\n  if (props.label === '') {\n    return null;\n  }\n  return h(\"div\", {\n    class: \"CardList_Title\"\n  }, h(\"ix-icon-button\", {\n    ghost: true,\n    icon: 'chevron-down',\n    onClick: props.onClick,\n    color: \"color-primary\",\n    class: {\n      CardList__Title__Button: true,\n      CardList__Title__Button__Collapsed: props.isCollapsed\n    }\n  }), h(\"ix-typography\", {\n    variant: \"large-single\"\n  }, props.label), h(\"ix-button\", {\n    class: \"CardList__Title__Show__All\",\n    ghost: true,\n    onClick: props.onShowAllClick\n  }, h(\"span\", null, props.showAllLabel), h(\"span\", null, !isNaN(props.showAllCounter) ? ` (${props.showAllCounter})` : null)));\n}\nconst CardList = /*@__PURE__*/proxyCustomElement(class CardList extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.collapseChanged = createEvent(this, \"collapseChanged\", 7);\n    this.showAllClick = createEvent(this, \"showAllClick\", 7);\n    this.showMoreCardClick = createEvent(this, \"showMoreCardClick\", 7);\n    this.label = undefined;\n    this.collapse = false;\n    this.listStyle = 'stack';\n    this.maxVisibleCards = 12;\n    this.showAllCount = undefined;\n    this.suppressOverflowHandling = false;\n    this.i18nShowAll = 'Show all';\n    this.i18nMoreCards = 'There are more cards available';\n    this.hasOverflowingElements = false;\n    this.numberOfOverflowingElements = 0;\n    this.numberOfAllChildElements = 0;\n    this.leftScrollDistance = 0;\n    this.rightScrollDistance = 0;\n  }\n  onCardListVisibilityToggle() {\n    this.collapse = !this.collapse;\n    this.collapseChanged.emit(this.collapse);\n  }\n  onShowAllClick(event) {\n    this.showAllClick.emit({\n      nativeEvent: event\n    });\n  }\n  getListChildren() {\n    const slot = this.hostElement.shadowRoot.querySelector('.CardList__Content > slot');\n    return slot.assignedElements({\n      flatten: true\n    });\n  }\n  changeVisibilityOfSlotChildren() {\n    const childElements = this.getListChildren();\n    childElements.forEach((element, index) => {\n      if (element instanceof HTMLElement) {\n        if (index > this.maxVisibleCards - 1) {\n          element.classList.add('d-none');\n          return;\n        }\n        element.classList.remove('d-none');\n      }\n    });\n    this.hasOverflowingElements = childElements.length > this.maxVisibleCards;\n    this.numberOfOverflowingElements = childElements.length - this.maxVisibleCards;\n    this.numberOfAllChildElements = childElements.length;\n    this.detectOverflow();\n  }\n  registerOverflowHandler() {\n    this.observer = createMutationObserver(() => {\n      this.changeVisibilityOfSlotChildren();\n    });\n    this.observer.observe(this.hostElement.shadowRoot.querySelector('.CardList__Content'), {\n      childList: true,\n      subtree: true\n    });\n    requestAnimationFrame(() => {\n      this.changeVisibilityOfSlotChildren();\n    });\n  }\n  shouldHandleOverflow() {\n    if (this.suppressOverflowHandling) {\n      return false;\n    }\n    if (this.listStyle === 'stack' || this.listStyle === 'scroll') {\n      return true;\n    }\n  }\n  get listElement() {\n    return this.hostElement.shadowRoot.querySelector('.CardList__Content');\n  }\n  onCardListScroll() {\n    this.detectOverflow();\n  }\n  isShowMoreCardVisible() {\n    return this.suppressOverflowHandling === false && this.hasOverflowingElements;\n  }\n  getOpacityFromScrollDistance(distance) {\n    if (!this.listElement) {\n      return 0;\n    }\n    if (distance === 0) {\n      return 0;\n    }\n    if (distance > 100) {\n      return 1;\n    }\n    return distance / 100;\n  }\n  computeMaskLayer() {\n    const maxOverflowWidth = 80;\n    const maskLayer = `linear-gradient(\n      90deg,\n      transparent 0px,\n      black ${maxOverflowWidth * (this.getOpacityFromScrollDistance(this.leftScrollDistance) > 0 ? 1 : 0)}px,\n      black calc(100% - ${maxOverflowWidth * (this.getOpacityFromScrollDistance(this.rightScrollDistance) > 0 ? 1 : 0)}px),\n      transparent 100%\n    )`;\n    return {\n      '--ix-card-list-overflow': maskLayer\n    };\n  }\n  detectOverflow() {\n    const {\n      clientWidth,\n      scrollWidth,\n      scrollLeft\n    } = this.listElement;\n    this.leftScrollDistance = scrollLeft;\n    this.rightScrollDistance = scrollWidth - scrollLeft - clientWidth;\n  }\n  componentDidLoad() {\n    if (this.shouldHandleOverflow()) {\n      this.registerOverflowHandler();\n    }\n  }\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n  render() {\n    return h(Host, null, h(CardListTitle, {\n      isCollapsed: this.collapse,\n      label: this.label,\n      showAllLabel: this.i18nShowAll,\n      showAllCounter: this.showAllCount === undefined ? this.numberOfAllChildElements : this.showAllCount,\n      onClick: () => this.onCardListVisibilityToggle(),\n      onShowAllClick: e => this.onShowAllClick(e)\n    }), h(\"div\", {\n      class: {\n        CardList__Overflow: true\n      },\n      style: this.computeMaskLayer()\n    }, h(\"div\", {\n      class: {\n        CardList__Content: true,\n        CardList__Content__Collapsed: this.collapse,\n        CardList__Style__Flexbox__Scroll: this.listStyle === 'stack',\n        CardList__Style__Infinite__Scroll: this.listStyle === 'scroll'\n      },\n      onScroll: () => this.onCardListScroll()\n    }, h(\"slot\", {\n      onSlotchange: () => this.changeVisibilityOfSlotChildren()\n    }), this.isShowMoreCardVisible() ? h(\"ix-card\", {\n      class: {\n        Show__All__Card: true\n      },\n      onClick: event => this.showMoreCardClick.emit({\n        nativeEvent: event\n      })\n    }, h(\"ix-card-content\", {\n      class: \"Show__All__Card__Content\"\n    }, h(\"ix-icon\", {\n      name: 'more-menu',\n      size: '32',\n      class: 'Show__All__Card__Icon'\n    }), h(\"span\", {\n      class: \"Show__All__Card__Text\"\n    }, this.i18nMoreCards, \" (\", this.numberOfOverflowingElements, \")\"))) : null)));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return cardListCss;\n  }\n}, [1, \"ix-card-list\", {\n  \"label\": [1],\n  \"collapse\": [1028],\n  \"listStyle\": [1, \"list-style\"],\n  \"maxVisibleCards\": [2, \"max-visible-cards\"],\n  \"showAllCount\": [2, \"show-all-count\"],\n  \"suppressOverflowHandling\": [4, \"suppress-overflow-handling\"],\n  \"i18nShowAll\": [1, \"i-1-8n-show-all\"],\n  \"i18nMoreCards\": [1, \"i-1-8n-more-cards\"],\n  \"hasOverflowingElements\": [32],\n  \"numberOfOverflowingElements\": [32],\n  \"numberOfAllChildElements\": [32],\n  \"leftScrollDistance\": [32],\n  \"rightScrollDistance\": [32]\n}, [[9, \"resize\", \"detectOverflow\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-card-list\", \"ix-button\", \"ix-card\", \"ix-card-content\", \"ix-icon-button\", \"ix-spinner\", \"ix-typography\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-card-list\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, CardList);\n        }\n        break;\n      case \"ix-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ix-card\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ix-card-content\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-typography\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxCardList = CardList;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxCardList, defineCustomElement };","map":{"version":3,"names":["cardListCss","CardListTitle","props","label","h","class","ghost","icon","onClick","color","CardList__Title__Button","CardList__Title__Button__Collapsed","isCollapsed","variant","onShowAllClick","showAllLabel","isNaN","showAllCounter","CardList","proxyCustomElement","HTMLElement","onCardListVisibilityToggle","collapse","collapseChanged","emit","event","showAllClick","nativeEvent","getListChildren","slot","hostElement","shadowRoot","querySelector","assignedElements","flatten","changeVisibilityOfSlotChildren","childElements","forEach","element","index","maxVisibleCards","classList","add","remove","hasOverflowingElements","length","numberOfOverflowingElements","numberOfAllChildElements","detectOverflow","registerOverflowHandler","observer","createMutationObserver","observe","childList","subtree","requestAnimationFrame","shouldHandleOverflow","suppressOverflowHandling","listStyle","listElement","onCardListScroll","isShowMoreCardVisible","getOpacityFromScrollDistance","distance","computeMaskLayer","maxOverflowWidth","maskLayer","leftScrollDistance","rightScrollDistance","clientWidth","scrollWidth","scrollLeft","componentDidLoad","disconnectedCallback","disconnect","render","Host","i18nShowAll","showAllCount","undefined","e","CardList__Overflow","style","CardList__Content","CardList__Content__Collapsed","CardList__Style__Flexbox__Scroll","CardList__Style__Infinite__Scroll","onScroll","onSlotchange","Show__All__Card","showMoreCardClick","name","size","i18nMoreCards"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\card-list\\card-list.scss?tag=ix-card-list&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\card-list\\card-list.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n$CardList__Title__Height: 1.5rem;\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  align-items: flex-start;\n  margin: 0.5rem;\n\n  .CardList_Title {\n    display: flex;\n    position: relative;\n    height: $CardList__Title__Height;\n    align-items: center;\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n\n  .CardList__Title__Button {\n    margin-right: 1rem;\n    transition: var(--theme-default-time) transform ease-in-out;\n  }\n\n  .CardList__Title__Button__Collapsed {\n    transform: rotate(-90deg);\n  }\n\n  .CardList__Title__Show__All {\n    align-self: center;\n    margin-left: auto;\n    margin-right: 0px;\n  }\n\n  .CardList__Content {\n    display: flex;\n    position: relative;\n    height: calc(100% - #{$CardList__Title__Height});\n    width: 100%;\n    gap: 1.5rem;\n    transition: var(--theme-default-time) ease-in-out;\n    overflow: auto;\n  }\n\n  .CardList__Content__Collapsed {\n    min-height: 0px;\n    max-height: 0px;\n    overflow: hidden;\n    opacity: 0;\n  }\n\n  .CardList__Style__Flexbox__Scroll {\n    flex-wrap: wrap;\n  }\n\n  .CardList__Style__Infinite__Scroll {\n    flex-wrap: nowrap;\n\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n\n    &::-webkit-scrollbar {\n      display: none;\n    }\n  }\n\n  .CardList__Overflow {\n    display: block;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    pointer-events: all;\n    mask-image: var(--ix-card-list-overflow, none);\n  }\n\n  .Show__All__Card {\n    display: flex;\n    position: relative;\n\n    align-self: flex-start;\n    justify-self: center;\n\n    max-width: 11.25rem;\n    min-width: 11.25rem;\n    width: 11.25rem;\n\n    min-height: 11.25rem;\n    max-height: 11.25rem;\n    height: 11.25rem;\n\n    --ix-card-border-color: var(--theme-color-primary);\n    color: var(--theme-color-primary);\n  }\n\n  .CardList__Style__Infinite__Scroll .Show__All__Card {\n    margin-top: 2.375rem;\n  }\n\n  .CardList__Style__Flexbox__Scroll .Show__All__Card {\n    margin-bottom: 2.375rem;\n  }\n\n  .Show__All__Card:hover {\n    background-color: var(--theme-color-ghost--hover);\n  }\n\n  .Show__All__Card:active {\n    background-color: var(--theme-color-ghost--active);\n  }\n\n  .Show__All__Card__Content {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .Show__All__Card__Icon {\n    display: flex;\n    position: absolute;\n    height: 4rem;\n    width: 4rem;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .Show__All__Card__Text {\n    margin-bottom: 0px;\n    margin-top: auto;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n} from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\n\nfunction CardListTitle(props: {\n  label: string;\n  isCollapsed: boolean;\n  onClick: (e: MouseEvent) => void;\n  onShowAllClick: (e: MouseEvent) => void;\n  showAllLabel: string;\n  showAllCounter: number;\n}) {\n  if (props.label === '') {\n    return null;\n  }\n\n  return (\n    <div class=\"CardList_Title\">\n      <ix-icon-button\n        ghost\n        icon={'chevron-down'}\n        onClick={props.onClick}\n        color=\"color-primary\"\n        class={{\n          CardList__Title__Button: true,\n          CardList__Title__Button__Collapsed: props.isCollapsed,\n        }}\n      ></ix-icon-button>\n      <ix-typography variant=\"large-single\">{props.label}</ix-typography>\n      <ix-button\n        class=\"CardList__Title__Show__All\"\n        ghost\n        onClick={props.onShowAllClick}\n      >\n        <span>{props.showAllLabel}</span>\n        <span>\n          {!isNaN(props.showAllCounter) ? ` (${props.showAllCounter})` : null}\n        </span>\n      </ix-button>\n    </div>\n  );\n}\n\n/**\n * @since 1.6.0\n */\n@Component({\n  tag: 'ix-card-list',\n  styleUrl: 'card-list.scss',\n  shadow: true,\n})\nexport class CardList {\n  /**\n   * Name the card list\n   */\n  @Prop() label: string;\n\n  /**\n   * Collapse the list\n   */\n  @Prop({ mutable: true }) collapse = false;\n\n  /**\n   * List style\n   */\n  @Prop() listStyle: 'stack' | 'scroll' = 'stack';\n\n  /**\n   * Maximal visible cards\n   *\n   * @internal\n   */\n  @Prop() maxVisibleCards = 12;\n\n  /**\n   * Overwrite the default show all count.\n   * */\n  @Prop() showAllCount: number | undefined;\n\n  /**\n   * Suppress the overflow handling of child elements\n   */\n  @Prop() suppressOverflowHandling = false;\n\n  /**\n   * i18n Show all button\n   */\n  @Prop() i18nShowAll = 'Show all';\n\n  /**\n   * i18n More cards available\n   */\n  @Prop() i18nMoreCards = 'There are more cards available';\n\n  /**\n   * Fire event when the collapse state is changed by the user\n   */\n  @Event() collapseChanged: EventEmitter<boolean>;\n\n  /**\n   * Fire event when the collapse state is changed by the user\n   */\n  @Event() showAllClick: EventEmitter<{\n    nativeEvent: MouseEvent;\n  }>;\n\n  /**\n   * Fire event when the show more card is clicked.\n   */\n  @Event() showMoreCardClick: EventEmitter<{\n    nativeEvent: MouseEvent;\n  }>;\n\n  @Element() hostElement: HTMLIxCardListElement;\n\n  @State() private hasOverflowingElements = false;\n  @State() private numberOfOverflowingElements = 0;\n  @State() private numberOfAllChildElements = 0;\n  @State() private leftScrollDistance = 0;\n  @State() private rightScrollDistance = 0;\n\n  private observer: MutationObserver;\n\n  private onCardListVisibilityToggle() {\n    this.collapse = !this.collapse;\n    this.collapseChanged.emit(this.collapse);\n  }\n\n  private onShowAllClick(event: MouseEvent) {\n    this.showAllClick.emit({\n      nativeEvent: event,\n    });\n  }\n\n  private getListChildren() {\n    const slot = this.hostElement.shadowRoot.querySelector(\n      '.CardList__Content > slot'\n    ) as HTMLSlotElement;\n    return slot.assignedElements({ flatten: true });\n  }\n\n  private changeVisibilityOfSlotChildren() {\n    const childElements = this.getListChildren();\n    childElements.forEach((element, index) => {\n      if (element instanceof HTMLElement) {\n        if (index > this.maxVisibleCards - 1) {\n          element.classList.add('d-none');\n          return;\n        }\n        element.classList.remove('d-none');\n      }\n    });\n    this.hasOverflowingElements = childElements.length > this.maxVisibleCards;\n    this.numberOfOverflowingElements =\n      childElements.length - this.maxVisibleCards;\n\n    this.numberOfAllChildElements = childElements.length;\n    this.detectOverflow();\n  }\n\n  private registerOverflowHandler() {\n    this.observer = createMutationObserver(() => {\n      this.changeVisibilityOfSlotChildren();\n    });\n\n    this.observer.observe(\n      this.hostElement.shadowRoot.querySelector('.CardList__Content'),\n      {\n        childList: true,\n        subtree: true,\n      }\n    );\n\n    requestAnimationFrame(() => {\n      this.changeVisibilityOfSlotChildren();\n    });\n  }\n\n  private shouldHandleOverflow() {\n    if (this.suppressOverflowHandling) {\n      return false;\n    }\n    if (this.listStyle === 'stack' || this.listStyle === 'scroll') {\n      return true;\n    }\n  }\n\n  private get listElement() {\n    return this.hostElement.shadowRoot.querySelector('.CardList__Content');\n  }\n\n  private onCardListScroll() {\n    this.detectOverflow();\n  }\n\n  private isShowMoreCardVisible() {\n    return (\n      this.suppressOverflowHandling === false && this.hasOverflowingElements\n    );\n  }\n\n  private getOpacityFromScrollDistance(distance: number) {\n    if (!this.listElement) {\n      return 0;\n    }\n\n    if (distance === 0) {\n      return 0;\n    }\n\n    if (distance > 100) {\n      return 1;\n    }\n\n    return distance / 100;\n  }\n\n  private computeMaskLayer() {\n    const maxOverflowWidth = 80;\n    const maskLayer = `linear-gradient(\n      90deg,\n      transparent 0px,\n      black ${\n        maxOverflowWidth *\n        (this.getOpacityFromScrollDistance(this.leftScrollDistance) > 0 ? 1 : 0)\n      }px,\n      black calc(100% - ${\n        maxOverflowWidth *\n        (this.getOpacityFromScrollDistance(this.rightScrollDistance) > 0\n          ? 1\n          : 0)\n      }px),\n      transparent 100%\n    )`;\n    return {\n      '--ix-card-list-overflow': maskLayer,\n    };\n  }\n\n  @Listen('resize', { target: 'window' })\n  private detectOverflow() {\n    const { clientWidth, scrollWidth, scrollLeft } = this.listElement;\n\n    this.leftScrollDistance = scrollLeft;\n    this.rightScrollDistance = scrollWidth - scrollLeft - clientWidth;\n  }\n\n  componentDidLoad() {\n    if (this.shouldHandleOverflow()) {\n      this.registerOverflowHandler();\n    }\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <CardListTitle\n          isCollapsed={this.collapse}\n          label={this.label}\n          showAllLabel={this.i18nShowAll}\n          showAllCounter={\n            this.showAllCount === undefined\n              ? this.numberOfAllChildElements\n              : this.showAllCount\n          }\n          onClick={() => this.onCardListVisibilityToggle()}\n          onShowAllClick={(e) => this.onShowAllClick(e)}\n        ></CardListTitle>\n        <div\n          class={{\n            CardList__Overflow: true,\n          }}\n          style={this.computeMaskLayer()}\n        >\n          <div\n            class={{\n              CardList__Content: true,\n              CardList__Content__Collapsed: this.collapse,\n              CardList__Style__Flexbox__Scroll: this.listStyle === 'stack',\n              CardList__Style__Infinite__Scroll: this.listStyle === 'scroll',\n            }}\n            onScroll={() => this.onCardListScroll()}\n          >\n            <slot\n              onSlotchange={() => this.changeVisibilityOfSlotChildren()}\n            ></slot>\n            {this.isShowMoreCardVisible() ? (\n              <ix-card\n                class={{\n                  Show__All__Card: true,\n                }}\n                onClick={(event) =>\n                  this.showMoreCardClick.emit({\n                    nativeEvent: event,\n                  })\n                }\n              >\n                <ix-card-content class=\"Show__All__Card__Content\">\n                  <ix-icon\n                    name={'more-menu'}\n                    size={'32'}\n                    class={'Show__All__Card__Icon'}\n                  ></ix-icon>\n                  <span class=\"Show__All__Card__Text\">\n                    {this.i18nMoreCards} ({this.numberOfOverflowingElements})\n                  </span>\n                </ix-card-content>\n              </ix-card>\n            ) : null}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}