{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';\nimport { d as defineCustomElement$2 } from './dropdown-item.js';\nconst splitButtonItemCss = \":host{display:contents}\";\nconst SplitButtonItem = /*@__PURE__*/proxyCustomElement(class SplitButtonItem extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.itemClick = createEvent(this, \"itemClick\", 7);\n    this.icon = undefined;\n    this.label = undefined;\n  }\n  render() {\n    return h(\"ix-dropdown-item\", {\n      suppressChecked: true,\n      icon: this.icon,\n      label: this.label,\n      onItemClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n      },\n      onClick: e => this.itemClick.emit(e)\n    });\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return splitButtonItemCss;\n  }\n}, [1, \"ix-split-button-item\", {\n  \"icon\": [1],\n  \"label\": [1]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-split-button-item\", \"ix-dropdown-item\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-split-button-item\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, SplitButtonItem);\n        }\n        break;\n      case \"ix-dropdown-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxSplitButtonItem = SplitButtonItem;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxSplitButtonItem, defineCustomElement };","map":{"version":3,"names":["splitButtonItemCss","SplitButtonItem","proxyCustomElement","HTMLElement","render","h","suppressChecked","icon","label","onItemClick","e","preventDefault","stopPropagation","onClick","itemClick","emit"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\split-button-item\\split-button-item.css?tag=ix-split-button-item&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\split-button-item\\split-button-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n:host {\n  display: contents;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n} from '@stencil/core';\n\n/**\n * @deprecated since 2.0.0. Use the `ix-dropdown-item` component instead.\n */\n@Component({\n  tag: 'ix-split-button-item',\n  styleUrl: 'split-button-item.css',\n  shadow: true,\n})\nexport class SplitButtonItem {\n  /**\n   * Dropdown icon\n   */\n  @Prop() icon: string;\n\n  /**\n   * Dropdown label\n   */\n  @Prop() label: string;\n\n  /**\n   * Dropdown item clicked\n   */\n  @Event() itemClick: EventEmitter<MouseEvent>;\n\n  @Element() hostElement: HTMLIxSplitButtonItemElement;\n\n  render() {\n    return (\n      <ix-dropdown-item\n        suppressChecked\n        icon={this.icon}\n        label={this.label}\n        onItemClick={(e) => {\n          e.preventDefault();\n          e.stopPropagation();\n        }}\n        onClick={(e) => this.itemClick.emit(e)}\n      ></ix-dropdown-item>\n    );\n  }\n}\n"],"mappings":";;AAAA,MAAMA,kBAAkB,GAAG,yBAAyB;MC0BvCC,eAAe,gBAAAC,kBAAA,OAAAD,eAAA,SAAAE,WAAA;;;;;;;;;EAkB1BC,MAAMA,CAAA;IACJ,OACEC,CAAA;MACEC,eAAe;MACfC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,WAAW,EAAGC,CAAC;QACbA,CAAC,CAACC,cAAc,EAAE;QAClBD,CAAC,CAACE,eAAe,EAAE;OACpB;MACDC,OAAO,EAAGH,CAAC,IAAK,IAAI,CAACI,SAAS,CAACC,IAAI,CAACL,CAAC;IAAC,EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}