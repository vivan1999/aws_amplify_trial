{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { a as autoUpdate, c as computePosition, s as shift, o as offset, b as arrow, f as flip } from './floating-ui.dom.esm.js';\nimport { d as defineCustomElement$1 } from './typography.js';\nconst tooltipCss = \":host{display:inline-block;position:fixed;left:0px;top:0px;z-index:var(--theme-z-index-tooltip);max-width:18.25rem;opacity:0;visibility:collapse !important;overflow-wrap:break-word;border-radius:0.25rem;background-color:var(--theme-tootlip--background);padding:0.375rem 0.75rem 0.375rem 0.875rem;box-shadow:var(--theme-shadow-4)}:host .tooltip-title{display:flex;align-items:center}:host .tooltip-title ::slotted(ix-icon){margin-right:0.35rem}:host(.visible){opacity:1;visibility:visible !important}:host(.visible) .arrow,:host(.visible) .arrow::before{position:absolute;width:8px;height:8px;background:inherit}:host(.visible) .arrow{visibility:hidden}:host(.visible) .arrow::before{visibility:visible;content:\\\"\\\";transform:rotate(45deg);background-color:var(--theme-tootlip--background)}\";\nconst numberToPixel = value => value != null ? `${value}px` : '';\nconst Tooltip = /*@__PURE__*/proxyCustomElement(class Tooltip extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.onMouseEnterBind = this.onTooltipShow.bind(this);\n    this.onMouseLeaveBind = this.onTooltipHide.bind(this);\n    this.tooltipCloseTimeInMS = 50;\n    this.for = undefined;\n    this.titleContent = undefined;\n    this.interactive = false;\n    this.placement = 'top';\n    this.animationFrame = false;\n    this.visible = false;\n  }\n  get arrowElement() {\n    return this.hostElement.shadowRoot.querySelector('.arrow');\n  }\n  destroyAutoUpdate() {\n    if (this.disposeAutoUpdate !== undefined) {\n      this.disposeAutoUpdate();\n    }\n  }\n  onTooltipShow(e) {\n    this.showTooltip(e.target);\n  }\n  onTooltipHide() {\n    this.hideTooltip();\n  }\n  /** @internal */\n  async showTooltip(anchorElement) {\n    clearTimeout(this.hideTooltipTimeout);\n    this.visible = true;\n    this.computeTooltipPosition(anchorElement);\n  }\n  /** @internal */\n  async hideTooltip() {\n    this.hideTooltipTimeout = setTimeout(() => {\n      this.visible = false;\n    }, this.tooltipCloseTimeInMS);\n    this.destroyAutoUpdate();\n  }\n  computeArrowPosition({\n    placement,\n    middlewareData\n  }) {\n    let {\n      x,\n      y\n    } = middlewareData.arrow;\n    if (placement.startsWith('top')) {\n      return {\n        left: numberToPixel(x),\n        top: numberToPixel(y)\n      };\n    }\n    if (placement.startsWith('right')) {\n      return {\n        left: numberToPixel(-4),\n        top: numberToPixel(y)\n      };\n    }\n    if (placement.startsWith('bottom')) {\n      return {\n        left: numberToPixel(x),\n        top: numberToPixel(-4)\n      };\n    }\n    if (placement.startsWith('left')) {\n      return {\n        right: numberToPixel(-4),\n        top: numberToPixel(y)\n      };\n    }\n  }\n  async computeTooltipPosition(target) {\n    if (!target) {\n      return;\n    }\n    this.disposeAutoUpdate = autoUpdate(target, this.hostElement, async () => {\n      setTimeout(async () => {\n        const computeResponse = await computePosition(target, this.hostElement, {\n          strategy: 'fixed',\n          placement: this.placement,\n          middleware: [shift(), offset(8), arrow({\n            element: this.arrowElement\n          }), flip({\n            fallbackStrategy: 'initialPlacement',\n            padding: 10\n          })]\n        });\n        if (computeResponse.middlewareData.arrow) {\n          const arrowPosition = this.computeArrowPosition(computeResponse);\n          Object.assign(this.arrowElement.style, arrowPosition);\n        }\n        const {\n          x,\n          y\n        } = computeResponse;\n        Object.assign(this.hostElement.style, {\n          left: x !== null ? `${x}px` : '',\n          top: y !== null ? `${y}px` : ''\n        });\n      });\n    }, {\n      ancestorResize: true,\n      ancestorScroll: true,\n      elementResize: true,\n      animationFrame: this.animationFrame\n    });\n  }\n  queryAnchorElements() {\n    return Array.from(document.querySelectorAll(this.for));\n  }\n  registerTriggerListener() {\n    const elements = this.queryAnchorElements();\n    elements.forEach(e => {\n      e.addEventListener('mouseenter', this.onMouseEnterBind);\n      e.addEventListener('mouseleave', this.onMouseLeaveBind);\n    });\n  }\n  registerTooltipListener() {\n    this.hostElement.addEventListener('mouseenter', () => {\n      if (this.interactive) {\n        clearTimeout(this.hideTooltipTimeout);\n      }\n    });\n    this.hostElement.addEventListener('mouseleave', () => {\n      this.onTooltipHide();\n    });\n  }\n  componentDidLoad() {\n    if (this.interactive) {\n      this.tooltipCloseTimeInMS = 150;\n    }\n    this.observer = new MutationObserver(() => {\n      this.registerTriggerListener();\n    });\n    this.observer.observe(document.body, {\n      attributes: true,\n      attributeFilter: ['data-ix-tooltip'],\n      childList: true,\n      subtree: true\n    });\n    this.registerTriggerListener();\n    this.registerTooltipListener();\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.destroyAutoUpdate();\n  }\n  render() {\n    const tooltipContentClass = {\n      'tooltip-content': true\n    };\n    return h(Host, {\n      class: {\n        visible: this.visible\n      }\n    }, h(\"div\", {\n      class: 'tooltip-title'\n    }, h(\"slot\", {\n      name: \"title-icon\"\n    }), h(\"ix-typography\", {\n      variant: \"default-title\"\n    }, this.titleContent, h(\"slot\", {\n      name: \"title-content\"\n    }))), h(\"div\", {\n      class: tooltipContentClass\n    }, h(\"slot\", null)), h(\"div\", {\n      class: \"arrow\"\n    }));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return tooltipCss;\n  }\n}, [1, \"ix-tooltip\", {\n  \"for\": [1],\n  \"titleContent\": [1, \"title-content\"],\n  \"interactive\": [4],\n  \"placement\": [1],\n  \"animationFrame\": [4, \"animation-frame\"],\n  \"visible\": [32],\n  \"showTooltip\": [64],\n  \"hideTooltip\": [64]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-tooltip\", \"ix-typography\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-tooltip\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Tooltip);\n        }\n        break;\n      case \"ix-typography\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { Tooltip as T, defineCustomElement as d };","map":{"version":3,"names":["tooltipCss","numberToPixel","value","Tooltip","proxyCustomElement","HTMLElement","onMouseEnterBind","onTooltipShow","bind","onMouseLeaveBind","onTooltipHide","tooltipCloseTimeInMS","arrowElement","hostElement","shadowRoot","querySelector","destroyAutoUpdate","disposeAutoUpdate","undefined","e","showTooltip","target","hideTooltip","anchorElement","clearTimeout","hideTooltipTimeout","visible","computeTooltipPosition","setTimeout","computeArrowPosition","placement","middlewareData","x","y","arrow","startsWith","left","top","right","autoUpdate","computeResponse","computePosition","strategy","middleware","shift","offset","element","flip","fallbackStrategy","padding","arrowPosition","Object","assign","style","ancestorResize","ancestorScroll","elementResize","animationFrame","queryAnchorElements","Array","from","document","querySelectorAll","for","registerTriggerListener","elements","forEach","addEventListener","registerTooltipListener","interactive","componentDidLoad","observer","MutationObserver","observe","body","attributes","attributeFilter","childList","subtree","disconnectedCallback","_a","disconnect","render","tooltipContentClass","h","Host","class","name","variant","titleContent"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\tooltip\\tooltip.scss?tag=ix-tooltip&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\tooltip\\tooltip.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n  position: fixed;\n  left: 0px;\n  top: 0px;\n  z-index: var(--theme-z-index-tooltip);\n\n  max-width: 18.25rem;\n\n  opacity: 0;\n  visibility: collapse !important;\n  overflow-wrap: break-word;\n\n  border-radius: 0.25rem;\n  background-color: var(--theme-tootlip--background);\n  padding: 0.375rem 0.75rem 0.375rem 0.875rem;\n\n  box-shadow: var(--theme-shadow-4);\n\n  .tooltip-title {\n    display: flex;\n    align-items: center;\n\n    ::slotted(ix-icon) {\n      margin-right: 0.35rem;\n    }\n  }\n}\n\n:host(.visible) {\n  opacity: 1;\n  visibility: visible !important;\n}\n\n:host(.visible) {\n  .arrow,\n  .arrow::before {\n    position: absolute;\n    width: 8px;\n    height: 8px;\n    background: inherit;\n  }\n\n  .arrow {\n    visibility: hidden;\n  }\n\n  .arrow::before {\n    visibility: visible;\n    content: '';\n    transform: rotate(45deg);\n    background-color: var(--theme-tootlip--background);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  ComputePositionReturn,\n  flip,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport {\n  Component,\n  Element,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core';\n\ntype ArrowPosition = {\n  top?: string;\n  left?: string;\n  right?: string;\n};\n\nconst numberToPixel = (value: number) => (value != null ? `${value}px` : '');\n\n/**\n * @slot title-icon - Icon of tooltip title\n * @slot title-content - Content of tooltip title\n *\n * @since 1.4.0\n */\n@Component({\n  tag: 'ix-tooltip',\n  styleUrl: 'tooltip.scss',\n  shadow: true,\n})\nexport class Tooltip {\n  /**\n   * CSS selector for hover trigger element e.g. `for=\"[data-my-custom-select]\"`\n   */\n  @Prop() for: string;\n\n  /**\n   * Title of the tooltip\n   */\n  @Prop() titleContent: string;\n\n  /**\n   * Define if the user can access the tooltip via mouse.\n   */\n  @Prop() interactive = false;\n\n  /**\n   * Initial placement of the tooltip. If the placement don\"t have enough space,\n   * the tooltip will placed on another location.\n   *\n   * @since 1.5.0\n   */\n  @Prop() placement: 'top' | 'right' | 'bottom' | 'left' = 'top';\n\n  /** @internal */\n  @Prop() animationFrame = false;\n\n  @State() visible = false;\n\n  @Element() hostElement: HTMLIxTooltipElement;\n\n  private observer: MutationObserver;\n  private hideTooltipTimeout: NodeJS.Timeout;\n  private onMouseEnterBind = this.onTooltipShow.bind(this);\n  private onMouseLeaveBind = this.onTooltipHide.bind(this);\n  private disposeAutoUpdate?: () => void;\n  private tooltipCloseTimeInMS = 50;\n\n  private get arrowElement() {\n    return this.hostElement.shadowRoot.querySelector('.arrow') as HTMLElement;\n  }\n\n  private destroyAutoUpdate() {\n    if (this.disposeAutoUpdate !== undefined) {\n      this.disposeAutoUpdate();\n    }\n  }\n\n  private onTooltipShow(e: Event) {\n    this.showTooltip(e.target as Element);\n  }\n\n  private onTooltipHide() {\n    this.hideTooltip();\n  }\n\n  /** @internal */\n  @Method()\n  async showTooltip(anchorElement: any) {\n    clearTimeout(this.hideTooltipTimeout);\n    this.visible = true;\n    this.computeTooltipPosition(anchorElement);\n  }\n\n  /** @internal */\n  @Method()\n  async hideTooltip() {\n    this.hideTooltipTimeout = setTimeout(() => {\n      this.visible = false;\n    }, this.tooltipCloseTimeInMS);\n    this.destroyAutoUpdate();\n  }\n\n  private computeArrowPosition({\n    placement,\n    middlewareData,\n  }: ComputePositionReturn): ArrowPosition {\n    let { x, y } = middlewareData.arrow;\n\n    if (placement.startsWith('top')) {\n      return {\n        left: numberToPixel(x),\n        top: numberToPixel(y),\n      };\n    }\n\n    if (placement.startsWith('right')) {\n      return {\n        left: numberToPixel(-4),\n        top: numberToPixel(y),\n      };\n    }\n\n    if (placement.startsWith('bottom')) {\n      return {\n        left: numberToPixel(x),\n        top: numberToPixel(-4),\n      };\n    }\n\n    if (placement.startsWith('left')) {\n      return {\n        right: numberToPixel(-4),\n        top: numberToPixel(y),\n      };\n    }\n  }\n\n  private async computeTooltipPosition(target: Element) {\n    if (!target) {\n      return;\n    }\n    this.disposeAutoUpdate = autoUpdate(\n      target,\n      this.hostElement,\n      async () => {\n        setTimeout(async () => {\n          const computeResponse = await computePosition(\n            target,\n            this.hostElement,\n            {\n              strategy: 'fixed',\n              placement: this.placement,\n              middleware: [\n                shift(),\n                offset(8),\n                arrow({\n                  element: this.arrowElement,\n                }),\n                flip({\n                  fallbackStrategy: 'initialPlacement',\n                  padding: 10,\n                }),\n              ],\n            }\n          );\n\n          if (computeResponse.middlewareData.arrow) {\n            const arrowPosition = this.computeArrowPosition(computeResponse);\n            Object.assign(this.arrowElement.style, arrowPosition);\n          }\n\n          const { x, y } = computeResponse;\n          Object.assign(this.hostElement.style, {\n            left: x !== null ? `${x}px` : '',\n            top: y !== null ? `${y}px` : '',\n          });\n        });\n      },\n      {\n        ancestorResize: true,\n        ancestorScroll: true,\n        elementResize: true,\n        animationFrame: this.animationFrame,\n      }\n    );\n  }\n\n  private queryAnchorElements() {\n    return Array.from(document.querySelectorAll(this.for));\n  }\n\n  private registerTriggerListener() {\n    const elements = this.queryAnchorElements();\n    elements.forEach((e) => {\n      e.addEventListener('mouseenter', this.onMouseEnterBind);\n      e.addEventListener('mouseleave', this.onMouseLeaveBind);\n    });\n  }\n\n  private registerTooltipListener() {\n    this.hostElement.addEventListener('mouseenter', () => {\n      if (this.interactive) {\n        clearTimeout(this.hideTooltipTimeout);\n      }\n    });\n    this.hostElement.addEventListener('mouseleave', () => {\n      this.onTooltipHide();\n    });\n  }\n\n  componentDidLoad() {\n    if (this.interactive) {\n      this.tooltipCloseTimeInMS = 150;\n    }\n\n    this.observer = new MutationObserver(() => {\n      this.registerTriggerListener();\n    });\n\n    this.observer.observe(document.body, {\n      attributes: true,\n      attributeFilter: ['data-ix-tooltip'],\n      childList: true,\n      subtree: true,\n    });\n\n    this.registerTriggerListener();\n    this.registerTooltipListener();\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n    this.destroyAutoUpdate();\n  }\n\n  render() {\n    const tooltipContentClass = {\n      'tooltip-content': true,\n    };\n\n    return (\n      <Host\n        class={{\n          visible: this.visible,\n        }}\n      >\n        <div class={'tooltip-title'}>\n          <slot name=\"title-icon\"></slot>\n          <ix-typography variant=\"default-title\">\n            {this.titleContent}\n            <slot name=\"title-content\"></slot>\n          </ix-typography>\n        </div>\n        <div class={tooltipContentClass}>\n          <slot></slot>\n        </div>\n        <div class=\"arrow\"></div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}