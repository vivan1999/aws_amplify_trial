{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { m as menuController, a as applicationLayoutService } from './menu-service.js';\nimport { a as useContextConsumer, A as ApplicationLayoutContext } from './context.js';\nimport { d as defineCustomElement$3 } from './burger-menu.js';\nimport { d as defineCustomElement$2 } from './icon-button.js';\nimport { d as defineCustomElement$1 } from './spinner.js';\nconst applicationHeaderCss = \":host{display:flex;align-items:center;position:relative;width:100%;height:2.75rem;min-height:2.75rem;padding-left:1rem;color:var(--theme-app-header--color);background-color:var(--theme-app-header--background);border-bottom:var(--theme-app-header--border-width) solid var(--theme-app-header--border-color);z-index:var(--theme-z-index-fixed)}:host .name{margin-left:2.5rem;margin-right:2.5rem;color:var(--theme-app-header--color)}:host .logo{display:inline-flex;align-items:center;position:relative;height:32px;overflow:hidden;line-height:0rem;color:var(--theme-app-header-logo--color)}:host(.breakpoint-sm){padding-left:0.5rem}:host(.breakpoint-sm) .logo{margin-left:0.5rem}\";\nconst ApplicationHeader = /*@__PURE__*/proxyCustomElement(class ApplicationHeader extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.name = undefined;\n    this.breakpoint = 'lg';\n    this.menuExpanded = false;\n    this.suppressResponsive = false;\n  }\n  componentWillLoad() {\n    useContextConsumer(this.hostElement, ApplicationLayoutContext, ctx => {\n      if ((ctx === null || ctx === void 0 ? void 0 : ctx.host) === 'map-navigation') {\n        this.suppressResponsive = true;\n        this.breakpoint = 'md';\n        return;\n      }\n      this.breakpoint = applicationLayoutService.breakpoint;\n    });\n    this.menuDisposable = menuController.expandChange.on(show => {\n      this.menuExpanded = show;\n    });\n    this.modeDisposable = applicationLayoutService.onChange.on(mode => {\n      if (this.suppressResponsive) {\n        this.breakpoint = 'md';\n        return;\n      }\n      this.breakpoint = mode;\n    });\n  }\n  componentDidLoad() {\n    this.attachSiemensLogoIfLoaded();\n  }\n  disconnectedCallback() {\n    var _a, _b;\n    (_a = this.menuDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n    (_b = this.modeDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n  }\n  isLogoSlotted() {\n    const slotElement = this.hostElement.shadowRoot.querySelector('slot[name=\"logo\"]');\n    const nodes = slotElement.assignedNodes({\n      flatten: true\n    });\n    return nodes.length !== 0;\n  }\n  async attachSiemensLogoIfLoaded() {\n    await window.customElements.whenDefined('ix-siemens-logo');\n    const logoElement = document.createElement('ix-siemens-logo');\n    if (!this.isLogoSlotted()) {\n      this.hostElement.shadowRoot.querySelector('.logo').appendChild(logoElement);\n    }\n  }\n  async onMenuClick() {\n    menuController.toggle();\n  }\n  render() {\n    return h(Host, {\n      class: {\n        [`breakpoint-${this.breakpoint}`]: true\n      },\n      slot: \"application-header\"\n    }, this.breakpoint === 'sm' && this.suppressResponsive === false ? h(\"ix-burger-menu\", {\n      onClick: () => this.onMenuClick(),\n      expanded: this.menuExpanded\n    }) : null, h(\"div\", {\n      class: \"logo\"\n    }, h(\"slot\", {\n      name: \"logo\"\n    })), h(\"div\", {\n      class: \"name\"\n    }, this.name), h(\"slot\", null));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return applicationHeaderCss;\n  }\n}, [1, \"ix-application-header\", {\n  \"name\": [1],\n  \"breakpoint\": [32],\n  \"menuExpanded\": [32],\n  \"suppressResponsive\": [32]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-application-header\", \"ix-burger-menu\", \"ix-icon-button\", \"ix-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-application-header\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ApplicationHeader);\n        }\n        break;\n      case \"ix-burger-menu\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { ApplicationHeader as A, defineCustomElement as d };","map":{"version":3,"names":["applicationHeaderCss","ApplicationHeader","proxyCustomElement","HTMLElement","componentWillLoad","useContextConsumer","hostElement","ApplicationLayoutContext","ctx","host","suppressResponsive","breakpoint","applicationLayoutService","menuDisposable","menuController","expandChange","on","show","menuExpanded","modeDisposable","onChange","mode","componentDidLoad","attachSiemensLogoIfLoaded","disconnectedCallback","_a","dispose","_b","isLogoSlotted","slotElement","shadowRoot","querySelector","nodes","assignedNodes","flatten","length","window","customElements","whenDefined","logoElement","document","createElement","appendChild","onMenuClick","toggle","render","h","Host","class","slot","onClick","expanded","name"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\application-header\\application-header.scss?tag=ix-application-header&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\application-header\\application-header.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n:host {\n  display: flex;\n  align-items: center;\n  position: relative;\n  width: 100%;\n  height: 2.75rem;\n  min-height: 2.75rem;\n  padding-left: 1rem;\n\n  color: var(--theme-app-header--color);\n  background-color: var(--theme-app-header--background);\n\n  border-bottom: var(--theme-app-header--border-width) solid\n    var(--theme-app-header--border-color);\n\n  z-index: var(--theme-z-index-fixed);\n\n  .name {\n    margin-left: 2.5rem;\n    margin-right: 2.5rem;\n    color: var(--theme-app-header--color);\n  }\n\n  .logo {\n    display: inline-flex;\n    align-items: center;\n    position: relative;\n    height: 32px;\n    overflow: hidden;\n    line-height: 0rem;\n    color: var(--theme-app-header-logo--color);\n  }\n}\n\n:host(.breakpoint-sm) {\n  padding-left: 0.5rem;\n\n  .logo {\n    margin-left: 0.5rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State } from '@stencil/core';\nimport { applicationLayoutService } from '../utils/application-layout';\nimport { ApplicationLayoutContext } from '../utils/application-layout/context';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { useContextConsumer } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { Disposable } from '../utils/typed-event';\n\n@Component({\n  tag: 'ix-application-header',\n  styleUrl: 'application-header.scss',\n  shadow: true,\n})\nexport class ApplicationHeader {\n  @Element() hostElement!: HTMLIxApplicationHeaderElement;\n\n  /**\n   * Application name\n   */\n  @Prop() name: string;\n\n  @State() breakpoint: Breakpoint = 'lg';\n  @State() menuExpanded = false;\n\n  @State() suppressResponsive = false;\n\n  private menuDisposable?: Disposable;\n  private modeDisposable?: Disposable;\n\n  componentWillLoad() {\n    useContextConsumer(this.hostElement, ApplicationLayoutContext, (ctx) => {\n      if (ctx?.host === 'map-navigation') {\n        this.suppressResponsive = true;\n        this.breakpoint = 'md';\n        return;\n      }\n\n      this.breakpoint = applicationLayoutService.breakpoint;\n    });\n\n    this.menuDisposable = menuController.expandChange.on((show) => {\n      this.menuExpanded = show;\n    });\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      if (this.suppressResponsive) {\n        this.breakpoint = 'md';\n        return;\n      }\n\n      this.breakpoint = mode;\n    });\n  }\n\n  componentDidLoad() {\n    this.attachSiemensLogoIfLoaded();\n  }\n\n  disconnectedCallback() {\n    this.menuDisposable?.dispose();\n    this.modeDisposable?.dispose();\n  }\n\n  private isLogoSlotted() {\n    const slotElement = this.hostElement.shadowRoot.querySelector(\n      'slot[name=\"logo\"]'\n    ) as HTMLSlotElement;\n    const nodes = slotElement.assignedNodes({\n      flatten: true,\n    });\n\n    return nodes.length !== 0;\n  }\n\n  private async attachSiemensLogoIfLoaded() {\n    await window.customElements.whenDefined('ix-siemens-logo');\n    const logoElement = document.createElement('ix-siemens-logo');\n    if (!this.isLogoSlotted()) {\n      this.hostElement.shadowRoot\n        .querySelector('.logo')\n        .appendChild(logoElement);\n    }\n  }\n\n  private async onMenuClick() {\n    menuController.toggle();\n  }\n\n  render() {\n    return (\n      <Host\n        class={{ [`breakpoint-${this.breakpoint}`]: true }}\n        slot=\"application-header\"\n      >\n        {this.breakpoint === 'sm' && this.suppressResponsive === false ? (\n          <ix-burger-menu\n            onClick={() => this.onMenuClick()}\n            expanded={this.menuExpanded}\n          ></ix-burger-menu>\n        ) : null}\n        <div class=\"logo\">\n          <slot name=\"logo\"></slot>\n        </div>\n        <div class=\"name\">{this.name}</div>\n        <slot></slot>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;;AAAA,MAAMA,oBAAoB,GAAG,mqBAAmqB;MCsBnrBC,iBAAiB,gBAAAC,kBAAA,OAAAD,iBAAA,SAAAE,WAAA;;;;;;sBAQM,IAAI;wBACd,KAAK;8BAEC,KAAK;;EAKnCC,iBAAiBA,CAAA;IACfC,kBAAkB,CAAC,IAAI,CAACC,WAAW,EAAEC,wBAAwB,EAAGC,GAAG;MACjE,IAAI,CAAAA,GAAG,aAAHA,GAAG,uBAAHA,GAAG,CAAEC,IAAI,MAAK,gBAAgB,EAAE;QAClC,IAAI,CAACC,kBAAkB,GAAG,IAAI;QAC9B,IAAI,CAACC,UAAU,GAAG,IAAI;QACtB;;MAGF,IAAI,CAACA,UAAU,GAAGC,wBAAwB,CAACD,UAAU;KACtD,CAAC;IAEF,IAAI,CAACE,cAAc,GAAGC,cAAc,CAACC,YAAY,CAACC,EAAE,CAAEC,IAAI;MACxD,IAAI,CAACC,YAAY,GAAGD,IAAI;KACzB,CAAC;IAEF,IAAI,CAACE,cAAc,GAAGP,wBAAwB,CAACQ,QAAQ,CAACJ,EAAE,CAAEK,IAAI;MAC9D,IAAI,IAAI,CAACX,kBAAkB,EAAE;QAC3B,IAAI,CAACC,UAAU,GAAG,IAAI;QACtB;;MAGF,IAAI,CAACA,UAAU,GAAGU,IAAI;KACvB,CAAC;;EAGJC,gBAAgBA,CAAA;IACd,IAAI,CAACC,yBAAyB,EAAE;;EAGlCC,oBAAoBA,CAAA;;IAClB,CAAAC,EAAA,OAAI,CAACZ,cAAc,cAAAY,EAAA,uBAAAA,EAAA,CAAEC,OAAO,EAAE;IAC9B,CAAAC,EAAA,OAAI,CAACR,cAAc,cAAAQ,EAAA,uBAAAA,EAAA,CAAED,OAAO,EAAE;;EAGxBE,aAAaA,CAAA;IACnB,MAAMC,WAAW,GAAG,IAAI,CAACvB,WAAW,CAACwB,UAAU,CAACC,aAAa,CAC3D,mBAAmB,CACD;IACpB,MAAMC,KAAK,GAAGH,WAAW,CAACI,aAAa,CAAC;MACtCC,OAAO,EAAE;KACV,CAAC;IAEF,OAAOF,KAAK,CAACG,MAAM,KAAK,CAAC;;EAGnB,MAAMZ,yBAAyBA,CAAA;IACrC,MAAMa,MAAM,CAACC,cAAc,CAACC,WAAW,CAAC,iBAAiB,CAAC;IAC1D,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,iBAAiB,CAAC;IAC7D,IAAI,CAAC,IAAI,CAACb,aAAa,EAAE,EAAE;MACzB,IAAI,CAACtB,WAAW,CAACwB,UAAU,CACxBC,aAAa,CAAC,OAAO,CAAC,CACtBW,WAAW,CAACH,WAAW,CAAC;;;EAIvB,MAAMI,WAAWA,CAAA;IACvB7B,cAAc,CAAC8B,MAAM,EAAE;;EAGzBC,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI;MACHC,KAAK,EAAE;QAAE,CAAC,cAAc,IAAI,CAACrC,UAAU,EAAE,GAAG;MAAI,CAAE;MAClDsC,IAAI,EAAC;IAAoB,GAExB,IAAI,CAACtC,UAAU,KAAK,IAAI,IAAI,IAAI,CAACD,kBAAkB,KAAK,KAAK,GAC5DoC,CAAA;MACEI,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACP,WAAW,EAAE;MACjCQ,QAAQ,EAAE,IAAI,CAACjC;IAAY,EACX,GAChB,IAAI,EACR4B,CAAA;MAAKE,KAAK,EAAC;IAAM,GACfF,CAAA;MAAMM,IAAI,EAAC;IAAM,EAAQ,CACrB,EACNN,CAAA;MAAKE,KAAK,EAAC;IAAM,GAAE,IAAI,CAACI,IAAI,CAAO,EACnCN,CAAA,cAAa,CACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}