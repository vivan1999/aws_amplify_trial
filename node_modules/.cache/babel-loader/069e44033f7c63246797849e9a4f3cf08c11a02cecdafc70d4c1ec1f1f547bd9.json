{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { d as defineCustomElement$4 } from './icon-button.js';\nimport { d as defineCustomElement$3 } from './spinner.js';\nimport { d as defineCustomElement$2 } from './typography.js';\nconst modalHeaderCss = \":host{display:flex;padding:2px 16px 16px 10px;align-items:center;align-self:stretch}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .modal-close{margin-left:auto;margin-right:-20px}:host .modal-icon{margin-right:1rem}\";\nconst ModalHeader = /*@__PURE__*/proxyCustomElement(class ModalHeader extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.closeClick = createEvent(this, \"closeClick\", 7);\n    this.hideClose = false;\n    this.icon = undefined;\n    this.iconColor = undefined;\n  }\n  onIconChange(icon) {\n    if (this.parentDialog) {\n      if (icon) {\n        this.parentDialog.classList.add('with-icon');\n      } else {\n        this.parentDialog.classList.remove('with-icon');\n      }\n    }\n  }\n  componentDidLoad() {\n    this.parentDialog = this.hostElement.closest('ix-modal');\n    this.onIconChange(this.icon);\n  }\n  onCloseClick(event) {\n    const ce = this.closeClick.emit(event);\n    if (ce.defaultPrevented || event.defaultPrevented) {\n      return;\n    }\n    this.parentDialog.dismissModal();\n  }\n  render() {\n    return h(Host, null, this.icon ? h(\"ix-icon\", {\n      class: 'modal-icon',\n      name: this.icon,\n      color: this.iconColor\n    }) : null, h(\"ix-typography\", {\n      variant: 'default-title'\n    }, h(\"slot\", null)), !this.hideClose ? h(\"ix-icon-button\", {\n      onClick: event => this.onCloseClick(event),\n      ghost: true,\n      icon: \"close\",\n      class: 'modal-close'\n    }) : null);\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"icon\": [\"onIconChange\"]\n    };\n  }\n  static get style() {\n    return modalHeaderCss;\n  }\n}, [1, \"ix-modal-header\", {\n  \"hideClose\": [4, \"hide-close\"],\n  \"icon\": [1],\n  \"iconColor\": [1, \"icon-color\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-modal-header\", \"ix-icon-button\", \"ix-spinner\", \"ix-typography\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-modal-header\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ModalHeader);\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-typography\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxModalHeader = ModalHeader;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxModalHeader, defineCustomElement };","map":{"version":3,"names":["modalHeaderCss","ModalHeader","proxyCustomElement","HTMLElement","onIconChange","icon","parentDialog","classList","add","remove","componentDidLoad","hostElement","closest","onCloseClick","event","ce","closeClick","emit","defaultPrevented","dismissModal","render","h","Host","class","name","color","iconColor","variant","hideClose","onClick","ghost"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\modal-header\\modal-header.scss?tag=ix-modal-header&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\modal-header\\modal-header.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: flex;\n  padding: 2px 16px 16px 10px;\n  align-items: center;\n  align-self: stretch;\n\n  .modal-close {\n    margin-left: auto;\n    margin-right: -20px;\n  }\n\n  .modal-icon {\n    margin-right: 1rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  Watch,\n} from '@stencil/core';\n\n/**\n * @since 2.0.0\n */\n@Component({\n  tag: 'ix-modal-header',\n  styleUrl: 'modal-header.scss',\n  shadow: true,\n})\nexport class ModalHeader {\n  @Element() hostElement!: HTMLIxModalHeaderElement;\n\n  /**\n   * Hide the close button\n   */\n  @Prop() hideClose = false;\n\n  /**\n   * Icon of the Header\n   */\n  @Prop() icon: string;\n  @Watch('icon')\n  onIconChange(icon: string) {\n    if (this.parentDialog) {\n      if (icon) {\n        this.parentDialog.classList.add('with-icon');\n      } else {\n        this.parentDialog.classList.remove('with-icon');\n      }\n    }\n  }\n\n  /**\n   * Icon color\n   */\n  @Prop() iconColor: string;\n\n  /**\n   * Close icon is clicked\n   */\n  @Event() closeClick: EventEmitter<MouseEvent>;\n\n  private parentDialog: HTMLIxModalElement;\n\n  componentDidLoad() {\n    this.parentDialog = this.hostElement.closest('ix-modal');\n    this.onIconChange(this.icon);\n  }\n\n  private onCloseClick(event: MouseEvent) {\n    const ce = this.closeClick.emit(event);\n    if (ce.defaultPrevented || event.defaultPrevented) {\n      return;\n    }\n\n    this.parentDialog.dismissModal();\n  }\n\n  render() {\n    return (\n      <Host>\n        {this.icon ? (\n          <ix-icon\n            class={'modal-icon'}\n            name={this.icon}\n            color={this.iconColor}\n          ></ix-icon>\n        ) : null}\n        <ix-typography variant={'default-title'}>\n          <slot></slot>\n        </ix-typography>\n        {!this.hideClose ? (\n          <ix-icon-button\n            onClick={(event) => this.onCloseClick(event)}\n            ghost\n            icon=\"close\"\n            class={'modal-close'}\n          ></ix-icon-button>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;AAAA,MAAMA,cAAc,GAAG,6wBAA6wB;MC4BvxBC,WAAW,gBAAAC,kBAAA,OAAAD,WAAA,SAAAE,WAAA;;;;;;qBAMF,KAAK;;;;EAOzBC,YAAYA,CAACC,IAAY;IACvB,IAAI,IAAI,CAACC,YAAY,EAAE;MACrB,IAAID,IAAI,EAAE;QACR,IAAI,CAACC,YAAY,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;OAC7C,MAAM;QACL,IAAI,CAACF,YAAY,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;;;;EAiBrDC,gBAAgBA,CAAA;IACd,IAAI,CAACJ,YAAY,GAAG,IAAI,CAACK,WAAW,CAACC,OAAO,CAAC,UAAU,CAAC;IACxD,IAAI,CAACR,YAAY,CAAC,IAAI,CAACC,IAAI,CAAC;;EAGtBQ,YAAYA,CAACC,KAAiB;IACpC,MAAMC,EAAE,GAAG,IAAI,CAACC,UAAU,CAACC,IAAI,CAACH,KAAK,CAAC;IACtC,IAAIC,EAAE,CAACG,gBAAgB,IAAIJ,KAAK,CAACI,gBAAgB,EAAE;MACjD;;IAGF,IAAI,CAACZ,YAAY,CAACa,YAAY,EAAE;;EAGlCC,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI,QACF,IAAI,CAACjB,IAAI,GACRgB,CAAA;MACEE,KAAK,EAAE,YAAY;MACnBC,IAAI,EAAE,IAAI,CAACnB,IAAI;MACfoB,KAAK,EAAE,IAAI,CAACC;IAAS,EACZ,GACT,IAAI,EACRL,CAAA;MAAeM,OAAO,EAAE;IAAe,GACrCN,CAAA,cAAa,CACC,EACf,CAAC,IAAI,CAACO,SAAS,GACdP,CAAA;MACEQ,OAAO,EAAGf,KAAK,IAAK,IAAI,CAACD,YAAY,CAACC,KAAK,CAAC;MAC5CgB,KAAK;MACLzB,IAAI,EAAC,OAAO;MACZkB,KAAK,EAAE;IAAa,EACJ,GAChB,IAAI,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}