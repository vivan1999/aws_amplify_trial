{"ast":null,"code":"import { T as TypedEvent } from './typed-event-a230184a.js';\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass DefaultFrameworkDelegate {\n  async attachView(view, config) {\n    var _a;\n    const attachToElement = (_a = config === null || config === void 0 ? void 0 : config.parentElement) !== null && _a !== void 0 ? _a : document.body;\n    attachToElement.appendChild(view);\n    return view;\n  }\n  async removeView(view) {\n    view.remove();\n  }\n}\nconst coreDelegate = new DefaultFrameworkDelegate();\nlet currentDelegate = coreDelegate;\nfunction registerFrameworkDelegate(delegate) {\n  currentDelegate = delegate;\n}\nconst resolveDelegate = () => {\n  return currentDelegate;\n};\nconst getCoreDelegate = () => coreDelegate;\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction setA11yAttributes$1(element, config) {\n  const ariaDescribedby = config.ariaDescribedby;\n  const ariaLabelledby = config.ariaLabelledby;\n  delete config['ariaDescribedby'];\n  delete config['ariaLabelledby'];\n  if (ariaDescribedby) {\n    element.setAttribute('aria-describedby', ariaDescribedby);\n  }\n  if (ariaLabelledby) {\n    element.setAttribute('aria-labelledby', ariaLabelledby);\n  }\n}\nfunction createConfirmButtons(textOkay, textCancel, payloadOkay, payloadCancel) {\n  let actions = [];\n  if (textCancel !== undefined) {\n    actions = [...actions, {\n      id: 'cancel',\n      text: textCancel,\n      type: 'cancel',\n      payload: payloadCancel\n    }];\n  }\n  return [...actions, {\n    id: 'okay',\n    text: textOkay,\n    type: 'okay',\n    payload: payloadOkay\n  }];\n}\nasync function showMessage(config) {\n  const onMessageAction = new TypedEvent();\n  const dialog = document.createElement('ix-modal');\n  const header = document.createElement('ix-modal-header');\n  const content = document.createElement('ix-modal-content');\n  const footer = document.createElement('ix-modal-footer');\n  setA11yAttributes$1(dialog, config);\n  Object.assign(header, config);\n  Object.assign(content, config);\n  Object.assign(footer, config);\n  header.innerText = config.messageTitle;\n  content.innerText = config.message;\n  config.actions.forEach(({\n    id,\n    text,\n    type,\n    payload\n  }) => {\n    const button = document.createElement('ix-button');\n    button.innerText = text;\n    footer.appendChild(button);\n    if (type === 'okay') {\n      button.variant = 'primary';\n      button.addEventListener('click', () => dialog.closeModal({\n        actionId: id,\n        payload\n      }));\n      return;\n    }\n    if (type === 'cancel') {\n      button.variant = 'primary';\n      button.outline = true;\n      button.addEventListener('click', () => dialog.dismissModal({\n        actionId: id,\n        payload\n      }));\n      return;\n    }\n  });\n  dialog.appendChild(header);\n  dialog.appendChild(content);\n  dialog.appendChild(footer);\n  const dialogRef = await getCoreDelegate().attachView(dialog);\n  dialogRef.addEventListener('dialogClose', event => {\n    onMessageAction.emit(event.detail);\n    dialogRef.remove();\n  });\n  dialogRef.addEventListener('dialogDismiss', event => {\n    onMessageAction.emit(event.detail);\n    dialogRef.remove();\n  });\n  dialogRef.showModal();\n  return onMessageAction;\n}\nshowMessage.info = (title, message, textOkay, textCancel, payloadOkay, payloadCancel) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'info',\n    actions: createConfirmButtons(textOkay, textCancel, payloadOkay, payloadCancel)\n  });\n};\nshowMessage.warning = (title, message, textOkay, textCancel, payloadOkay, payloadCancel) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'warning',\n    iconColor: 'color-warning',\n    actions: createConfirmButtons(textOkay, textCancel, payloadOkay, payloadCancel)\n  });\n};\nshowMessage.error = (title, message, textOkay, textCancel, payloadOkay, payloadCancel) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'error',\n    iconColor: 'color-alarm',\n    actions: createConfirmButtons(textOkay, textCancel, payloadOkay, payloadCancel)\n  });\n};\nshowMessage.success = (title, message, textOkay, textCancel, payloadOkay, payloadCancel) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'success',\n    iconColor: 'color-success',\n    actions: createConfirmButtons(textOkay, textCancel, payloadOkay, payloadCancel)\n  });\n};\nshowMessage.question = (title, message, textOkay, textCancel, payloadOkay, payloadCancel) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'question',\n    actions: createConfirmButtons(textOkay, textCancel, payloadOkay, payloadCancel)\n  });\n};\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction setA11yAttributes(element, config) {\n  const ariaDescribedby = config.ariaDescribedby;\n  const ariaLabelledby = config.ariaLabelledby;\n  delete config['ariaDescribedby'];\n  delete config['ariaLabelledby'];\n  if (ariaDescribedby) {\n    element.setAttribute('aria-describedby', ariaDescribedby);\n  }\n  if (ariaLabelledby) {\n    element.setAttribute('aria-labelledby', ariaLabelledby);\n  }\n}\nfunction getIxModal(element) {\n  return element.closest('ix-modal');\n}\nfunction closeModal(element, closeResult) {\n  const dialog = getIxModal(element);\n  if (dialog) {\n    dialog.closeModal(closeResult);\n    return;\n  }\n}\nfunction dismissModal(element, dismissResult) {\n  const dialog = getIxModal(element);\n  if (dialog) {\n    dialog.dismissModal(dismissResult);\n    return;\n  }\n}\nasync function showModal(config) {\n  const delegate = resolveDelegate();\n  let dialogRef;\n  const onClose = new TypedEvent();\n  const onDismiss = new TypedEvent();\n  if (typeof config.content === 'string') {\n    const dialog = document.createElement('ix-modal');\n    dialog.innerText = config.content;\n    dialogRef = await getCoreDelegate().attachView(dialog);\n  }\n  if (config.content instanceof HTMLElement && config.content.tagName !== 'IX-MODAL') {\n    const dialog = document.createElement('ix-modal');\n    dialog.appendChild(config.content);\n    dialogRef = await getCoreDelegate().attachView(dialog);\n  }\n  if (!dialogRef) {\n    dialogRef = await delegate.attachView(config.content);\n  }\n  setA11yAttributes(dialogRef, config);\n  Object.assign(dialogRef, config);\n  dialogRef.setAttribute('ariaDescribedby', 'Test');\n  dialogRef.showModal();\n  dialogRef.addEventListener('dialogClose', async ({\n    detail\n  }) => {\n    onClose.emit(detail);\n    await delegate.removeView(dialogRef);\n  });\n  dialogRef.addEventListener('dialogDismiss', async ({\n    detail\n  }) => {\n    onDismiss.emit(detail);\n    await delegate.removeView(dialogRef);\n  });\n  return {\n    htmlElement: dialogRef,\n    onClose,\n    onDismiss\n  };\n}\nexport { resolveDelegate as a, showModal as b, closeModal as c, dismissModal as d, getCoreDelegate as g, registerFrameworkDelegate as r, showMessage as s };","map":{"version":3,"names":["DefaultFrameworkDelegate","attachView","view","config","attachToElement","_a","parentElement","document","body","appendChild","removeView","remove","coreDelegate","currentDelegate","registerFrameworkDelegate","delegate","resolveDelegate","getCoreDelegate","setA11yAttributes$1","setA11yAttributes","element","ariaDescribedby","ariaLabelledby","setAttribute","createConfirmButtons","textOkay","textCancel","payloadOkay","payloadCancel","actions","undefined","id","text","type","payload","showMessage","onMessageAction","TypedEvent","dialog","createElement","header","content","footer","Object","assign","innerText","messageTitle","message","forEach","button","variant","addEventListener","closeModal","actionId","outline","dismissModal","dialogRef","event","emit","detail","showModal","info","title","icon","warning","iconColor","error","success","question","getIxModal","closest","closeResult","dismissResult","onClose","onDismiss","HTMLElement","tagName","htmlElement"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\dist\\esm\\src\\components\\utils\\delegate.ts","D:\\pci_project_new\\node_modules\\@siemens\\ix\\dist\\esm\\src\\components\\utils\\modal\\message.ts","D:\\pci_project_new\\node_modules\\@siemens\\ix\\dist\\esm\\src\\components\\utils\\modal\\modal.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport type DelegateConfig = {\n  parentElement?: Element;\n};\n\nexport interface FrameworkDelegate {\n  attachView<R = HTMLElement>(view: any, config?: DelegateConfig): Promise<R>;\n  removeView(view: any): Promise<void>;\n}\n\nclass DefaultFrameworkDelegate implements FrameworkDelegate {\n  async attachView<R = HTMLElement>(\n    view: any,\n    config?: DelegateConfig\n  ): Promise<R> {\n    const attachToElement = config?.parentElement ?? document.body;\n    attachToElement.appendChild(view);\n    return view;\n  }\n\n  async removeView(view: any) {\n    view.remove();\n  }\n}\n\nconst coreDelegate = new DefaultFrameworkDelegate();\nlet currentDelegate: FrameworkDelegate = coreDelegate;\n\nexport function registerFrameworkDelegate(delegate: FrameworkDelegate) {\n  currentDelegate = delegate;\n}\n\nexport const resolveDelegate = () => {\n  return currentDelegate;\n};\n\nexport const getCoreDelegate = () => coreDelegate;\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getCoreDelegate } from '../delegate';\nimport { TypedEvent } from '../typed-event';\n\nfunction setA11yAttributes(element: HTMLElement, config: MessageContent) {\n  const ariaDescribedby = config.ariaDescribedby;\n  const ariaLabelledby = config.ariaLabelledby;\n\n  delete config['ariaDescribedby'];\n  delete config['ariaLabelledby'];\n\n  if (ariaDescribedby) {\n    element.setAttribute('aria-describedby', ariaDescribedby);\n  }\n\n  if (ariaLabelledby) {\n    element.setAttribute('aria-labelledby', ariaLabelledby);\n  }\n}\n\nfunction createConfirmButtons(\n  textOkay: string,\n  textCancel?: string,\n  payloadOkay?: any,\n  payloadCancel?: any\n) {\n  let actions = [];\n  if (textCancel !== undefined) {\n    actions = [\n      ...actions,\n      {\n        id: 'cancel',\n        text: textCancel,\n        type: 'cancel',\n        payload: payloadCancel,\n      },\n    ];\n  }\n  return [\n    ...actions,\n    {\n      id: 'okay',\n      text: textOkay,\n      type: 'okay',\n      payload: payloadOkay,\n    },\n  ];\n}\n\nexport type MessageContent = {\n  icon: string;\n  iconColor?: string;\n  messageTitle: string;\n  message: string;\n  actions: {\n    id: string;\n    type: 'button-primary' | 'button-secondary' | 'okay' | 'cancel';\n    text: string;\n    payload?: any;\n  }[];\n  ariaLabelledby?: string;\n  ariaDescribedby?: string;\n};\n\nexport async function showMessage<T>(config: MessageContent) {\n  const onMessageAction = new TypedEvent<{\n    actionId: string;\n    payload: T;\n  }>();\n  const dialog = document.createElement('ix-modal');\n  const header = document.createElement('ix-modal-header');\n  const content = document.createElement('ix-modal-content');\n  const footer = document.createElement('ix-modal-footer');\n\n  setA11yAttributes(dialog, config);\n\n  Object.assign(header, config);\n  Object.assign(content, config);\n  Object.assign(footer, config);\n\n  header.innerText = config.messageTitle;\n  content.innerText = config.message;\n\n  config.actions.forEach(({ id, text, type, payload }) => {\n    const button = document.createElement('ix-button');\n    button.innerText = text;\n    footer.appendChild(button);\n\n    if (type === 'okay') {\n      button.variant = 'primary';\n      button.addEventListener('click', () =>\n        dialog.closeModal({\n          actionId: id,\n          payload,\n        })\n      );\n      return;\n    }\n    if (type === 'cancel') {\n      button.variant = 'primary';\n      button.outline = true;\n      button.addEventListener('click', () =>\n        dialog.dismissModal({\n          actionId: id,\n          payload,\n        })\n      );\n      return;\n    }\n  });\n\n  dialog.appendChild(header);\n  dialog.appendChild(content);\n  dialog.appendChild(footer);\n\n  const dialogRef = await getCoreDelegate().attachView<HTMLIxModalElement>(\n    dialog\n  );\n\n  dialogRef.addEventListener(\n    'dialogClose',\n    (\n      event: CustomEvent<{\n        actionId: string;\n        payload: T;\n      }>\n    ) => {\n      onMessageAction.emit(event.detail);\n      dialogRef.remove();\n    }\n  );\n\n  dialogRef.addEventListener(\n    'dialogDismiss',\n    (\n      event: CustomEvent<{\n        actionId: string;\n        payload: T;\n      }>\n    ) => {\n      onMessageAction.emit(event.detail);\n      dialogRef.remove();\n    }\n  );\n\n  dialogRef.showModal();\n  return onMessageAction;\n}\n\nshowMessage.info = (\n  title: string,\n  message: string,\n  textOkay: string,\n  textCancel?: string,\n  payloadOkay?: any,\n  payloadCancel?: any\n) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'info',\n    actions: createConfirmButtons(\n      textOkay,\n      textCancel,\n      payloadOkay,\n      payloadCancel\n    ),\n  });\n};\n\nshowMessage.warning = (\n  title: string,\n  message: string,\n  textOkay: string,\n  textCancel?: string,\n  payloadOkay?: any,\n  payloadCancel?: any\n) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'warning',\n    iconColor: 'color-warning',\n    actions: createConfirmButtons(\n      textOkay,\n      textCancel,\n      payloadOkay,\n      payloadCancel\n    ),\n  });\n};\n\nshowMessage.error = (\n  title: string,\n  message: string,\n  textOkay: string,\n  textCancel?: string,\n  payloadOkay?: any,\n  payloadCancel?: any\n) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'error',\n    iconColor: 'color-alarm',\n    actions: createConfirmButtons(\n      textOkay,\n      textCancel,\n      payloadOkay,\n      payloadCancel\n    ),\n  });\n};\n\nshowMessage.success = (\n  title: string,\n  message: string,\n  textOkay: string,\n  textCancel?: string,\n  payloadOkay?: any,\n  payloadCancel?: any\n) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'success',\n    iconColor: 'color-success',\n    actions: createConfirmButtons(\n      textOkay,\n      textCancel,\n      payloadOkay,\n      payloadCancel\n    ),\n  });\n};\n\nshowMessage.question = (\n  title: string,\n  message: string,\n  textOkay: string,\n  textCancel?: string,\n  payloadOkay?: any,\n  payloadCancel?: any\n) => {\n  return showMessage({\n    message,\n    messageTitle: title,\n    icon: 'question',\n    actions: createConfirmButtons(\n      textOkay,\n      textCancel,\n      payloadOkay,\n      payloadCancel\n    ),\n  });\n};\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { IxModalSize } from '../../modal/modal';\nimport { getCoreDelegate, resolveDelegate } from '../delegate';\nimport { TypedEvent } from '../typed-event';\n\nexport function setA11yAttributes(element: HTMLElement, config: ModalConfig) {\n  const ariaDescribedby = config.ariaDescribedby;\n  const ariaLabelledby = config.ariaLabelledby;\n\n  delete config['ariaDescribedby'];\n  delete config['ariaLabelledby'];\n\n  if (ariaDescribedby) {\n    element.setAttribute('aria-describedby', ariaDescribedby);\n  }\n\n  if (ariaLabelledby) {\n    element.setAttribute('aria-labelledby', ariaLabelledby);\n  }\n}\n\nexport interface ModalConfig<TReason = any, CONTENT = any> {\n  animation?: boolean;\n  ariaDescribedby?: string;\n  ariaLabelledby?: string;\n  backdrop?: boolean;\n  closeOnBackdropClick?: boolean;\n  beforeDismiss?: (reason?: TReason) => boolean | Promise<boolean>;\n  centered?: boolean;\n  container?: string | HTMLElement;\n  content: CONTENT | string;\n  keyboard?: boolean;\n  size?: IxModalSize;\n  title?: string;\n}\n\nexport interface ModalInstance<TReason = any> {\n  htmlElement: HTMLIxModalElement;\n  onClose: TypedEvent<TReason>;\n  onDismiss: TypedEvent<TReason>;\n}\n\nfunction getIxModal(element: Element) {\n  return element.closest('ix-modal');\n}\n\nexport function closeModal<TClose = any>(\n  element: Element,\n  closeResult: TClose\n) {\n  const dialog = getIxModal(element);\n  if (dialog) {\n    dialog.closeModal(closeResult);\n    return;\n  }\n}\n\nexport function dismissModal(element: Element, dismissResult?: any) {\n  const dialog = getIxModal(element);\n  if (dialog) {\n    dialog.dismissModal(dismissResult);\n    return;\n  }\n}\n\nexport async function showModal<T>(\n  config: ModalConfig<T>\n): Promise<ModalInstance<T>> {\n  const delegate = resolveDelegate();\n  let dialogRef: HTMLIxModalElement;\n  const onClose = new TypedEvent<T>();\n  const onDismiss = new TypedEvent<T>();\n\n  if (typeof config.content === 'string') {\n    const dialog = document.createElement('ix-modal');\n    dialog.innerText = config.content;\n    dialogRef = await getCoreDelegate().attachView(dialog);\n  }\n\n  if (\n    config.content instanceof HTMLElement &&\n    config.content.tagName !== 'IX-MODAL'\n  ) {\n    const dialog = document.createElement('ix-modal');\n    dialog.appendChild(config.content);\n    dialogRef = await getCoreDelegate().attachView(dialog);\n  }\n\n  if (!dialogRef) {\n    dialogRef = await delegate.attachView<HTMLIxModalElement>(config.content);\n  }\n\n  setA11yAttributes(dialogRef, config);\n  Object.assign(dialogRef, config);\n\n  dialogRef.setAttribute('ariaDescribedby', 'Test');\n\n  dialogRef.showModal();\n  dialogRef.addEventListener('dialogClose', async ({ detail }: CustomEvent) => {\n    onClose.emit(detail);\n    await delegate.removeView(dialogRef);\n  });\n\n  dialogRef.addEventListener(\n    'dialogDismiss',\n    async ({ detail }: CustomEvent) => {\n      onDismiss.emit(detail);\n      await delegate.removeView(dialogRef);\n    }\n  );\n\n  return {\n    htmlElement: dialogRef,\n    onClose,\n    onDismiss,\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}