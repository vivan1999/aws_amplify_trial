{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { i as inline, s as shift, o as offset, f as flip, a as autoUpdate, b as arrow, c as computePosition } from './floating-ui.dom.esm.js';\nconst validationTooltipCss = \".text-xs{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.625rem;font-weight:400;line-height:1.4em;color:var(--theme-color-std-text)}.text-s{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.75rem;font-weight:400;line-height:1.5em;color:var(--theme-color-std-text)}.text-caption{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.75rem;font-weight:700;line-height:1.5em;color:var(--theme-color-std-text)}.text-caption-single{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.75rem;font-weight:700;line-height:1em;color:var(--theme-color-std-text)}.text-default{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:400;line-height:1.429em;color:var(--theme-color-std-text)}.text-default-single{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:400;line-height:1.143em;color:var(--theme-color-std-text)}.text-default-title{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:700;line-height:1.429em;color:var(--theme-color-std-text)}.text-default-title-single{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:700;line-height:1.143em;color:var(--theme-color-std-text)}.text-l{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:1rem;font-weight:400;line-height:1.5em;color:var(--theme-color-std-text)}.text-l-single{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:1rem;font-weight:400;line-height:1.25em;color:var(--theme-color-std-text)}.text-l-title{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:1rem;font-weight:700;line-height:1.5em;color:var(--theme-color-std-text)}.text-l-title-single{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:1rem;font-weight:700;line-height:1.25em;color:var(--theme-color-std-text)}.text-h2{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:1.375rem;font-weight:700;line-height:1.455em;color:var(--theme-color-std-text)}.text-xl{-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:1.375rem;font-weight:400;line-height:1.091em;color:var(--theme-color-std-text)}a{color:var(--theme-color-primary)}:host{display:inline-block;position:relative;width:100%}:host .validation-tooltip{background-color:var(--theme-tootlip--background);color:var(--theme-tooltip--color);padding:5px 10px;border-radius:4px;font-size:13px;border:1px solid var(--theme-tooltip--border-color);box-shadow:0 0 2px 0 rgba(0, 0, 40, 0.1), 0 4px 8px 0 rgba(0, 0, 40, 0.1), 0 12px 18px 0 rgba(0, 0, 40, 0.1)}:host .validation-tooltip #arrow,:host .validation-tooltip #arrow::before{position:absolute;width:8px;height:8px;background:inherit}:host .validation-tooltip #arrow{visibility:hidden}:host .validation-tooltip #arrow::before{visibility:visible;content:\\\"\\\";transform:rotate(45deg);background-color:var(--theme-tootlip--background)}:host .validation-tooltip>#arrow{bottom:-5px}:host .validation-tooltip>#arrow::before{border-right:1px solid var(--theme-tooltip--border-color);border-bottom:1px solid var(--theme-tooltip--border-color)}\";\nconst ValidationTooltip = /*@__PURE__*/proxyCustomElement(class ValidationTooltip extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.onSubmitBind = this.onSubmit.bind(this);\n    this.onInputFocusBind = this.onInputFocus.bind(this);\n    this.message = undefined;\n    this.placement = 'top';\n    this.suppressAutomaticPlacement = false;\n    this.isInputValid = true;\n    this.tooltipPosition = undefined;\n    this.arrowPosition = undefined;\n  }\n  get arrow() {\n    return this.hostElement.shadowRoot.querySelector('#arrow');\n  }\n  get inputElement() {\n    return this.hostElement.querySelector('input');\n  }\n  get formElement() {\n    return this.inputElement.form;\n  }\n  get tooltipElement() {\n    return this.hostElement.shadowRoot.querySelector('.validation-tooltip');\n  }\n  destroyAutoUpdate() {\n    this.tooltipElement.style.display = 'none';\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n    }\n  }\n  applyTooltipPosition() {\n    this.tooltipElement.style.display = 'block';\n    let positionConfig = {\n      strategy: 'fixed',\n      middleware: [inline(), shift(), offset({\n        mainAxis: 8\n      })]\n    };\n    if (!this.suppressAutomaticPlacement) {\n      positionConfig.middleware.push(flip({\n        fallbackStrategy: 'initialPlacement'\n      }));\n    }\n    positionConfig.placement = this.placement;\n    this.autoUpdateCleanup = autoUpdate(this.inputElement, this.tooltipElement, async () => {\n      positionConfig.middleware = [...positionConfig.middleware, arrow({\n        element: this.arrow\n      })];\n      const computeResponse = await computePosition(this.inputElement, this.tooltipElement, positionConfig);\n      if (computeResponse.middlewareData.arrow) {\n        const {\n          x,\n          y\n        } = computeResponse.middlewareData.arrow;\n        this.arrowPosition = {\n          x,\n          y\n        };\n        Object.assign(this.arrow.style, {\n          left: x != null ? `${x}px` : '',\n          top: y != null ? `${y}px` : ''\n        });\n      }\n      this.tooltipPosition = {\n        x: computeResponse.x,\n        y: computeResponse.y\n      };\n    }, {\n      ancestorResize: true,\n      ancestorScroll: true,\n      elementResize: true\n    });\n  }\n  componentDidLoad() {\n    if (!this.inputElement) {\n      throw Error('Validation tooltip is only working with an direct input child.');\n    }\n    if (!this.formElement) {\n      throw Error('Validation tooltip is only working with an form element.');\n    }\n    this.formElement.addEventListener('submit', this.onSubmitBind);\n    this.inputElement.addEventListener('focus', this.onInputFocusBind);\n    this.observer = new MutationObserver(() => {\n      if (this.inputElement.classList.contains('is-invalid')) {\n        this.isInputValid = false;\n        this.validationChanged();\n      }\n    });\n    this.observer.observe(this.inputElement, {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: ['class']\n    });\n  }\n  onInputFocus() {\n    this.isInputValid = true;\n  }\n  onSubmit() {\n    if (this.formElement.classList.contains('needs-validation')) {\n      this.isInputValid = this.inputElement.validity.valid;\n    }\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.observer) === null || _a === void 0 ? void 0 : _a.disconnect();\n    this.destroyAutoUpdate();\n    this.formElement.removeEventListener('submit', this.onSubmitBind);\n    this.inputElement.removeEventListener('focus', this.onInputFocusBind);\n  }\n  validationChanged() {\n    if (!this.isInputValid) {\n      this.applyTooltipPosition();\n    } else {\n      this.destroyAutoUpdate();\n    }\n  }\n  render() {\n    var _a, _b;\n    return h(Host, null, h(\"slot\", null), h(\"div\", {\n      role: \"tooltip\",\n      style: {\n        display: 'none',\n        position: 'fixed',\n        top: '0',\n        left: '0',\n        transform: `translate(${Math.round(((_a = this.tooltipPosition) === null || _a === void 0 ? void 0 : _a.x) || 0)}px,${Math.round(((_b = this.tooltipPosition) === null || _b === void 0 ? void 0 : _b.y) || 0)}px)`\n      },\n      class: \"validation-tooltip text-default\"\n    }, this.message, h(\"slot\", {\n      name: \"tooltip-message\"\n    }), h(\"div\", {\n      id: \"arrow\"\n    })));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"isInputValid\": [\"validationChanged\"]\n    };\n  }\n  static get style() {\n    return validationTooltipCss;\n  }\n}, [1, \"ix-validation-tooltip\", {\n  \"message\": [1],\n  \"placement\": [1],\n  \"suppressAutomaticPlacement\": [4, \"suppress-automatic-placement\"],\n  \"isInputValid\": [32],\n  \"tooltipPosition\": [32],\n  \"arrowPosition\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-validation-tooltip\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-validation-tooltip\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ValidationTooltip);\n        }\n        break;\n    }\n  });\n}\nconst IxValidationTooltip = ValidationTooltip;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxValidationTooltip, defineCustomElement };","map":{"version":3,"names":["validationTooltipCss","ValidationTooltip","proxyCustomElement","HTMLElement","onSubmitBind","onSubmit","bind","onInputFocusBind","onInputFocus","arrow","hostElement","shadowRoot","querySelector","inputElement","formElement","form","tooltipElement","destroyAutoUpdate","style","display","autoUpdateCleanup","applyTooltipPosition","positionConfig","strategy","middleware","inline","shift","offset","mainAxis","suppressAutomaticPlacement","push","flip","fallbackStrategy","placement","autoUpdate","element","computeResponse","computePosition","middlewareData","x","y","arrowPosition","Object","assign","left","top","tooltipPosition","ancestorResize","ancestorScroll","elementResize","componentDidLoad","Error","addEventListener","observer","MutationObserver","classList","contains","isInputValid","validationChanged","observe","childList","subtree","attributes","attributeFilter","validity","valid","disconnectedCallback","_a","disconnect","removeEventListener","render","h","Host","role","position","transform","Math","round","_b","class","message","name","id"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\validation-tooltip\\validation-tooltip.scss?tag=ix-validation-tooltip&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\validation-tooltip\\validation-tooltip.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/fonts';\n\n:host {\n  display: inline-block;\n  position: relative;\n  $padding: 5px;\n  width: 100%;\n\n  .validation-tooltip {\n    background-color: var(--theme-tootlip--background);\n    color: var(--theme-tooltip--color);\n    padding: $padding 10px;\n    border-radius: 4px;\n    font-size: 13px;\n    border: 1px solid var(--theme-tooltip--border-color);\n    box-shadow: 0 0 2px 0 rgba(0, 0, 40, 0.1), 0 4px 8px 0 rgba(0, 0, 40, 0.1),\n      0 12px 18px 0 rgba(0, 0, 40, 0.1);\n\n    #arrow,\n    #arrow::before {\n      position: absolute;\n      width: 8px;\n      height: 8px;\n      background: inherit;\n    }\n\n    #arrow {\n      visibility: hidden;\n    }\n\n    #arrow::before {\n      visibility: visible;\n      content: '';\n      transform: rotate(45deg);\n      background-color: var(--theme-tootlip--background);\n    }\n  }\n\n  .validation-tooltip > #arrow {\n    bottom: -5px;\n\n    &::before {\n      border-right: 1px solid var(--theme-tooltip--border-color);\n      border-bottom: 1px solid var(--theme-tooltip--border-color);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport {\n  arrow,\n  autoUpdate,\n  computePosition,\n  ComputePositionConfig,\n  flip,\n  inline,\n  offset,\n  shift,\n} from '@floating-ui/dom';\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { Side } from '../dropdown/placement';\n\ntype Position = { x: number; y: number };\n\n/**\n * @slot tooltip-message - Custom tooltip message with html support\n */\n@Component({\n  tag: 'ix-validation-tooltip',\n  styleUrl: 'validation-tooltip.scss',\n  shadow: true,\n})\nexport class ValidationTooltip {\n  @Element() hostElement: HTMLIxValidationTooltipElement;\n\n  /**\n   * Message of the tooltip\n   */\n  @Prop() message: string;\n\n  /**\n   * Placement of the tooltip\n   */\n  @Prop() placement: Side = 'top';\n\n  /**\n   * Suppress the automatic placement of the dropdown.\n   *\n   * @since 2.0.0\n   */\n  @Prop() suppressAutomaticPlacement = false;\n\n  @State() isInputValid = true;\n  @State() tooltipPosition: Position;\n  @State() arrowPosition: Position;\n\n  private onSubmitBind = this.onSubmit.bind(this);\n  private onInputFocusBind = this.onInputFocus.bind(this);\n  private autoUpdateCleanup: () => void;\n  private observer: MutationObserver;\n\n  get arrow() {\n    return this.hostElement.shadowRoot.querySelector('#arrow') as HTMLElement;\n  }\n\n  get inputElement() {\n    return this.hostElement.querySelector('input');\n  }\n\n  get formElement() {\n    return this.inputElement.form;\n  }\n\n  get tooltipElement(): HTMLElement {\n    return this.hostElement.shadowRoot.querySelector('.validation-tooltip');\n  }\n\n  private destroyAutoUpdate() {\n    this.tooltipElement.style.display = 'none';\n\n    if (this.autoUpdateCleanup) {\n      this.autoUpdateCleanup();\n    }\n  }\n\n  private applyTooltipPosition() {\n    this.tooltipElement.style.display = 'block';\n\n    let positionConfig: Partial<ComputePositionConfig> = {\n      strategy: 'fixed',\n      middleware: [\n        inline(),\n        shift(),\n        offset({\n          mainAxis: 8,\n        }),\n      ],\n    };\n\n    if (!this.suppressAutomaticPlacement) {\n      positionConfig.middleware.push(\n        flip({ fallbackStrategy: 'initialPlacement' })\n      );\n    }\n    positionConfig.placement = this.placement;\n\n    this.autoUpdateCleanup = autoUpdate(\n      this.inputElement,\n      this.tooltipElement,\n      async () => {\n        positionConfig.middleware = [\n          ...positionConfig.middleware,\n          arrow({\n            element: this.arrow,\n          }),\n        ];\n        const computeResponse = await computePosition(\n          this.inputElement,\n          this.tooltipElement,\n          positionConfig\n        );\n\n        if (computeResponse.middlewareData.arrow) {\n          const { x, y } = computeResponse.middlewareData.arrow;\n          this.arrowPosition = {\n            x,\n            y,\n          };\n          Object.assign(this.arrow.style, {\n            left: x != null ? `${x}px` : '',\n            top: y != null ? `${y}px` : '',\n          });\n        }\n\n        this.tooltipPosition = {\n          x: computeResponse.x,\n          y: computeResponse.y,\n        };\n      },\n      {\n        ancestorResize: true,\n        ancestorScroll: true,\n        elementResize: true,\n      }\n    );\n  }\n\n  componentDidLoad() {\n    if (!this.inputElement) {\n      throw Error(\n        'Validation tooltip is only working with an direct input child.'\n      );\n    }\n\n    if (!this.formElement) {\n      throw Error('Validation tooltip is only working with an form element.');\n    }\n\n    this.formElement.addEventListener('submit', this.onSubmitBind);\n    this.inputElement.addEventListener('focus', this.onInputFocusBind);\n\n    this.observer = new MutationObserver(() => {\n      if (this.inputElement.classList.contains('is-invalid')) {\n        this.isInputValid = false;\n        this.validationChanged();\n      }\n    });\n\n    this.observer.observe(this.inputElement, {\n      childList: false,\n      subtree: false,\n      attributes: true,\n      attributeFilter: ['class'],\n    });\n  }\n\n  private onInputFocus() {\n    this.isInputValid = true;\n  }\n\n  private onSubmit() {\n    if (this.formElement.classList.contains('needs-validation')) {\n      this.isInputValid = this.inputElement.validity.valid;\n    }\n  }\n\n  disconnectedCallback() {\n    this.observer?.disconnect();\n    this.destroyAutoUpdate();\n\n    this.formElement.removeEventListener('submit', this.onSubmitBind);\n    this.inputElement.removeEventListener('focus', this.onInputFocusBind);\n  }\n\n  @Watch('isInputValid')\n  validationChanged() {\n    if (!this.isInputValid) {\n      this.applyTooltipPosition();\n    } else {\n      this.destroyAutoUpdate();\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n        <div\n          role=\"tooltip\"\n          style={{\n            display: 'none',\n            position: 'fixed',\n            top: '0',\n            left: '0',\n            transform: `translate(${Math.round(\n              this.tooltipPosition?.x || 0\n            )}px,${Math.round(this.tooltipPosition?.y || 0)}px)`,\n          }}\n          class=\"validation-tooltip text-default\"\n        >\n          {this.message}\n          <slot name=\"tooltip-message\"></slot>\n          <div id=\"arrow\"></div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}