{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { O as OnListener } from './listener.js';\nimport { d as defineCustomElement$6 } from './dropdown.js';\nimport { d as defineCustomElement$5 } from './dropdown-item.js';\nimport { d as defineCustomElement$4 } from './filter-chip.js';\nimport { d as defineCustomElement$3 } from './icon-button.js';\nimport { d as defineCustomElement$2 } from './select-item.js';\nimport { d as defineCustomElement$1 } from './spinner.js';\nconst selectCss = \":host{display:inline-block;position:relative;min-height:2rem;height:auto;border-radius:var(--theme-input--border-radius)}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .d-none{display:none}:host .select{position:relative;display:flex;align-items:center;background-color:var(--theme-input--background);border:var(--theme-input--border-thickness) solid var(--theme-input--border-color);border-radius:var(--theme-input--border-radius);padding:0 0 0 0.5rem;box-shadow:var(--theme-inset-shadow-1) !important}:host .select:not(.disabled):not(:disabled){cursor:pointer}:host .select:not(.disabled):not(:disabled):hover{background-color:var(--theme-input--background--hover);border-color:var(--theme-input--border-color--hover)}:host .select:focus-within{background-color:var(--theme-input--background--focus);border-color:var(--theme-input--border-color--focus);outline:1px solid #119fff;outline-offset:var(--theme-input--focus--outline-offset)}:host .select.readonly{box-shadow:none !important;border:none;border-radius:0px;border-bottom:var(--theme-input--border-thickness) solid var(--theme-color-weak-bdr)}:host .select.readonly,:host .select.readonly:hover,:host .select.readonly:active{background-color:transparent !important}:host .select.readonly:focus,:host .select.readonly:focus-within,:host .select.readonly:focus-visible{outline:none}:host .select.readonly input{color:var(--theme-color-weak-text)}:host .select.readonly input:focus,:host .select.readonly input:focus-visible{outline:none}:host .hidden{display:none !important}:host .trigger{display:flex;align-items:center;flex-grow:1;height:100%}:host .input-container{display:flex;position:relative;align-items:flex-start;width:100%;height:100%}:host .input-container .chips{position:relative;display:flex;align-items:center;flex-wrap:wrap;height:100%;max-height:3.5rem;flex-grow:1;overflow-y:auto}:host .input-container .chips>ix-filter-chip{margin:0.1rem}:host .input-container input{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;-webkit-font-smoothing:antialiased;-moz-osx-font-smooting:grayscale;font-family:Siemens Sans, sans-serif;font-size:0.875rem;font-weight:400;line-height:1.429em;color:var(--theme-color-std-text);background:transparent;height:1.75rem;width:100%}:host .input-container input,:host .input-container input:hover,:host .input-container input:focus-visible{border:none;outline:none}:host .input-container input::-moz-placeholder{color:var(--theme-input-select-icon--color)}:host .input-container input::placeholder{color:var(--theme-input-select-icon--color)}:host .input-container input.hide-placeholder::-moz-placeholder{opacity:0}:host .input-container input.hide-placeholder::placeholder{opacity:0}:host .dropdown-visible{--ix-icon-button-color:var(--theme-color-dynamic--hover)}:host .add-item{display:flex;justify-content:flex-start;align-items:center;position:relative;width:100%}:host .select-list-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;display:flex;align-items:center;height:2rem;color:var(--theme-select-list-item-hint--color);margin:0 0.5rem 0 1rem}\";\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nconst Select = /*@__PURE__*/proxyCustomElement(class Select extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.valueChange = createEvent(this, \"valueChange\", 7);\n    this.itemSelectionChange = createEvent(this, \"itemSelectionChange\", 7);\n    this.inputChange = createEvent(this, \"inputChange\", 7);\n    this.addItem = createEvent(this, \"addItem\", 7);\n    this.selectedIndices = undefined;\n    this.value = undefined;\n    this.allowClear = false;\n    this.mode = 'single';\n    this.editable = false;\n    this.disabled = false;\n    this.readonly = false;\n    this.i18nPlaceholder = 'Select an option';\n    this.i18nPlaceholderEditable = 'Type of select option';\n    this.i18nSelectListHeader = 'Please select an option';\n    this.i18nNoMatches = 'No matches';\n    this.hideListHeader = false;\n    this.dropdownShow = false;\n    this.selectedLabels = undefined;\n    this.dropdownWrapperRef = undefined;\n    this.dropdownAnchor = undefined;\n    this.isDropdownEmpty = false;\n    this.hasFocus = false;\n    this.navigationItem = undefined;\n    this.inputFilterText = undefined;\n    this.inputValue = undefined;\n  }\n  get items() {\n    return [...Array.from(this.hostElement.querySelectorAll('ix-select-item')), ...Array.from(this.hostElement.shadowRoot.querySelectorAll('ix-select-item'))];\n  }\n  get selectedItems() {\n    return this.items.filter(item => item.selected);\n  }\n  get addItemButton() {\n    return this.hostElement.shadowRoot.querySelector('.add-item');\n  }\n  get isSingleMode() {\n    return this.mode === 'single';\n  }\n  get isMultipleMode() {\n    return this.mode === 'multiple';\n  }\n  get isEveryDropdownItemHidden() {\n    return this.items.every(item => item.classList.contains('d-none'));\n  }\n  watchSelectedIndices(value) {\n    this.value = value;\n    this.updateSelection();\n  }\n  watchValue(value) {\n    this.selectedIndices = value;\n    this.updateSelection();\n  }\n  onItemClicked(event) {\n    const newId = event.detail;\n    this.itemClick(newId);\n  }\n  itemClick(newId) {\n    this.value = this.toggleValue(newId);\n    this.updateSelection();\n    this.emitValueChange();\n  }\n  emitAddItem(value) {\n    if (value.trim() === '') {\n      return;\n    }\n    const newItem = document.createElement('ix-select-item');\n    newItem.value = value;\n    newItem.label = value;\n    this.addItemRef.appendChild(newItem);\n    this.clearInput();\n    this.itemClick(value);\n    this.addItem.emit(value);\n  }\n  toggleValue(itemValue) {\n    if (!this.isMultipleMode) {\n      return itemValue;\n    }\n    if (!this.value) {\n      return [itemValue];\n    }\n    let value = this.value;\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n    if (value.includes(itemValue)) {\n      return value.filter(value => value !== itemValue);\n    } else {\n      return [...value, itemValue];\n    }\n  }\n  updateSelection() {\n    var _a;\n    let ids = [];\n    if (this.value) {\n      ids = Array.isArray(this.value) ? [...this.value] : [this.value];\n    }\n    this.items.forEach(item => {\n      item.selected = ids.some(i => i === item.value);\n    });\n    this.selectedLabels = this.selectedItems.map(item => item.label);\n    if (this.isSingleMode) {\n      this.inputValue = ((_a = this.selectedLabels) === null || _a === void 0 ? void 0 : _a.length) ? this.selectedLabels[0] : null;\n      return;\n    }\n    this.inputValue = null;\n  }\n  emitValueChange() {\n    this.valueChange.emit(this.value);\n    if (!this.value) {\n      this.itemSelectionChange.emit(null);\n    } else {\n      this.itemSelectionChange.emit(Array.isArray(this.value) ? this.value : [this.value]);\n    }\n  }\n  componentDidLoad() {\n    this.inputRef.addEventListener('input', () => {\n      this.dropdownShow = true;\n      this.inputChange.emit(this.inputRef.value);\n    });\n  }\n  componentWillLoad() {\n    if (this.selectedIndices && !this.value) {\n      this.value = this.selectedIndices;\n    }\n    this.updateSelection();\n  }\n  onLabelChange(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.updateSelection();\n  }\n  disconnectedCallback() {\n    if (this.labelMutationObserver) {\n      this.labelMutationObserver.disconnect();\n    }\n  }\n  itemExists(item) {\n    return this.items.find(i => i.label === item);\n  }\n  dropdownVisibilityChanged(event) {\n    this.dropdownShow = event.detail;\n    this.hasFocus = event.detail;\n    if (event.detail) {\n      this.inputRef.focus();\n      this.inputRef.select();\n      this.removeHiddenFromItems();\n      this.isDropdownEmpty = this.isEveryDropdownItemHidden;\n    } else {\n      this.navigationItem = undefined;\n    }\n  }\n  async onKeyDown(event) {\n    if (event.code === 'ArrowDown' || event.code === 'ArrowUp') {\n      this.onArrowNavigation(event, event.code);\n    }\n    if (!this.dropdownShow) {\n      return;\n    }\n    if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n      await this.onEnterNavigation();\n    }\n    if (event.code === 'Escape') {\n      this.dropdownShow = false;\n    }\n  }\n  async onEnterNavigation() {\n    var _a, _b;\n    if (this.isMultipleMode) {\n      return;\n    }\n    if (this.editable && !this.itemExists(this.inputFilterText)) {\n      this.emitAddItem(this.inputFilterText);\n      this.navigationItem = this.items[this.items.length - 1];\n    }\n    (_a = this.navigationItem) === null || _a === void 0 ? void 0 : _a.onItemClick();\n    await ((_b = this.dropdownRef) === null || _b === void 0 ? void 0 : _b.updatePosition());\n    if (this.isSingleMode && !this.editable) {\n      this.dropdownShow = false;\n    }\n  }\n  onArrowNavigation(event, key) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.dropdownShow = true;\n    const items = this.items.filter(i => !i.classList.contains('d-none'));\n    if (this.navigationItem === undefined) {\n      this.applyFocusTo(items[0]);\n      return;\n    }\n    let indexOfNavigationItem = items.findIndex(item => item === this.navigationItem);\n    if (key === 'ArrowDown') {\n      indexOfNavigationItem++;\n    } else {\n      indexOfNavigationItem--;\n    }\n    const newFocusItem = items[indexOfNavigationItem];\n    this.applyFocusTo(newFocusItem);\n  }\n  applyFocusTo(element) {\n    if (!element) {\n      return;\n    }\n    this.navigationItem = element;\n    setTimeout(() => {\n      element.shadowRoot.querySelector('ix-dropdown-item').shadowRoot.querySelector('button').focus();\n    });\n  }\n  filterItemsWithTypeahead() {\n    this.inputFilterText = this.inputRef.value;\n    if (this.isSingleMode && this.inputFilterText === this.selectedLabels[0]) {\n      return;\n    }\n    if (this.inputFilterText) {\n      this.items.forEach(item => {\n        item.classList.remove('d-none');\n        if (!item.label.toLowerCase().includes(this.inputFilterText.toLowerCase())) {\n          item.classList.add('d-none');\n        }\n      });\n    } else {\n      this.removeHiddenFromItems();\n    }\n    this.isDropdownEmpty = this.isEveryDropdownItemHidden;\n  }\n  removeHiddenFromItems() {\n    this.items.forEach(item => {\n      item.classList.remove('d-none');\n    });\n  }\n  clearInput() {\n    this.inputRef.value = '';\n    this.inputFilterText = '';\n  }\n  clear() {\n    this.clearInput();\n    this.selectedLabels = [];\n    this.value = [];\n    this.valueChange.emit(null);\n    this.dropdownShow = false;\n  }\n  onInputBlur(e) {\n    if (this.editable) {\n      return;\n    }\n    if (this.isSingleMode) {\n      return;\n    }\n    if (!this.dropdownShow && this.mode !== 'multiple') {\n      e.target['value'] = this.selectedLabels;\n    }\n  }\n  placeholderValue() {\n    if (this.editable) {\n      return this.i18nPlaceholderEditable;\n    }\n    if (this.readonly) {\n      return '';\n    }\n    return this.i18nPlaceholder;\n  }\n  isAddItemVisible() {\n    return !this.itemExists(this.inputFilterText) && this.editable && this.inputFilterText;\n  }\n  render() {\n    var _a, _b, _c;\n    return h(Host, null, h(\"div\", {\n      class: {\n        select: true,\n        disabled: this.disabled,\n        readonly: this.readonly\n      },\n      ref: ref => {\n        this.dropdownAnchor = ref;\n        if (!this.editable) this.dropdownWrapperRef = ref;\n      }\n    }, h(\"div\", {\n      class: \"input-container\"\n    }, h(\"div\", {\n      class: \"chips\"\n    }, this.isMultipleMode ? (_a = this.selectedItems) === null || _a === void 0 ? void 0 : _a.map(item => h(\"ix-filter-chip\", {\n      disabled: this.disabled || this.readonly,\n      key: item.value,\n      onCloseClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.itemClick(item.value);\n      }\n    }, item.label)) : '', h(\"div\", {\n      class: \"trigger\"\n    }, h(\"input\", {\n      \"data-testid\": \"input\",\n      disabled: this.disabled,\n      readOnly: this.readonly,\n      type: \"text\",\n      class: {\n        'allow-clear': this.allowClear && !!((_b = this.selectedLabels) === null || _b === void 0 ? void 0 : _b.length)\n      },\n      placeholder: this.placeholderValue(),\n      value: this.inputValue,\n      ref: ref => this.inputRef = ref,\n      onBlur: e => this.onInputBlur(e),\n      onFocus: () => {\n        this.navigationItem = undefined;\n      },\n      onInput: () => this.filterItemsWithTypeahead(),\n      onKeyDown: e => this.onKeyDown(e)\n    }), this.allowClear && (((_c = this.selectedLabels) === null || _c === void 0 ? void 0 : _c.length) || this.inputFilterText) ? h(\"ix-icon-button\", {\n      class: \"clear\",\n      icon: 'clear',\n      ghost: true,\n      oval: true,\n      size: \"16\",\n      onClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.clear();\n      }\n    }) : null, this.disabled || this.readonly ? null : h(\"ix-icon-button\", {\n      \"data-select-dropdown\": true,\n      class: {\n        'dropdown-visible': this.dropdownShow\n      },\n      icon: \"chevron-down-small\",\n      ghost: true,\n      ref: ref => {\n        if (this.editable) this.dropdownWrapperRef = ref;\n      }\n    }))))), h(\"ix-dropdown\", {\n      ref: ref => this.dropdownRef = ref,\n      show: this.dropdownShow,\n      closeBehavior: this.isMultipleMode ? 'outside' : 'both',\n      class: {\n        'd-none': this.disabled || this.readonly\n      },\n      anchor: this.dropdownAnchor,\n      trigger: this.dropdownWrapperRef,\n      onShowChanged: e => this.dropdownVisibilityChanged(e),\n      placement: \"bottom-start\",\n      overwriteDropdownStyle: async () => {\n        return {\n          minWidth: `${this.hostElement.clientWidth}px`\n        };\n      }\n    }, h(\"div\", {\n      class: {\n        'select-list-header': true,\n        hidden: this.hideListHeader || this.isDropdownEmpty\n      },\n      title: this.i18nSelectListHeader\n    }, this.i18nSelectListHeader), h(\"slot\", null), h(\"div\", {\n      ref: ref => this.addItemRef = ref,\n      class: \"d-contents\"\n    }), this.isAddItemVisible() ? h(\"ix-dropdown-item\", {\n      \"data-testid\": \"add-item\",\n      icon: 'plus',\n      class: {\n        'add-item': true\n      },\n      label: this.inputFilterText,\n      onItemClick: e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.emitAddItem(this.inputFilterText);\n      }\n    }) : null, this.isDropdownEmpty && !this.editable ? h(\"div\", {\n      class: \"select-list-header\"\n    }, this.i18nNoMatches) : ''));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"selectedIndices\": [\"watchSelectedIndices\"],\n      \"value\": [\"watchValue\"]\n    };\n  }\n  static get style() {\n    return selectCss;\n  }\n}, [1, \"ix-select\", {\n  \"selectedIndices\": [1025, \"selected-indices\"],\n  \"value\": [1025],\n  \"allowClear\": [4, \"allow-clear\"],\n  \"mode\": [1],\n  \"editable\": [4],\n  \"disabled\": [4],\n  \"readonly\": [4],\n  \"i18nPlaceholder\": [1, \"i-1-8n-placeholder\"],\n  \"i18nPlaceholderEditable\": [1, \"i-1-8n-placeholder-editable\"],\n  \"i18nSelectListHeader\": [1, \"i-1-8n-select-list-header\"],\n  \"i18nNoMatches\": [1, \"i-1-8n-no-matches\"],\n  \"hideListHeader\": [4, \"hide-list-header\"],\n  \"dropdownShow\": [32],\n  \"selectedLabels\": [32],\n  \"dropdownWrapperRef\": [32],\n  \"dropdownAnchor\": [32],\n  \"isDropdownEmpty\": [32],\n  \"hasFocus\": [32],\n  \"navigationItem\": [32],\n  \"inputFilterText\": [32],\n  \"inputValue\": [32]\n}, [[0, \"itemClick\", \"onItemClicked\"], [0, \"ix-select-item:labelChange\", \"onLabelChange\"]]]);\n__decorate([OnListener('keydown', self => self.dropdownShow)], Select.prototype, \"onKeyDown\", null);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-select\", \"ix-dropdown\", \"ix-dropdown-item\", \"ix-filter-chip\", \"ix-icon-button\", \"ix-select-item\", \"ix-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-select\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Select);\n        }\n        break;\n      case \"ix-dropdown\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ix-dropdown-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ix-filter-chip\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-select-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { Select as S, defineCustomElement as d };","map":{"version":3,"names":["selectCss","Select","proxyCustomElement","HTMLElement","items","Array","from","hostElement","querySelectorAll","shadowRoot","selectedItems","filter","item","selected","addItemButton","querySelector","isSingleMode","mode","isMultipleMode","isEveryDropdownItemHidden","every","classList","contains","watchSelectedIndices","value","updateSelection","watchValue","selectedIndices","onItemClicked","event","newId","detail","itemClick","toggleValue","emitValueChange","emitAddItem","trim","newItem","document","createElement","label","addItemRef","appendChild","clearInput","addItem","emit","itemValue","isArray","includes","ids","forEach","some","i","selectedLabels","map","inputValue","_a","length","valueChange","itemSelectionChange","componentDidLoad","inputRef","addEventListener","dropdownShow","inputChange","componentWillLoad","onLabelChange","preventDefault","stopImmediatePropagation","disconnectedCallback","labelMutationObserver","disconnect","itemExists","find","dropdownVisibilityChanged","hasFocus","focus","select","removeHiddenFromItems","isDropdownEmpty","navigationItem","undefined","onKeyDown","code","onArrowNavigation","onEnterNavigation","editable","inputFilterText","onItemClick","_b","dropdownRef","updatePosition","key","stopPropagation","applyFocusTo","indexOfNavigationItem","findIndex","newFocusItem","element","setTimeout","filterItemsWithTypeahead","remove","toLowerCase","add","clear","onInputBlur","e","target","placeholderValue","i18nPlaceholderEditable","readonly","i18nPlaceholder","isAddItemVisible","render","h","Host","class","disabled","ref","dropdownAnchor","dropdownWrapperRef","onCloseClick","readOnly","type","allowClear","placeholder","onBlur","onFocus","onInput","_c","icon","ghost","oval","size","onClick","show","closeBehavior","anchor","trigger","onShowChanged","placement","overwriteDropdownStyle","minWidth","clientWidth","hidden","hideListHeader","title","i18nSelectListHeader","i18nNoMatches","__decorate","OnListener","self"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\select\\select.scss?tag=ix-select&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\select\\select.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'legacy/mixins/fonts';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: inline-block;\n  position: relative;\n  min-height: 2rem;\n  height: auto;\n  border-radius: var(--theme-input--border-radius);\n\n  .d-none {\n    display: none;\n  }\n\n  .select {\n    position: relative;\n    display: flex;\n    align-items: center;\n    background-color: var(--theme-input--background);\n    border: var(--theme-input--border-thickness) solid\n      var(--theme-input--border-color);\n    border-radius: var(--theme-input--border-radius);\n    padding: 0 0 0 $small-space;\n    box-shadow: var(--theme-inset-shadow-1) !important;\n\n    @include hover {\n      background-color: var(--theme-input--background--hover);\n      border-color: var(--theme-input--border-color--hover);\n    }\n\n    &:focus-within {\n      background-color: var(--theme-input--background--focus);\n      border-color: var(--theme-input--border-color--focus);\n      outline: 1px solid #119fff;\n      outline-offset: var(--theme-input--focus--outline-offset);\n    }\n  }\n\n  .select.readonly {\n    box-shadow: none !important;\n    border: none;\n    border-radius: 0px;\n    border-bottom: var(--theme-input--border-thickness) solid\n      var(--theme-color-weak-bdr);\n\n    &,\n    &:hover,\n    &:active {\n      background-color: transparent !important;\n    }\n\n    &:focus,\n    &:focus-within,\n    &:focus-visible {\n      outline: none;\n    }\n\n    input {\n      color: var(--theme-color-weak-text);\n    }\n\n    input:focus,\n    input:focus-visible {\n      outline: none;\n    }\n  }\n\n  .hidden {\n    display: none !important;\n  }\n\n  .trigger {\n    display: flex;\n    align-items: center;\n    flex-grow: 1;\n    height: 100%;\n  }\n\n  .input-container {\n    display: flex;\n    position: relative;\n    align-items: flex-start;\n    width: 100%;\n    height: 100%;\n\n    .chips {\n      position: relative;\n      display: flex;\n      align-items: center;\n      flex-wrap: wrap;\n      height: 100%;\n      max-height: 3.5rem;\n      flex-grow: 1;\n      overflow-y: auto;\n\n      > ix-filter-chip {\n        margin: 0.1rem;\n      }\n    }\n\n    input {\n      @include ellipsis;\n      @include text-default;\n      background: transparent;\n      height: 1.75rem;\n      width: 100%;\n\n      &,\n      &:hover,\n      &:focus-visible {\n        border: none;\n        outline: none;\n      }\n\n      &::placeholder {\n        color: var(--theme-input-select-icon--color);\n      }\n\n      &.hide-placeholder::placeholder {\n        opacity: 0;\n      }\n    }\n  }\n\n  .dropdown-visible {\n    --ix-icon-button-color: var(--theme-color-dynamic--hover);\n  }\n\n  .add-item {\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n    position: relative;\n    width: 100%;\n  }\n\n  .select-list-header {\n    @include ellipsis;\n    display: flex;\n    align-items: center;\n    height: $default-control-height;\n    color: var(--theme-select-list-item-hint--color);\n    margin: 0 $small-space 0 1rem;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { IxSelectItemLabelChangeEvent } from '../select-item/events';\nimport { OnListener } from '../utils/listener';\n\n@Component({\n  tag: 'ix-select',\n  styleUrl: 'select.scss',\n  shadow: true,\n})\nexport class Select {\n  @Element() hostElement!: HTMLIxSelectElement;\n\n  /**\n   * Indices of selected items.\n   * This corresponds to the value property of ix-select-items and therefor not necessarily the indices of the items in the list.\n   * @deprecated since 2.0.0. Use the `value` property instead.\n   */\n  @Prop({ mutable: true }) selectedIndices?: string | string[];\n\n  /**\n   * Current selected value.\n   * This corresponds to the value property of ix-select-items\n   * @since 2.0.0\n   */\n  @Prop({ mutable: true }) value?: string | string[];\n\n  /**\n   * Show clear button\n   */\n  @Prop() allowClear = false;\n\n  /**\n   * Selection mode\n   */\n  @Prop() mode: 'single' | 'multiple' = 'single';\n\n  /**\n   * Select is extendable\n   */\n  @Prop() editable = false;\n\n  /**\n   * If true the select will be in disabled state\n   */\n  @Prop() disabled = false;\n\n  /**\n   * If true the select will be in readonly mode\n   */\n  @Prop() readonly = false;\n\n  /**\n   * Input field placeholder\n   */\n  @Prop() i18nPlaceholder = 'Select an option';\n\n  /**\n   * Input field placeholder for editable select\n   */\n  @Prop() i18nPlaceholderEditable = 'Type of select option';\n\n  /**\n   * Select list header\n   */\n  @Prop() i18nSelectListHeader = 'Please select an option';\n\n  /**\n   * Hint inside of dropdown if no items where found with current filter text\n   *\n   * @since 1.5.0\n   */\n  @Prop() i18nNoMatches = 'No matches';\n\n  /**\n   * Hide list header\n   *\n   * @since 1.5.0\n   @\n   */\n  @Prop() hideListHeader = false;\n\n  /**\n   * Value changed\n   * @since 2.0.0\n   */\n  @Event() valueChange: EventEmitter<string | string[]>;\n\n  /**\n   * Item selection changed\n   * @deprecated since 2.0.0. Use `valueChange` instead.\n   */\n  @Event() itemSelectionChange: EventEmitter<string[]>;\n\n  /**\n   * Event dispatched whenever the text input changes.\n   *\n   * @since 2.0.0\n   */\n  @Event() inputChange: EventEmitter<string>;\n\n  /**\n   * Item added to selection\n   */\n  @Event() addItem: EventEmitter<string>;\n\n  @State() dropdownShow = false;\n  @State() selectedLabels: string[];\n  @State() dropdownWrapperRef!: HTMLElement;\n  @State() dropdownAnchor!: HTMLElement;\n  @State() isDropdownEmpty = false;\n  @State() hasFocus = false;\n  @State() navigationItem: HTMLIxSelectItemElement;\n  @State() inputFilterText: string;\n  @State() inputValue: string;\n\n  private inputRef!: HTMLInputElement;\n  private dropdownRef!: HTMLIxDropdownElement;\n  private addItemRef!: HTMLDivElement;\n\n  private labelMutationObserver: MutationObserver;\n\n  get items() {\n    return [\n      ...Array.from(this.hostElement.querySelectorAll('ix-select-item')),\n      ...Array.from(\n        this.hostElement.shadowRoot.querySelectorAll('ix-select-item')\n      ),\n    ];\n  }\n\n  get selectedItems() {\n    return this.items.filter((item) => item.selected);\n  }\n\n  get addItemButton() {\n    return this.hostElement.shadowRoot.querySelector('.add-item');\n  }\n\n  get isSingleMode() {\n    return this.mode === 'single';\n  }\n\n  get isMultipleMode() {\n    return this.mode === 'multiple';\n  }\n\n  get isEveryDropdownItemHidden() {\n    return this.items.every((item) => item.classList.contains('d-none'));\n  }\n\n  @Watch('selectedIndices')\n  watchSelectedIndices(value: string | string[]) {\n    this.value = value;\n    this.updateSelection();\n  }\n\n  @Watch('value')\n  watchValue(value: string | string[]) {\n    this.selectedIndices = value;\n    this.updateSelection();\n  }\n\n  @Listen('itemClick')\n  onItemClicked(event: CustomEvent<string>) {\n    const newId = event.detail;\n    this.itemClick(newId);\n  }\n\n  private itemClick(newId: string) {\n    this.value = this.toggleValue(newId);\n    this.updateSelection();\n    this.emitValueChange();\n  }\n\n  private emitAddItem(value: string) {\n    if (value.trim() === '') {\n      return;\n    }\n\n    const newItem = document.createElement('ix-select-item');\n    newItem.value = value;\n    newItem.label = value;\n\n    this.addItemRef.appendChild(newItem);\n\n    this.clearInput();\n    this.itemClick(value);\n    this.addItem.emit(value);\n  }\n\n  private toggleValue(itemValue: string) {\n    if (!this.isMultipleMode) {\n      return itemValue;\n    }\n\n    if (!this.value) {\n      return [itemValue];\n    }\n\n    let value = this.value;\n\n    if (!Array.isArray(value)) {\n      value = [value];\n    }\n\n    if (value.includes(itemValue)) {\n      return value.filter((value) => value !== itemValue);\n    } else {\n      return [...value, itemValue];\n    }\n  }\n\n  private updateSelection() {\n    let ids = [];\n\n    if (this.value) {\n      ids = Array.isArray(this.value) ? [...this.value] : [this.value];\n    }\n\n    this.items.forEach((item) => {\n      item.selected = ids.some((i) => i === item.value);\n    });\n\n    this.selectedLabels = this.selectedItems.map((item) => item.label);\n\n    if (this.isSingleMode) {\n      this.inputValue = this.selectedLabels?.length\n        ? this.selectedLabels[0]\n        : null;\n      return;\n    }\n\n    this.inputValue = null;\n  }\n\n  private emitValueChange() {\n    this.valueChange.emit(this.value);\n\n    if (!this.value) {\n      this.itemSelectionChange.emit(null);\n    } else {\n      this.itemSelectionChange.emit(\n        Array.isArray(this.value) ? this.value : [this.value]\n      );\n    }\n  }\n\n  componentDidLoad() {\n    this.inputRef.addEventListener('input', () => {\n      this.dropdownShow = true;\n      this.inputChange.emit(this.inputRef.value);\n    });\n  }\n\n  componentWillLoad() {\n    if (this.selectedIndices && !this.value) {\n      this.value = this.selectedIndices;\n    }\n\n    this.updateSelection();\n  }\n\n  @Listen('ix-select-item:labelChange')\n  onLabelChange(event: IxSelectItemLabelChangeEvent) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    this.updateSelection();\n  }\n\n  disconnectedCallback() {\n    if (this.labelMutationObserver) {\n      this.labelMutationObserver.disconnect();\n    }\n  }\n\n  private itemExists(item: string) {\n    return this.items.find((i) => i.label === item);\n  }\n\n  private dropdownVisibilityChanged(event: CustomEvent<boolean>) {\n    this.dropdownShow = event.detail;\n    this.hasFocus = event.detail;\n\n    if (event.detail) {\n      this.inputRef.focus();\n      this.inputRef.select();\n\n      this.removeHiddenFromItems();\n      this.isDropdownEmpty = this.isEveryDropdownItemHidden;\n    } else {\n      this.navigationItem = undefined;\n    }\n  }\n\n  @OnListener<Select>('keydown', (self) => self.dropdownShow)\n  async onKeyDown(event: KeyboardEvent) {\n    if (event.code === 'ArrowDown' || event.code === 'ArrowUp') {\n      this.onArrowNavigation(event, event.code);\n    }\n\n    if (!this.dropdownShow) {\n      return;\n    }\n\n    if (event.code === 'Enter' || event.code === 'NumpadEnter') {\n      await this.onEnterNavigation();\n    }\n\n    if (event.code === 'Escape') {\n      this.dropdownShow = false;\n    }\n  }\n\n  private async onEnterNavigation() {\n    if (this.isMultipleMode) {\n      return;\n    }\n\n    if (this.editable && !this.itemExists(this.inputFilterText)) {\n      this.emitAddItem(this.inputFilterText);\n      this.navigationItem = this.items[this.items.length - 1];\n    }\n\n    this.navigationItem?.onItemClick();\n    await this.dropdownRef?.updatePosition();\n\n    if (this.isSingleMode && !this.editable) {\n      this.dropdownShow = false;\n    }\n  }\n\n  private onArrowNavigation(\n    event: KeyboardEvent,\n    key: 'ArrowDown' | 'ArrowUp'\n  ) {\n    event.preventDefault();\n    event.stopPropagation();\n\n    this.dropdownShow = true;\n\n    const items = this.items.filter((i) => !i.classList.contains('d-none'));\n    if (this.navigationItem === undefined) {\n      this.applyFocusTo(items[0]);\n      return;\n    }\n\n    let indexOfNavigationItem = items.findIndex(\n      (item) => item === this.navigationItem\n    );\n\n    if (key === 'ArrowDown') {\n      indexOfNavigationItem++;\n    } else {\n      indexOfNavigationItem--;\n    }\n\n    const newFocusItem = items[indexOfNavigationItem];\n    this.applyFocusTo(newFocusItem);\n  }\n\n  private applyFocusTo(element: HTMLIxSelectItemElement) {\n    if (!element) {\n      return;\n    }\n    this.navigationItem = element;\n\n    setTimeout(() => {\n      element.shadowRoot\n        .querySelector('ix-dropdown-item')\n        .shadowRoot.querySelector('button')\n        .focus();\n    });\n  }\n\n  private filterItemsWithTypeahead() {\n    this.inputFilterText = this.inputRef.value;\n\n    if (this.isSingleMode && this.inputFilterText === this.selectedLabels[0]) {\n      return;\n    }\n\n    if (this.inputFilterText) {\n      this.items.forEach((item) => {\n        item.classList.remove('d-none');\n        if (\n          !item.label.toLowerCase().includes(this.inputFilterText.toLowerCase())\n        ) {\n          item.classList.add('d-none');\n        }\n      });\n    } else {\n      this.removeHiddenFromItems();\n    }\n\n    this.isDropdownEmpty = this.isEveryDropdownItemHidden;\n  }\n\n  private removeHiddenFromItems() {\n    this.items.forEach((item) => {\n      item.classList.remove('d-none');\n    });\n  }\n\n  private clearInput() {\n    this.inputRef.value = '';\n    this.inputFilterText = '';\n  }\n\n  private clear() {\n    this.clearInput();\n    this.selectedLabels = [];\n    this.value = [];\n    this.valueChange.emit(null);\n    this.dropdownShow = false;\n  }\n\n  private onInputBlur(e) {\n    if (this.editable) {\n      return;\n    }\n\n    if (this.isSingleMode) {\n      return;\n    }\n\n    if (!this.dropdownShow && this.mode !== 'multiple') {\n      e.target['value'] = this.selectedLabels;\n    }\n  }\n\n  private placeholderValue() {\n    if (this.editable) {\n      return this.i18nPlaceholderEditable;\n    }\n\n    if (this.readonly) {\n      return '';\n    }\n\n    return this.i18nPlaceholder;\n  }\n\n  private isAddItemVisible() {\n    return (\n      !this.itemExists(this.inputFilterText) &&\n      this.editable &&\n      this.inputFilterText\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <div\n          class={{\n            select: true,\n            disabled: this.disabled,\n            readonly: this.readonly,\n          }}\n          ref={(ref) => {\n            this.dropdownAnchor = ref;\n            if (!this.editable) this.dropdownWrapperRef = ref;\n          }}\n        >\n          <div class=\"input-container\">\n            <div class=\"chips\">\n              {this.isMultipleMode\n                ? this.selectedItems?.map((item) => (\n                    <ix-filter-chip\n                      disabled={this.disabled || this.readonly}\n                      key={item.value}\n                      onCloseClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        this.itemClick(item.value);\n                      }}\n                    >\n                      {item.label}\n                    </ix-filter-chip>\n                  ))\n                : ''}\n              <div class=\"trigger\">\n                <input\n                  data-testid=\"input\"\n                  disabled={this.disabled}\n                  readOnly={this.readonly}\n                  type=\"text\"\n                  class={{\n                    'allow-clear':\n                      this.allowClear && !!this.selectedLabels?.length,\n                  }}\n                  placeholder={this.placeholderValue()}\n                  value={this.inputValue}\n                  ref={(ref) => (this.inputRef = ref)}\n                  onBlur={(e) => this.onInputBlur(e)}\n                  onFocus={() => {\n                    this.navigationItem = undefined;\n                  }}\n                  onInput={() => this.filterItemsWithTypeahead()}\n                  onKeyDown={(e) => this.onKeyDown(e)}\n                />\n                {this.allowClear &&\n                (this.selectedLabels?.length || this.inputFilterText) ? (\n                  <ix-icon-button\n                    class=\"clear\"\n                    icon={'clear'}\n                    ghost\n                    oval\n                    size=\"16\"\n                    onClick={(e) => {\n                      e.preventDefault();\n                      e.stopPropagation();\n                      this.clear();\n                    }}\n                  />\n                ) : null}\n                {this.disabled || this.readonly ? null : (\n                  <ix-icon-button\n                    data-select-dropdown\n                    class={{ 'dropdown-visible': this.dropdownShow }}\n                    icon=\"chevron-down-small\"\n                    ghost\n                    ref={(ref) => {\n                      if (this.editable) this.dropdownWrapperRef = ref;\n                    }}\n                  ></ix-icon-button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <ix-dropdown\n          ref={(ref) => (this.dropdownRef = ref)}\n          show={this.dropdownShow}\n          closeBehavior={this.isMultipleMode ? 'outside' : 'both'}\n          class={{\n            'd-none': this.disabled || this.readonly,\n          }}\n          anchor={this.dropdownAnchor}\n          trigger={this.dropdownWrapperRef}\n          onShowChanged={(e) => this.dropdownVisibilityChanged(e)}\n          placement=\"bottom-start\"\n          overwriteDropdownStyle={async () => {\n            return {\n              minWidth: `${this.hostElement.clientWidth}px`,\n            };\n          }}\n        >\n          <div\n            class={{\n              'select-list-header': true,\n              hidden: this.hideListHeader || this.isDropdownEmpty,\n            }}\n            title={this.i18nSelectListHeader}\n          >\n            {this.i18nSelectListHeader}\n          </div>\n          <slot></slot>\n          <div ref={(ref) => (this.addItemRef = ref)} class=\"d-contents\"></div>\n          {this.isAddItemVisible() ? (\n            <ix-dropdown-item\n              data-testid=\"add-item\"\n              icon={'plus'}\n              class={{\n                'add-item': true,\n              }}\n              label={this.inputFilterText}\n              onItemClick={(e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                this.emitAddItem(this.inputFilterText);\n              }}\n            ></ix-dropdown-item>\n          ) : null}\n          {this.isDropdownEmpty && !this.editable ? (\n            <div class=\"select-list-header\">{this.i18nNoMatches}</div>\n          ) : (\n            ''\n          )}\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}