{"ast":null,"code":"/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)'\n};\nconst matchBreakpoint = breakpoint => {\n  if (typeof window !== 'undefined' && window.matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\nexport { matchBreakpoint as m };","map":{"version":3,"names":["mediaQueries","sm","md","lg","matchBreakpoint","breakpoint","window","matchMedia","mediaQuery","matches"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\utils\\breakpoints.ts"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Implementation of scss breakpoints mixins/_break-points.scss\nconst mediaQueries = {\n  sm: '(max-width: 48em)',\n  md: '(min-width: 48.0625em) and (max-width: 80em)',\n  lg: '(min-width: 80.0625em)',\n} as const;\n\nexport type Breakpoint = keyof typeof mediaQueries;\n\nexport const matchBreakpoint = (breakpoint: Breakpoint) => {\n  if (typeof window !== 'undefined' && (window as any).matchMedia) {\n    const mediaQuery = mediaQueries[breakpoint];\n    return window.matchMedia(mediaQuery).matches;\n  }\n  return false;\n};\n"],"mappings":"AAAA;;;;;;;;AASA;AACA,MAAMA,YAAY,GAAG;EACnBC,EAAE,EAAE,mBAAmB;EACvBC,EAAE,EAAE,8CAA8C;EAClDC,EAAE,EAAE;CACI;MAIGC,eAAe,GAAIC,UAAsB;EACpD,IAAI,OAAOC,MAAM,KAAK,WAAW,IAAKA,MAAc,CAACC,UAAU,EAAE;IAC/D,MAAMC,UAAU,GAAGR,YAAY,CAACK,UAAU,CAAC;IAC3C,OAAOC,MAAM,CAACC,UAAU,CAACC,UAAU,CAAC,CAACC,OAAO;;EAE9C,OAAO,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}