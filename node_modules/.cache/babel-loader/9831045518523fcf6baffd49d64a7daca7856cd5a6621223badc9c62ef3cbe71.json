{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nconst avatarCss = \":host{display:flex;position:relative;width:-moz-fit-content;width:fit-content}:host .avatar{display:flex;align-items:center}:host .avatar>.avatar-image{height:2rem;width:2rem;min-height:2rem;min-width:2rem;border-radius:100px}:host .avatar>.avatar-initials{display:flex;align-items:center;justify-content:center;height:2rem;width:2rem;min-height:2rem;min-width:2rem;border-radius:100px;background-color:var(--theme-color-component-3)}:host .avatar #avatar-path-background{fill:var(--theme-avatar--background)}:host .avatar #avatar-path-person{fill:var(--theme-color-4)}\";\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction DefaultAvatar(props) {\n  const {\n    initials\n  } = props;\n  if (initials) {\n    return h(\"div\", {\n      class: 'avatar-initials'\n    }, initials);\n  }\n  return h(\"svg\", {\n    class: 'avatar-image',\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"32\",\n    height: \"32\",\n    viewBox: \"0 0 32 32\"\n  }, h(\"g\", {\n    fill: \"none\",\n    \"fill-rule\": \"evenodd\"\n  }, h(\"path\", {\n    id: \"avatar-path-background\",\n    d: \"M16 0C7.163 0 0 7.163 0 16s7.163 16 16 16 16-7.163\\n          16-16c0-4.243-1.686-8.313-4.686-11.314C24.314 1.686 20.244 0 16 0z\"\n  }), h(\"path\", {\n    id: \"avatar-path-person\",\n    d: \"M17.897 17.91c3.8-.018 7.358 1.875 9.485 5.046-2.417 3.999-6.734 6.434-11.382\\n        6.42-4.648.014-8.965-2.421-11.382-6.42 2.127-3.171 5.685-5.064\\n        9.485-5.045h3.794zM15.821 2.129c3.682 0 6.667 2.984 6.667 6.666 0 3.682-2.985\\n        6.667-6.667 6.667s-6.667-2.985-6.667-6.667 2.985-6.666 6.667-6.666z\"\n  })));\n}\nconst Avatar = /*@__PURE__*/proxyCustomElement(class Avatar extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.image = undefined;\n    this.initials = undefined;\n  }\n  render() {\n    return h(Host, null, h(\"li\", {\n      class: \"avatar\"\n    }, this.image ? h(\"img\", {\n      src: this.image,\n      class: \"avatar-image\"\n    }) : h(DefaultAvatar, {\n      initials: this.initials\n    })));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return avatarCss;\n  }\n}, [1, \"ix-avatar\", {\n  \"image\": [1],\n  \"initials\": [1]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-avatar\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-avatar\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Avatar);\n        }\n        break;\n    }\n  });\n}\nexport { Avatar as A, defineCustomElement as d };","map":{"version":3,"names":["avatarCss","DefaultAvatar","props","initials","h","class","xmlns","width","height","viewBox","fill","id","d","Avatar","proxyCustomElement","HTMLElement","render","Host","image","src"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\avatar\\avatar.scss?tag=ix-avatar&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\avatar\\avatar.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/text-truncation';\n@import 'mixins/hover';\n\n:host {\n  display: flex;\n  position: relative;\n  width: fit-content;\n\n  .avatar {\n    display: flex;\n    align-items: center;\n\n    > .avatar-image {\n      height: 2rem;\n      width: 2rem;\n      min-height: 2rem;\n      min-width: 2rem;\n      border-radius: 100px;\n    }\n\n    > .avatar-initials {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 2rem;\n      width: 2rem;\n      min-height: 2rem;\n      min-width: 2rem;\n      border-radius: 100px;\n      background-color: var(--theme-color-component-3);\n    }\n\n    #avatar-path-background {\n      fill: var(--theme-avatar--background);\n    }\n\n    #avatar-path-person {\n      fill: var(--theme-color-4);\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nfunction DefaultAvatar(props: { initials?: string }) {\n  const { initials } = props;\n\n  if (initials) {\n    return <div class={'avatar-initials'}>{initials}</div>;\n  }\n\n  return (\n    <svg\n      class={'avatar-image'}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"32\"\n      height=\"32\"\n      viewBox=\"0 0 32 32\"\n    >\n      <g fill=\"none\" fill-rule=\"evenodd\">\n        <path\n          id=\"avatar-path-background\"\n          d=\"M16 0C7.163 0 0 7.163 0 16s7.163 16 16 16 16-7.163\n          16-16c0-4.243-1.686-8.313-4.686-11.314C24.314 1.686 20.244 0 16 0z\"\n        />\n        <path\n          id=\"avatar-path-person\"\n          d=\"M17.897 17.91c3.8-.018 7.358 1.875 9.485 5.046-2.417 3.999-6.734 6.434-11.382\n        6.42-4.648.014-8.965-2.421-11.382-6.42 2.127-3.171 5.685-5.064\n        9.485-5.045h3.794zM15.821 2.129c3.682 0 6.667 2.984 6.667 6.666 0 3.682-2.985\n        6.667-6.667 6.667s-6.667-2.985-6.667-6.667 2.985-6.666 6.667-6.666z\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nimport { Component, Element, h, Host, Prop } from '@stencil/core';\n\n/**\n * @since 2.0.0\n */\n@Component({\n  tag: 'ix-avatar',\n  styleUrl: 'avatar.scss',\n  shadow: true,\n})\nexport class Avatar {\n  @Element() hostElement: HTMLIxAvatarElement;\n\n  /**\n   * Display a avatar image\n   *\n   */\n  @Prop() image: string;\n\n  /**\n   * Display the initials of the user. Will be overwritten by image\n   *\n   */\n  @Prop() initials: string;\n\n  render() {\n    return (\n      <Host>\n        <li class=\"avatar\">\n          {this.image ? (\n            <img src={this.image} class=\"avatar-image\"></img>\n          ) : (\n            <DefaultAvatar initials={this.initials} />\n          )}\n        </li>\n      </Host>\n    );\n  }\n}\n"],"mappings":";AAAA,MAAMA,SAAS,GAAG,2jBAA2jB;;ACA7kB;;;;;;;;AASA,SAASC,aAAaA,CAACC,KAA4B;EACjD,MAAM;IAAEC;EAAQ,CAAE,GAAGD,KAAK;EAE1B,IAAIC,QAAQ,EAAE;IACZ,OAAOC,CAAA;MAAKC,KAAK,EAAE;IAAiB,GAAGF,QAAQ,CAAO;;EAGxD,OACEC,CAAA;IACEC,KAAK,EAAE,cAAc;IACrBC,KAAK,EAAC,4BAA4B;IAClCC,KAAK,EAAC,IAAI;IACVC,MAAM,EAAC,IAAI;IACXC,OAAO,EAAC;EAAW,GAEnBL,CAAA;IAAGM,IAAI,EAAC,MAAM;IAAA,aAAW;EAAS,GAChCN,CAAA;IACEO,EAAE,EAAC,wBAAwB;IAC3BC,CAAC,EAAC;EACiE,EACnE,EACFR,CAAA;IACEO,EAAE,EAAC,oBAAoB;IACvBC,CAAC,EAAC;EAGgE,EAClE,CACA,CACA;AAEV;MAYaC,MAAM,gBAAAC,kBAAA,OAAAD,MAAA,SAAAE,WAAA;;;;;;;;EAejBC,MAAMA,CAAA;IACJ,OACEZ,CAAA,CAACa,IAAI,QACHb,CAAA;MAAIC,KAAK,EAAC;IAAQ,GACf,IAAI,CAACa,KAAK,GACTd,CAAA;MAAKe,GAAG,EAAE,IAAI,CAACD,KAAK;MAAEb,KAAK,EAAC;IAAc,EAAO,GAEjDD,CAAA,CAACH,aAAa;MAACE,QAAQ,EAAE,IAAI,CAACA;IAAQ,EACvC,CACE,CACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}