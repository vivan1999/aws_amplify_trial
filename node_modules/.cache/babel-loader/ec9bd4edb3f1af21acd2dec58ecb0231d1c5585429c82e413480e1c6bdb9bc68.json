{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { T as TypedEvent } from './typed-event.js';\nimport { d as defineCustomElement$4 } from './icon-button.js';\nimport { d as defineCustomElement$3 } from './spinner.js';\nimport { d as defineCustomElement$2 } from './toast.js';\nconst toastContainerCss = \":host{}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}#toast-container>:not(:last-child){margin-block-end:1rem}.toast-container{display:block;position:fixed}.toast-container--top-right{right:1rem;top:2rem}.toast-container--bottom-right{right:1rem;bottom:2rem}\";\nconst ToastContainer = /*@__PURE__*/proxyCustomElement(class ToastContainer extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.PREFIX_POSITION_CLASS = 'toast-container--';\n    this.containerId = 'toast-container';\n    this.containerClass = 'toast-container';\n    this.position = 'bottom-right';\n  }\n  get hostContainer() {\n    return document.getElementById(this.containerId);\n  }\n  componentDidLoad() {\n    if (!document.getElementById(this.containerId)) {\n      const toastContainer = document.createElement('div');\n      toastContainer.id = this.containerId;\n      toastContainer.classList.add(this.containerClass);\n      toastContainer.classList.add(`${this.PREFIX_POSITION_CLASS}${this.position}`);\n      document.body.appendChild(toastContainer);\n    }\n  }\n  onPositionChange(newPosition, oldPosition) {\n    const toastContainer = document.getElementById(this.containerId);\n    toastContainer.classList.remove(`${this.PREFIX_POSITION_CLASS}${oldPosition}`);\n    toastContainer.classList.add(`${this.PREFIX_POSITION_CLASS}${newPosition}`);\n  }\n  /**\n   * Display a toast message\n   * @param config\n   */\n  async showToast(config) {\n    var _a, _b;\n    const toast = document.createElement('ix-toast');\n    const onClose = new TypedEvent();\n    function removeToast(result) {\n      toast.remove();\n      onClose.emit(result);\n    }\n    toast.toastTitle = config.title;\n    toast.type = config.type;\n    toast.autoClose = (_a = config.autoClose) !== null && _a !== void 0 ? _a : true;\n    toast.autoCloseDelay = (_b = config.autoCloseDelay) !== null && _b !== void 0 ? _b : 5000;\n    toast.icon = config.icon;\n    toast.iconColor = config.iconColor;\n    toast.addEventListener('closeToast', event => {\n      const {\n        detail\n      } = event;\n      removeToast(detail);\n    });\n    if (typeof config.message === 'string') {\n      toast.innerText = config.message;\n    } else {\n      toast.appendChild(config.message);\n    }\n    setTimeout(() => {\n      this.hostContainer.appendChild(toast);\n    });\n    return {\n      onClose,\n      close: result => {\n        removeToast(result);\n      }\n    };\n  }\n  render() {\n    return h(Host, {\n      class: {\n        'toast-container--bottom-right': this.position === 'bottom-right',\n        'toast-container--top-right': this.position === 'top-right'\n      }\n    });\n  }\n  static get watchers() {\n    return {\n      \"position\": [\"onPositionChange\"]\n    };\n  }\n  static get style() {\n    return toastContainerCss;\n  }\n}, [1, \"ix-toast-container\", {\n  \"containerId\": [1, \"container-id\"],\n  \"containerClass\": [1, \"container-class\"],\n  \"position\": [1],\n  \"showToast\": [64]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-toast-container\", \"ix-icon-button\", \"ix-spinner\", \"ix-toast\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-toast-container\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, ToastContainer);\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-toast\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxToastContainer = ToastContainer;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxToastContainer, defineCustomElement };","map":{"version":3,"names":["toastContainerCss","ToastContainer","proxyCustomElement","HTMLElement","PREFIX_POSITION_CLASS","hostContainer","document","getElementById","containerId","componentDidLoad","toastContainer","createElement","id","classList","add","containerClass","position","body","appendChild","onPositionChange","newPosition","oldPosition","remove","showToast","config","toast","onClose","TypedEvent","removeToast","result","emit","toastTitle","title","type","autoClose","_a","autoCloseDelay","_b","icon","iconColor","addEventListener","event","detail","message","innerText","setTimeout","close","render","h","Host","class"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\toast\\styles\\toast-container.scss?tag=ix-toast-container&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\toast\\toast-container.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n}\n\n#toast-container {\n  > :not(:last-child) {\n    margin-block-end: $default-space;\n  }\n}\n\n.toast-container {\n  display: block;\n  position: fixed;\n}\n\n.toast-container--top-right {\n  right: 1rem;\n  top: 2rem;\n}\n\n.toast-container--bottom-right {\n  right: 1rem;\n  bottom: 2rem;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, h, Host, Method, Prop, Watch } from '@stencil/core';\nimport { TypedEvent } from '../utils/typed-event';\nimport { ToastConfig } from './toast-utils';\n\n@Component({\n  tag: 'ix-toast-container',\n  styleUrl: './styles/toast-container.scss',\n  shadow: true,\n})\nexport class ToastContainer {\n  /**\n   */\n  @Prop() containerId = 'toast-container';\n\n  /**\n   */\n  @Prop() containerClass = 'toast-container';\n\n  /**\n   */\n  @Prop() position: 'bottom-right' | 'top-right' = 'bottom-right';\n\n  private readonly PREFIX_POSITION_CLASS = 'toast-container--';\n\n  get hostContainer() {\n    return document.getElementById(this.containerId);\n  }\n\n  componentDidLoad() {\n    if (!document.getElementById(this.containerId)) {\n      const toastContainer = document.createElement('div');\n      toastContainer.id = this.containerId;\n      toastContainer.classList.add(this.containerClass);\n      toastContainer.classList.add(\n        `${this.PREFIX_POSITION_CLASS}${this.position}`\n      );\n      document.body.appendChild(toastContainer);\n    }\n  }\n\n  @Watch('position')\n  onPositionChange(newPosition: string, oldPosition: string) {\n    const toastContainer = document.getElementById(this.containerId);\n    toastContainer.classList.remove(\n      `${this.PREFIX_POSITION_CLASS}${oldPosition}`\n    );\n    toastContainer.classList.add(`${this.PREFIX_POSITION_CLASS}${newPosition}`);\n  }\n\n  /**\n   * Display a toast message\n   * @param config\n   */\n  @Method()\n  async showToast(config: ToastConfig) {\n    const toast = document.createElement('ix-toast');\n\n    const onClose = new TypedEvent<any | undefined>();\n\n    function removeToast(result?: any) {\n      toast.remove();\n      onClose.emit(result);\n    }\n\n    toast.toastTitle = config.title;\n    toast.type = config.type;\n    toast.autoClose = config.autoClose ?? true;\n    toast.autoCloseDelay = config.autoCloseDelay ?? 5000;\n    toast.icon = config.icon;\n    toast.iconColor = config.iconColor;\n    toast.addEventListener(\n      'closeToast',\n      (event: CustomEvent<any | undefined>) => {\n        const { detail } = event;\n        removeToast(detail);\n      }\n    );\n\n    if (typeof config.message === 'string') {\n      toast.innerText = config.message;\n    } else {\n      toast.appendChild(config.message);\n    }\n\n    setTimeout(() => {\n      this.hostContainer.appendChild(toast);\n    });\n\n    return {\n      onClose,\n      close: (result?: any) => {\n        removeToast(result);\n      },\n    };\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          'toast-container--bottom-right': this.position === 'bottom-right',\n          'toast-container--top-right': this.position === 'top-right',\n        }}\n      >\n        {/* <slot></slot> */}\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}