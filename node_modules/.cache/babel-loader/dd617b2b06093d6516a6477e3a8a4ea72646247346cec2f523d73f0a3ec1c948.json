{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host, Fragment } from '@stencil/core/internal/client';\nimport { a as a11yBoolean } from './a11y.js';\nconst toggleCss = \":host{display:inline-flex;position:relative;height:2rem;justify-content:flex-start;align-items:center;margin-right:0.25rem;cursor:pointer}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .switch{position:relative;display:inline-block;width:3rem;min-width:3rem;max-width:3rem;height:1.5rem;margin-right:0.25rem}:host .switch input{opacity:0;width:0;height:0}:host .slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background-color:var(--theme-switch-off--background);transition:150ms;border-radius:1.5rem}:host .slider:before{position:absolute;content:\\\"\\\";height:18px;width:18px;left:4px;bottom:3px;background-color:var(--theme-switch-thumb-off--background);transition:150ms;border-radius:50%}:host input{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}:host input:focus-visible+.switch>.slider{outline:1px solid var(--theme-color-focus-bdr);outline-offset:1px}:host input:checked+.switch>.slider{background-color:var(--theme-switch-on--background)}:host input:checked+.switch>.slider::before{background-color:var(--theme-switch-thumb-on--background);transform:translateX(1.35rem)}:host input+.switch:hover>.slider{background-color:var(--theme-switch-off--background--hover)}:host input+.switch:hover>.slider:before{background-color:var(--theme-switch-thumb-off--background--hover)}:host input+.switch:active>.slider{background-color:var(--theme-switch-off--background--active)}:host input+.switch:active>.slider:before{background-color:var(--theme-switch-thumb-off--background--active)}:host input:checked+.switch:hover>.slider{background-color:var(--theme-switch-on--background--hover)}:host input:checked+.switch:hover>.slider:before{background-color:var(--theme-switch-thumb-on--background--hover)}:host input:checked+.switch:active>.slider{background-color:var(--theme-switch-on--background--active)}:host input:checked+.switch:active>.slider:before{background-color:var(--theme-switch-thumb-on--background--active)}:host input:indeterminate+.switch>.slider::before{transform:translateX(0.7rem)}:host .toggle-text{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}:host(.disabled){pointer-events:none}:host(.disabled) input+.switch{opacity:0.5}:host(.disabled) input+.switch>.slider{background-color:var(--theme-switch-off--background--disabled)}:host(.disabled) input+.switch>.slider:before{background-color:var(--theme-switch-thumb-off--background--disabled)}:host(.disabled) input:checked+.switch>.slider{background-color:var(--theme-switch-on--background--disabled)}:host(.disabled) input:checked+.switch>.slider:before{background-color:var(--theme-switch-thumb-on--background--disabled)}:host(.disabled) .toggle-text{color:var(--theme-color-weak-text)}\";\nconst Toggle = /*@__PURE__*/proxyCustomElement(class Toggle extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.checkedChange = createEvent(this, \"checkedChange\", 7);\n    this.checked = false;\n    this.disabled = false;\n    this.indeterminate = false;\n    this.textOn = 'On';\n    this.textOff = 'Off';\n    this.textIndeterminate = 'Mixed';\n    this.hideText = false;\n  }\n  onCheckedChange(newChecked) {\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n    this.checked = newChecked;\n    this.checkedChange.emit(this.checked);\n  }\n  render() {\n    return h(Host, {\n      class: {\n        disabled: this.disabled\n      },\n      onClick: () => this.onCheckedChange(!this.checked)\n    }, h(\"input\", {\n      disabled: this.disabled,\n      indeterminate: this.indeterminate,\n      checked: this.checked,\n      role: \"switch\",\n      tabindex: 0,\n      type: \"checkbox\",\n      \"aria-checked\": a11yBoolean(this.checked),\n      onChange: event => this.onCheckedChange(event.target.checked)\n    }), h(\"label\", {\n      class: \"switch\",\n      tabIndex: -1\n    }, h(\"span\", {\n      class: \"slider\"\n    })), !this.hideText ? h(Fragment, null, !this.indeterminate ? h(\"span\", {\n      class: 'toggle-text',\n      \"aria-hidden\": a11yBoolean(true)\n    }, this.checked ? this.textOn : this.textOff) : h(\"span\", {\n      class: 'toggle-text',\n      \"aria-hidden\": a11yBoolean(true)\n    }, this.textIndeterminate)) : null);\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return toggleCss;\n  }\n}, [1, \"ix-toggle\", {\n  \"checked\": [1540],\n  \"disabled\": [4],\n  \"indeterminate\": [1540],\n  \"textOn\": [1, \"text-on\"],\n  \"textOff\": [1, \"text-off\"],\n  \"textIndeterminate\": [1, \"text-indeterminate\"],\n  \"hideText\": [4, \"hide-text\"]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-toggle\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-toggle\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Toggle);\n        }\n        break;\n    }\n  });\n}\nconst IxToggle = Toggle;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxToggle, defineCustomElement };","map":{"version":3,"names":["toggleCss","Toggle","proxyCustomElement","HTMLElement","onCheckedChange","newChecked","indeterminate","checked","checkedChange","emit","render","h","Host","class","disabled","onClick","role","tabindex","type","a11yBoolean","onChange","event","target","tabIndex","hideText","Fragment","textOn","textOff","textIndeterminate"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\toggle\\toggle.scss?tag=ix-toggle&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\toggle\\toggle.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/hover';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: inline-flex;\n  position: relative;\n  height: 2rem;\n  justify-content: flex-start;\n  align-items: center;\n  margin-right: 0.25rem;\n\n  cursor: pointer;\n\n  .switch {\n    position: relative;\n    display: inline-block;\n    width: 3rem;\n    min-width: 3rem;\n    max-width: 3rem;\n    height: 1.5rem;\n    margin-right: 0.25rem;\n  }\n\n  .switch input {\n    opacity: 0;\n    width: 0;\n    height: 0;\n  }\n\n  .slider {\n    position: absolute;\n    cursor: pointer;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: var(--theme-switch-off--background);\n    transition: 150ms;\n    border-radius: 1.5rem;\n  }\n\n  .slider:before {\n    position: absolute;\n    content: '';\n    height: 18px;\n    width: 18px;\n    left: 4px;\n    bottom: 3px;\n    background-color: var(--theme-switch-thumb-off--background);\n    transition: 150ms;\n    border-radius: 50%;\n  }\n\n  input {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n  }\n\n  input:focus-visible + .switch > .slider {\n    outline: 1px solid var(--theme-color-focus-bdr);\n    outline-offset: 1px;\n  }\n\n  input:checked + .switch > .slider {\n    background-color: var(--theme-switch-on--background);\n  }\n\n  input:checked + .switch > .slider::before {\n    background-color: var(--theme-switch-thumb-on--background);\n    transform: translateX(1.35rem);\n  }\n\n  // Toggle NOT checked\n  input + .switch:hover > .slider {\n    background-color: var(--theme-switch-off--background--hover);\n  }\n\n  input + .switch:hover > .slider:before {\n    background-color: var(--theme-switch-thumb-off--background--hover);\n  }\n\n  input + .switch:active > .slider {\n    background-color: var(--theme-switch-off--background--active);\n  }\n\n  input + .switch:active > .slider:before {\n    background-color: var(--theme-switch-thumb-off--background--active);\n  }\n\n  // Toggle checked\n  input:checked + .switch:hover > .slider {\n    background-color: var(--theme-switch-on--background--hover);\n  }\n\n  input:checked + .switch:hover > .slider:before {\n    background-color: var(--theme-switch-thumb-on--background--hover);\n  }\n\n  input:checked + .switch:active > .slider {\n    background-color: var(--theme-switch-on--background--active);\n  }\n\n  input:checked + .switch:active > .slider:before {\n    background-color: var(--theme-switch-thumb-on--background--active);\n  }\n\n  input:indeterminate + .switch > .slider::before {\n    transform: translateX(0.7rem);\n  }\n\n  .toggle-text {\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n  }\n}\n\n:host(.disabled) {\n  pointer-events: none;\n\n  input + .switch {\n    opacity: 0.5;\n  }\n\n  input + .switch > .slider {\n    background-color: var(--theme-switch-off--background--disabled);\n  }\n\n  input + .switch > .slider:before {\n    background-color: var(--theme-switch-thumb-off--background--disabled);\n  }\n\n  input:checked + .switch > .slider {\n    background-color: var(--theme-switch-on--background--disabled);\n  }\n\n  input:checked + .switch > .slider:before {\n    background-color: var(--theme-switch-thumb-on--background--disabled);\n  }\n\n  .toggle-text {\n    color: var(--theme-color-weak-text);\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n} from '@stencil/core';\nimport { a11yBoolean } from '../utils/a11y';\n\n@Component({\n  tag: 'ix-toggle',\n  styleUrl: 'toggle.scss',\n  shadow: true,\n})\nexport class Toggle {\n  @Element() hostElement!: HTMLIxToggleElement;\n\n  /**\n   * Whether the slide-toggle element is checked or not.\n   */\n  @Prop({ mutable: true, reflect: true }) checked = false;\n\n  /**\n   * Whether the slide-toggle element is disabled or not.\n   */\n  @Prop() disabled = false;\n\n  /**\n   * If true the control is in indeterminate state\n   */\n  @Prop({ mutable: true, reflect: true }) indeterminate = false;\n\n  /**\n   * Text for on state\n   */\n  @Prop() textOn = 'On';\n\n  /**\n   * Text for off state\n   */\n  @Prop() textOff = 'Off';\n\n  /**\n   * Text for indeterminate state\n   */\n  @Prop() textIndeterminate = 'Mixed';\n\n  /**\n   * Hide `on` and `off` text\n   */\n  @Prop() hideText = false;\n\n  /**\n   * An event will be dispatched each time the slide-toggle changes its value.\n   */\n  @Event() checkedChange: EventEmitter<boolean>;\n\n  onCheckedChange(newChecked: boolean) {\n    if (this.indeterminate) {\n      this.indeterminate = false;\n    }\n    this.checked = newChecked;\n    this.checkedChange.emit(this.checked);\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          disabled: this.disabled,\n        }}\n        onClick={() => this.onCheckedChange(!this.checked)}\n      >\n        <input\n          disabled={this.disabled}\n          indeterminate={this.indeterminate}\n          checked={this.checked}\n          role=\"switch\"\n          tabindex={0}\n          type=\"checkbox\"\n          aria-checked={a11yBoolean(this.checked)}\n          onChange={(event) =>\n            this.onCheckedChange((event.target as any).checked)\n          }\n        ></input>\n        <label class=\"switch\" tabIndex={-1}>\n          <span class=\"slider\"></span>\n        </label>\n        {!this.hideText ? (\n          <Fragment>\n            {!this.indeterminate ? (\n              <span class={'toggle-text'} aria-hidden={a11yBoolean(true)}>\n                {this.checked ? this.textOn : this.textOff}\n              </span>\n            ) : (\n              <span class={'toggle-text'} aria-hidden={a11yBoolean(true)}>\n                {this.textIndeterminate}\n              </span>\n            )}\n          </Fragment>\n        ) : null}\n      </Host>\n    );\n  }\n}\n"],"mappings":";;AAAA,MAAMA,SAAS,GAAG,+uGAA+uG;MC0BpvGC,MAAM,gBAAAC,kBAAA,OAAAD,MAAA,SAAAE,WAAA;;;;;;mBAMiC,KAAK;oBAKpC,KAAK;yBAKgC,KAAK;kBAK5C,IAAI;mBAKH,KAAK;6BAKK,OAAO;oBAKhB,KAAK;;EAOxBC,eAAeA,CAACC,UAAmB;IACjC,IAAI,IAAI,CAACC,aAAa,EAAE;MACtB,IAAI,CAACA,aAAa,GAAG,KAAK;;IAE5B,IAAI,CAACC,OAAO,GAAGF,UAAU;IACzB,IAAI,CAACG,aAAa,CAACC,IAAI,CAAC,IAAI,CAACF,OAAO,CAAC;;EAGvCG,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI;MACHC,KAAK,EAAE;QACLC,QAAQ,EAAE,IAAI,CAACA;OAChB;MACDC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACX,eAAe,CAAC,CAAC,IAAI,CAACG,OAAO;IAAC,GAElDI,CAAA;MACEG,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvBR,aAAa,EAAE,IAAI,CAACA,aAAa;MACjCC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBS,IAAI,EAAC,QAAQ;MACbC,QAAQ,EAAE,CAAC;MACXC,IAAI,EAAC,UAAU;MAAA,gBACDC,WAAW,CAAC,IAAI,CAACZ,OAAO,CAAC;MACvCa,QAAQ,EAAGC,KAAK,IACd,IAAI,CAACjB,eAAe,CAAEiB,KAAK,CAACC,MAAc,CAACf,OAAO;IAAC,EAE9C,EACTI,CAAA;MAAOE,KAAK,EAAC,QAAQ;MAACU,QAAQ,EAAE,CAAC;IAAC,GAChCZ,CAAA;MAAME,KAAK,EAAC;IAAQ,EAAQ,CACtB,EACP,CAAC,IAAI,CAACW,QAAQ,GACbb,CAAA,CAACc,QAAQ,QACN,CAAC,IAAI,CAACnB,aAAa,GAClBK,CAAA;MAAME,KAAK,EAAE,aAAa;MAAA,eAAeM,WAAW,CAAC,IAAI;IAAC,GACvD,IAAI,CAACZ,OAAO,GAAG,IAAI,CAACmB,MAAM,GAAG,IAAI,CAACC,OAAO,CACrC,GAEPhB,CAAA;MAAME,KAAK,EAAE,aAAa;MAAA,eAAeM,WAAW,CAAC,IAAI;IAAC,GACvD,IAAI,CAACS,iBAAiB,CAE1B,CACQ,GACT,IAAI,CACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}