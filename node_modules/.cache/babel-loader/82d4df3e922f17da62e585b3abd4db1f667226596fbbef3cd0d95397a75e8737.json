{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { c as createMutationObserver } from './mutation-observer.js';\nconst workflowStepsCss = \":host{}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .steps{display:flex}:host .steps.vertical{display:block}\";\nconst WorkflowSteps = /*@__PURE__*/proxyCustomElement(class WorkflowSteps extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.stepSelected = createEvent(this, \"stepSelected\", 7);\n    this.vertical = false;\n    this.clickable = false;\n    this.selectedIndex = 0;\n  }\n  getSteps() {\n    return Array.from(this.hostElement.querySelectorAll('ix-workflow-step'));\n  }\n  updateSteps() {\n    let steps = this.getSteps();\n    steps.forEach((element, index) => {\n      element.vertical = this.vertical;\n      element.clickable = this.clickable;\n      element.selected = this.selectedIndex === index;\n      if (steps.length === 1) {\n        element.position = 'single';\n        return;\n      }\n      if (index === 0) {\n        element.position = 'first';\n      } else if (index === steps.length - 1) {\n        element.position = 'last';\n      } else {\n        element.position = 'undefined';\n      }\n    });\n  }\n  onStepSelectionChanged(event) {\n    const eventTarget = event.detail;\n    const steps = this.getSteps();\n    const clickIndex = steps.findIndex(step => step === eventTarget);\n    const clientEvent = this.stepSelected.emit(clickIndex);\n    if (clientEvent.defaultPrevented) {\n      return;\n    }\n    steps.forEach((step, index) => {\n      step.selected = index === clickIndex;\n    });\n  }\n  componentDidLoad() {\n    this.observer = createMutationObserver(mutations => {\n      for (let mutation of mutations) {\n        if (mutation.type === 'childList') {\n          this.updateSteps();\n        }\n      }\n    });\n    this.observer.observe(this.hostElement, {\n      childList: true\n    });\n  }\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n  componentDidRender() {\n    this.updateSteps();\n  }\n  render() {\n    return h(Host, null, h(\"div\", {\n      class: {\n        steps: true,\n        vertical: this.vertical\n      }\n    }, h(\"slot\", null)));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return workflowStepsCss;\n  }\n}, [1, \"ix-workflow-steps\", {\n  \"vertical\": [4],\n  \"clickable\": [4],\n  \"selectedIndex\": [2, \"selected-index\"]\n}, [[0, \"selectedChanged\", \"onStepSelectionChanged\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-workflow-steps\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-workflow-steps\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, WorkflowSteps);\n        }\n        break;\n    }\n  });\n}\nconst IxWorkflowSteps = WorkflowSteps;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxWorkflowSteps, defineCustomElement };","map":{"version":3,"names":["workflowStepsCss","WorkflowSteps","proxyCustomElement","HTMLElement","getSteps","Array","from","hostElement","querySelectorAll","updateSteps","steps","forEach","element","index","vertical","clickable","selected","selectedIndex","length","position","onStepSelectionChanged","event","eventTarget","detail","clickIndex","findIndex","step","clientEvent","stepSelected","emit","defaultPrevented","componentDidLoad","observer","createMutationObserver","mutations","mutation","type","observe","childList","disconnectedCallback","disconnect","componentDidRender","render","h","Host","class"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\workflow-steps\\workflow-steps.scss?tag=ix-workflow-steps&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\workflow-steps\\workflow-steps.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  .steps {\n    display: flex;\n\n    &.vertical {\n      display: block;\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n} from '@stencil/core';\nimport { createMutationObserver } from '../utils/mutation-observer';\n\n@Component({\n  tag: 'ix-workflow-steps',\n  styleUrl: 'workflow-steps.scss',\n  shadow: true,\n})\nexport class WorkflowSteps {\n  @Element() hostElement!: HTMLIxWorkflowStepsElement;\n\n  /**\n   * Select orientation\n   */\n  @Prop() vertical: boolean = false;\n\n  /**\n   * Activate navigation click\n   */\n  @Prop() clickable: boolean = false;\n\n  /**\n   * Activate navigation click\n   */\n  @Prop() selectedIndex: number = 0;\n\n  /**\n   * On step selected event\n   */\n  @Event() stepSelected: EventEmitter<number>;\n\n  private getSteps() {\n    return Array.from(this.hostElement.querySelectorAll('ix-workflow-step'));\n  }\n\n  updateSteps() {\n    let steps = this.getSteps();\n    steps.forEach((element, index) => {\n      element.vertical = this.vertical;\n      element.clickable = this.clickable;\n      element.selected = this.selectedIndex === index;\n\n      if (steps.length === 1) {\n        element.position = 'single';\n        return;\n      }\n\n      if (index === 0) {\n        element.position = 'first';\n      } else if (index === steps.length - 1) {\n        element.position = 'last';\n      } else {\n        element.position = 'undefined';\n      }\n    });\n  }\n\n  private observer: MutationObserver;\n\n  @Listen('selectedChanged')\n  onStepSelectionChanged(event: CustomEvent<HTMLIxWorkflowStepElement>) {\n    const eventTarget = event.detail;\n\n    const steps = this.getSteps();\n    const clickIndex = steps.findIndex((step) => step === eventTarget);\n    const clientEvent = this.stepSelected.emit(clickIndex);\n\n    if (clientEvent.defaultPrevented) {\n      return;\n    }\n\n    steps.forEach((step, index) => {\n      step.selected = index === clickIndex;\n    });\n  }\n\n  componentDidLoad() {\n    this.observer = createMutationObserver((mutations) => {\n      for (let mutation of mutations) {\n        if (mutation.type === 'childList') {\n          this.updateSteps();\n        }\n      }\n    });\n\n    this.observer.observe(this.hostElement, { childList: true });\n  }\n\n  disconnectedCallback() {\n    if (this.observer) {\n      this.observer.disconnect();\n    }\n  }\n\n  componentDidRender() {\n    this.updateSteps();\n  }\n\n  render() {\n    return (\n      <Host>\n        <div class={{ steps: true, vertical: this.vertical }}>\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;AAAA,MAAMA,gBAAgB,GAAG,mqBAAmqB;MC0B/qBC,aAAa,gBAAAC,kBAAA,OAAAD,aAAA,SAAAE,WAAA;;;;;;oBAMI,KAAK;qBAKJ,KAAK;yBAKF,CAAC;;EAOzBC,QAAQA,CAAA;IACd,OAAOC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACC,WAAW,CAACC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC;;EAG1EC,WAAWA,CAAA;IACT,IAAIC,KAAK,GAAG,IAAI,CAACN,QAAQ,EAAE;IAC3BM,KAAK,CAACC,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK;MAC3BD,OAAO,CAACE,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAChCF,OAAO,CAACG,SAAS,GAAG,IAAI,CAACA,SAAS;MAClCH,OAAO,CAACI,QAAQ,GAAG,IAAI,CAACC,aAAa,KAAKJ,KAAK;MAE/C,IAAIH,KAAK,CAACQ,MAAM,KAAK,CAAC,EAAE;QACtBN,OAAO,CAACO,QAAQ,GAAG,QAAQ;QAC3B;;MAGF,IAAIN,KAAK,KAAK,CAAC,EAAE;QACfD,OAAO,CAACO,QAAQ,GAAG,OAAO;OAC3B,MAAM,IAAIN,KAAK,KAAKH,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE;QACrCN,OAAO,CAACO,QAAQ,GAAG,MAAM;OAC1B,MAAM;QACLP,OAAO,CAACO,QAAQ,GAAG,WAAW;;KAEjC,CAAC;;EAMJC,sBAAsBA,CAACC,KAA6C;IAClE,MAAMC,WAAW,GAAGD,KAAK,CAACE,MAAM;IAEhC,MAAMb,KAAK,GAAG,IAAI,CAACN,QAAQ,EAAE;IAC7B,MAAMoB,UAAU,GAAGd,KAAK,CAACe,SAAS,CAAEC,IAAI,IAAKA,IAAI,KAAKJ,WAAW,CAAC;IAClE,MAAMK,WAAW,GAAG,IAAI,CAACC,YAAY,CAACC,IAAI,CAACL,UAAU,CAAC;IAEtD,IAAIG,WAAW,CAACG,gBAAgB,EAAE;MAChC;;IAGFpB,KAAK,CAACC,OAAO,CAAC,CAACe,IAAI,EAAEb,KAAK;MACxBa,IAAI,CAACV,QAAQ,GAAGH,KAAK,KAAKW,UAAU;KACrC,CAAC;;EAGJO,gBAAgBA,CAAA;IACd,IAAI,CAACC,QAAQ,GAAGC,sBAAsB,CAAEC,SAAS;MAC/C,KAAK,IAAIC,QAAQ,IAAID,SAAS,EAAE;QAC9B,IAAIC,QAAQ,CAACC,IAAI,KAAK,WAAW,EAAE;UACjC,IAAI,CAAC3B,WAAW,EAAE;;;KAGvB,CAAC;IAEF,IAAI,CAACuB,QAAQ,CAACK,OAAO,CAAC,IAAI,CAAC9B,WAAW,EAAE;MAAE+B,SAAS,EAAE;IAAI,CAAE,CAAC;;EAG9DC,oBAAoBA,CAAA;IAClB,IAAI,IAAI,CAACP,QAAQ,EAAE;MACjB,IAAI,CAACA,QAAQ,CAACQ,UAAU,EAAE;;;EAI9BC,kBAAkBA,CAAA;IAChB,IAAI,CAAChC,WAAW,EAAE;;EAGpBiC,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI,QACHD,CAAA;MAAKE,KAAK,EAAE;QAAEnC,KAAK,EAAE,IAAI;QAAEI,QAAQ,EAAE,IAAI,CAACA;MAAQ;IAAE,GAClD6B,CAAA,cAAa,CACT,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}