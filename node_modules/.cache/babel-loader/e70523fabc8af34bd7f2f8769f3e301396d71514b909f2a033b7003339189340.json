{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { a as anime } from './anime.es.js';\nimport { d as defineCustomElement$3 } from './icon-button.js';\nimport { d as defineCustomElement$2 } from './spinner.js';\nconst drawerCss = \":host{top:0;right:0;box-shadow:var(--theme-box-shadow-level-3);visibility:hidden;display:flex;position:absolute;flex-flow:column nowrap;justify-content:flex-start;align-items:center;max-height:100vh;min-height:1.5rem;background-color:var(--theme-color-1);border-radius:0.25rem;transition:all 300ms ease-out}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .toggle{z-index:100;visibility:visible}:host .drawer-container.full-height{min-height:100%}:host .header{display:flex;position:relative;align-items:center;justify-content:flex-end;padding:0.5rem;width:100%;order:1}:host .header .header-content{flex-grow:1;margin-right:1rem}:host .content{position:relative;flex:1;flex-grow:1;order:2;height:100%;width:100%;overflow-y:auto}:host(.toggle){visibility:visible}\";\nconst Drawer = /*@__PURE__*/proxyCustomElement(class Drawer extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.open = createEvent(this, \"open\", 7);\n    this.drawerClose = createEvent(this, \"drawerClose\", 7);\n    this.callback = this.clickedOutside.bind(this);\n    this.show = false;\n    this.closeOnClickOutside = true;\n    this.fullHeight = false;\n    this.minWidth = 16;\n    this.maxWidth = 28;\n    this.width = this.minWidth;\n  }\n  onShowChanged(newValue) {\n    this.show = newValue !== undefined ? newValue : !this.show;\n    this.toggleDrawer(this.show);\n  }\n  /**\n   * Toggle or define show state of drawer\n   * @param show Overwrite toggle state with boolean\n   */\n  async toggleDrawer(show) {\n    this.show = show !== undefined ? show : !this.show;\n    if (show) {\n      this.open.emit();\n      this.slideInRight(this.divElement);\n      setTimeout(() => {\n        window.addEventListener('mousedown', this.callback);\n      }, 300);\n    } else {\n      this.drawerClose.emit();\n      this.slideOutRight(this.divElement);\n      window.removeEventListener('mousedown', this.callback);\n    }\n    return Promise.resolve();\n  }\n  onCloseClicked() {\n    this.show = false;\n  }\n  clickedOutside(evt) {\n    if (!this.closeOnClickOutside) {\n      return;\n    }\n    const target = evt.target;\n    const closestElement = target.closest('#div-container');\n    const btn = target.closest('#drawer-btn');\n    if (evt.target.type !== 'button' && closestElement !== this.divElement && target !== btn) {\n      this.show = false;\n    }\n  }\n  slideOutRight(el) {\n    anime({\n      targets: el,\n      duration: Drawer.duration,\n      translateX: [0, '16rem'],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        el.classList.add('d-none');\n      }\n    });\n  }\n  slideInRight(el) {\n    anime({\n      targets: el,\n      duration: Drawer.duration,\n      translateX: ['16rem', 0],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        el.classList.remove('d-none');\n      }\n    });\n  }\n  componentDidLoad() {\n    this.onShowChanged(this.show);\n  }\n  render() {\n    return h(Host, {\n      class: {\n        'drawer-container': true,\n        toggle: this.show,\n        'full-height': this.fullHeight,\n        'd-none': true\n      },\n      style: {\n        width: this.width === 'auto' ? this.width : `${this.width}rem`,\n        'min-width': `${this.minWidth}rem`,\n        'max-width': `${this.maxWidth}rem`\n      },\n      ref: el => this.divElement = el,\n      \"data-testid\": \"container\",\n      id: \"div-container\"\n    }, h(\"div\", {\n      class: \"header\"\n    }, h(\"div\", {\n      class: \"header-content\"\n    }, h(\"slot\", {\n      name: \"header\"\n    })), h(\"ix-icon-button\", {\n      class: \"close-button\",\n      icon: 'close',\n      size: \"24\",\n      ghost: true,\n      onClick: () => this.onCloseClicked(),\n      \"data-testid\": \"close-button\"\n    })), h(\"div\", {\n      class: \"content\"\n    }, h(\"slot\", null)));\n  }\n  static get watchers() {\n    return {\n      \"show\": [\"onShowChanged\"]\n    };\n  }\n  static get style() {\n    return drawerCss;\n  }\n}, [1, \"ix-drawer\", {\n  \"show\": [1028],\n  \"closeOnClickOutside\": [4, \"close-on-click-outside\"],\n  \"fullHeight\": [4, \"full-height\"],\n  \"minWidth\": [2, \"min-width\"],\n  \"maxWidth\": [2, \"max-width\"],\n  \"width\": [8],\n  \"toggleDrawer\": [64]\n}]);\nDrawer.duration = 300;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-drawer\", \"ix-icon-button\", \"ix-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-drawer\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Drawer);\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxDrawer = Drawer;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxDrawer, defineCustomElement };","map":{"version":3,"names":["drawerCss","Drawer","proxyCustomElement","HTMLElement","callback","clickedOutside","bind","minWidth","onShowChanged","newValue","show","undefined","toggleDrawer","open","emit","slideInRight","divElement","setTimeout","window","addEventListener","drawerClose","slideOutRight","removeEventListener","Promise","resolve","onCloseClicked","evt","closeOnClickOutside","target","closestElement","closest","btn","type","el","anime","targets","duration","translateX","opacity","easing","complete","classList","add","begin","remove","componentDidLoad","render","h","Host","class","toggle","fullHeight","style","width","maxWidth","ref","id","name","icon","size","ghost","onClick"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\drawer\\drawer.scss?tag=ix-drawer&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\drawer\\drawer.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n@import 'mixins/shadows';\n@import 'common-variables';\n\n:host {\n  @include ix-component;\n\n  top: 0;\n  right: 0;\n  @include box-shadow(3);\n\n  visibility: hidden;\n\n  display: flex;\n  position: absolute;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: center;\n\n  max-height: 100vh;\n  min-height: $large-space;\n  background-color: var(--theme-color-1);\n  border-radius: $default-border-radius;\n\n  transition: all $medium-time ease-out;\n\n  .toggle {\n    z-index: 100;\n    visibility: visible;\n  }\n\n  .drawer-container.full-height {\n    min-height: 100%;\n  }\n\n  .header {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 0.5rem;\n    width: 100%;\n    order: 1;\n\n    .header-content {\n      flex-grow: 1;\n      margin-right: $default-space;\n    }\n  }\n\n  .content {\n    position: relative;\n    flex: 1;\n    flex-grow: 1;\n    order: 2;\n    height: 100%;\n    width: 100%;\n    overflow-y: auto;\n  }\n}\n\n:host(.toggle) {\n  visibility: visible;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport anime from 'animejs';\n\n@Component({\n  tag: 'ix-drawer',\n  styleUrl: 'drawer.scss',\n  shadow: true,\n})\nexport class Drawer {\n  /**\n   * Show or hide the drawer\n   */\n  @Prop({ mutable: true }) show = false;\n\n  /**\n   * Fired in case of an outside click during drawer showed state\n   */\n  @Prop() closeOnClickOutside = true;\n\n  /**\n   * Render the drawer with maximum height\n   */\n  @Prop() fullHeight = false;\n\n  /**\n   * Min width interpreted as REM\n   */\n  @Prop() minWidth = 16;\n\n  /**\n   * Max width interpreted as REM\n   */\n  @Prop() maxWidth = 28;\n\n  /**\n   * Width interpreted as REM if not set to 'auto'\n   */\n  @Prop() width: number | 'auto' = this.minWidth;\n\n  /**\n   * Fire event after drawer is open\n   */\n  @Event() open: EventEmitter;\n\n  /**\n   * Fire event after drawer is close\n   */\n  @Event() drawerClose: EventEmitter;\n\n  private static duration = 300;\n  private callback = this.clickedOutside.bind(this);\n  private divElement?: HTMLElement;\n\n  @Watch('show')\n  onShowChanged(newValue: boolean) {\n    this.show = newValue !== undefined ? newValue : !this.show;\n    this.toggleDrawer(this.show);\n  }\n\n  /**\n   * Toggle or define show state of drawer\n   * @param show Overwrite toggle state with boolean\n   */\n  @Method()\n  async toggleDrawer(show?: boolean): Promise<void> {\n    this.show = show !== undefined ? show : !this.show;\n\n    if (show) {\n      this.open.emit();\n      this.slideInRight(this.divElement);\n      setTimeout(() => {\n        window.addEventListener('mousedown', this.callback);\n      }, 300);\n    } else {\n      this.drawerClose.emit();\n      this.slideOutRight(this.divElement);\n      window.removeEventListener('mousedown', this.callback);\n    }\n\n    return Promise.resolve();\n  }\n\n  private onCloseClicked() {\n    this.show = false;\n  }\n\n  private clickedOutside(evt: any) {\n    if (!this.closeOnClickOutside) {\n      return;\n    }\n\n    const target = evt.target;\n    const closestElement = target.closest('#div-container');\n    const btn = target.closest('#drawer-btn');\n\n    if (\n      evt.target.type !== 'button' &&\n      closestElement !== this.divElement &&\n      target !== btn\n    ) {\n      this.show = false;\n    }\n  }\n\n  private slideOutRight(el: HTMLElement) {\n    anime({\n      targets: el,\n      duration: Drawer.duration,\n      translateX: [0, '16rem'],\n      opacity: [1, 0],\n      easing: 'easeInSine',\n      complete: () => {\n        el.classList.add('d-none');\n      },\n    });\n  }\n\n  private slideInRight(el: HTMLElement) {\n    anime({\n      targets: el,\n      duration: Drawer.duration,\n      translateX: ['16rem', 0],\n      opacity: [0, 1],\n      easing: 'easeOutSine',\n      begin: () => {\n        el.classList.remove('d-none');\n      },\n    });\n  }\n\n  componentDidLoad() {\n    this.onShowChanged(this.show);\n  }\n\n  render() {\n    return (\n      <Host\n        class={{\n          'drawer-container': true,\n          toggle: this.show,\n          'full-height': this.fullHeight,\n          'd-none': true,\n        }}\n        style={{\n          width: this.width === 'auto' ? this.width : `${this.width}rem`,\n          'min-width': `${this.minWidth}rem`,\n          'max-width': `${this.maxWidth}rem`,\n        }}\n        ref={(el) => (this.divElement = el as HTMLElement)}\n        data-testid=\"container\"\n        id=\"div-container\"\n      >\n        <div class=\"header\">\n          <div class=\"header-content\">\n            <slot name=\"header\"></slot>\n          </div>\n          <ix-icon-button\n            class=\"close-button\"\n            icon={'close'}\n            size=\"24\"\n            ghost\n            onClick={() => this.onCloseClicked()}\n            data-testid=\"close-button\"\n          ></ix-icon-button>\n        </div>\n        <div class=\"content\">\n          <slot></slot>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;AAAA,MAAMA,SAAS,GAAG,8yCAA8yC;MC0BnzCC,MAAM,gBAAAC,kBAAA,OAAAD,MAAA,SAAAE,WAAA;;;;;;;IA0CT,KAAAC,QAAQ,GAAG,IAAI,CAACC,cAAc,CAACC,IAAI,CAAC,IAAI,CAAC;gBAtCjB,KAAK;+BAKP,IAAI;sBAKb,KAAK;oBAKP,EAAE;oBAKF,EAAE;iBAKY,IAAI,CAACC,QAAQ;;EAiB9CC,aAAaA,CAACC,QAAiB;IAC7B,IAAI,CAACC,IAAI,GAAGD,QAAQ,KAAKE,SAAS,GAAGF,QAAQ,GAAG,CAAC,IAAI,CAACC,IAAI;IAC1D,IAAI,CAACE,YAAY,CAAC,IAAI,CAACF,IAAI,CAAC;;;;;;EAQ9B,MAAME,YAAYA,CAACF,IAAc;IAC/B,IAAI,CAACA,IAAI,GAAGA,IAAI,KAAKC,SAAS,GAAGD,IAAI,GAAG,CAAC,IAAI,CAACA,IAAI;IAElD,IAAIA,IAAI,EAAE;MACR,IAAI,CAACG,IAAI,CAACC,IAAI,EAAE;MAChB,IAAI,CAACC,YAAY,CAAC,IAAI,CAACC,UAAU,CAAC;MAClCC,UAAU,CAAC;QACTC,MAAM,CAACC,gBAAgB,CAAC,WAAW,EAAE,IAAI,CAACf,QAAQ,CAAC;OACpD,EAAE,GAAG,CAAC;KACR,MAAM;MACL,IAAI,CAACgB,WAAW,CAACN,IAAI,EAAE;MACvB,IAAI,CAACO,aAAa,CAAC,IAAI,CAACL,UAAU,CAAC;MACnCE,MAAM,CAACI,mBAAmB,CAAC,WAAW,EAAE,IAAI,CAAClB,QAAQ,CAAC;;IAGxD,OAAOmB,OAAO,CAACC,OAAO,EAAE;;EAGlBC,cAAcA,CAAA;IACpB,IAAI,CAACf,IAAI,GAAG,KAAK;;EAGXL,cAAcA,CAACqB,GAAQ;IAC7B,IAAI,CAAC,IAAI,CAACC,mBAAmB,EAAE;MAC7B;;IAGF,MAAMC,MAAM,GAAGF,GAAG,CAACE,MAAM;IACzB,MAAMC,cAAc,GAAGD,MAAM,CAACE,OAAO,CAAC,gBAAgB,CAAC;IACvD,MAAMC,GAAG,GAAGH,MAAM,CAACE,OAAO,CAAC,aAAa,CAAC;IAEzC,IACEJ,GAAG,CAACE,MAAM,CAACI,IAAI,KAAK,QAAQ,IAC5BH,cAAc,KAAK,IAAI,CAACb,UAAU,IAClCY,MAAM,KAAKG,GAAG,EACd;MACA,IAAI,CAACrB,IAAI,GAAG,KAAK;;;EAIbW,aAAaA,CAACY,EAAe;IACnCC,KAAK,CAAC;MACJC,OAAO,EAAEF,EAAE;MACXG,QAAQ,EAAEnC,MAAM,CAACmC,QAAQ;MACzBC,UAAU,EAAE,CAAC,CAAC,EAAE,OAAO,CAAC;MACxBC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACfC,MAAM,EAAE,YAAY;MACpBC,QAAQ,EAAEA,CAAA;QACRP,EAAE,CAACQ,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;;KAE7B,CAAC;;EAGI3B,YAAYA,CAACkB,EAAe;IAClCC,KAAK,CAAC;MACJC,OAAO,EAAEF,EAAE;MACXG,QAAQ,EAAEnC,MAAM,CAACmC,QAAQ;MACzBC,UAAU,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;MACxBC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;MACfC,MAAM,EAAE,aAAa;MACrBI,KAAK,EAAEA,CAAA;QACLV,EAAE,CAACQ,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC;;KAEhC,CAAC;;EAGJC,gBAAgBA,CAAA;IACd,IAAI,CAACrC,aAAa,CAAC,IAAI,CAACE,IAAI,CAAC;;EAG/BoC,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI;MACHC,KAAK,EAAE;QACL,kBAAkB,EAAE,IAAI;QACxBC,MAAM,EAAE,IAAI,CAACxC,IAAI;QACjB,aAAa,EAAE,IAAI,CAACyC,UAAU;QAC9B,QAAQ,EAAE;OACX;MACDC,KAAK,EAAE;QACLC,KAAK,EAAE,IAAI,CAACA,KAAK,KAAK,MAAM,GAAG,IAAI,CAACA,KAAK,GAAG,GAAG,IAAI,CAACA,KAAK,KAAK;QAC9D,WAAW,EAAE,GAAG,IAAI,CAAC9C,QAAQ,KAAK;QAClC,WAAW,EAAE,GAAG,IAAI,CAAC+C,QAAQ;OAC9B;MACDC,GAAG,EAAGtB,EAAE,IAAM,IAAI,CAACjB,UAAU,GAAGiB,EAAkB;MAAA,eACtC,WAAW;MACvBuB,EAAE,EAAC;IAAe,GAElBT,CAAA;MAAKE,KAAK,EAAC;IAAQ,GACjBF,CAAA;MAAKE,KAAK,EAAC;IAAgB,GACzBF,CAAA;MAAMU,IAAI,EAAC;IAAQ,EAAQ,CACvB,EACNV,CAAA;MACEE,KAAK,EAAC,cAAc;MACpBS,IAAI,EAAE,OAAO;MACbC,IAAI,EAAC,IAAI;MACTC,KAAK;MACLC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACpC,cAAc,EAAE;MAAA,eACxB;IAAc,EACV,CACd,EACNsB,CAAA;MAAKE,KAAK,EAAC;IAAS,GAClBF,CAAA,cAAa,CACT,CACD;;;;;;;;;;;;;;;;;;;AAvHI9C,MAAA,CAAAmC,QAAQ,GAAG,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}