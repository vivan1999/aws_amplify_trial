{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host, forceUpdate } from '@stencil/core/internal/client';\nimport { b as a11yHostAttributes, a as a11yBoolean } from './a11y.js';\nimport { c as createMutationObserver } from './mutation-observer.js';\nimport { d as defineCustomElement$5 } from './breadcrumb-item.js';\nimport { d as defineCustomElement$4 } from './dropdown.js';\nimport { d as defineCustomElement$3 } from './dropdown-item.js';\nimport { d as defineCustomElement$2 } from './spinner.js';\nconst breadcrumbCss = \":host{display:flex;justify-content:flex-start;height:2.5rem;align-items:center;background-color:transparent;overflow:hidden}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .previous-button{width:3rem;min-width:0px}:host .crumb-dropdown{overflow:visible}:host .remove-anchor::after{display:none}:host .more-text{display:flex}:host .more-text .more-text-ellipsis{width:1rem;display:inline-block;font-weight:700}:host .more-text ix-icon{padding-top:2px}:host nav,:host ol,:host .crumb-items{display:contents}\";\nlet sequenceId = 0;\nconst createId = (prefix = 'breadcrumb-') => {\n  return `${prefix}-${sequenceId++}`;\n};\nconst Breadcrumb = /*@__PURE__*/proxyCustomElement(class Breadcrumb extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.itemClick = createEvent(this, \"itemClick\", 7);\n    this.nextClick = createEvent(this, \"nextClick\", 7);\n    this.previousButtonId = createId();\n    this.previousDropdownId = createId();\n    this.visibleItemCount = 9;\n    this.nextItems = [];\n    this.ghost = true;\n    this.ariaLabelPreviousButton = 'previous';\n    this.previousButtonRef = undefined;\n    this.nextButtonRef = undefined;\n    this.items = [];\n    this.isPreviousDropdownExpanded = false;\n  }\n  onNextItemsChange() {\n    this.onChildMutation();\n  }\n  onItemClick(item) {\n    this.itemClick.emit(item);\n  }\n  componentDidLoad() {\n    this.mutationObserver = createMutationObserver(() => this.onChildMutation());\n    this.mutationObserver.observe(this.hostElement, {\n      subtree: true,\n      childList: true\n    });\n  }\n  componentWillLoad() {\n    this.onChildMutation();\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n  }\n  async onChildMutation() {\n    const updatedItems = this.getItems();\n    updatedItems.forEach((bc, index) => {\n      const shouldShowDropdown = this.nextItems.length !== 0 && updatedItems.length - 1 === index;\n      bc.ghost = this.ghost;\n      bc.showChevron = updatedItems.length - 1 !== index || shouldShowDropdown;\n      bc.isDropdownTrigger = shouldShowDropdown;\n      if (shouldShowDropdown) {\n        this.nextButtonRef = bc;\n      }\n      if (updatedItems.length < this.visibleItemCount) {\n        return;\n      }\n      bc.visible = index >= updatedItems.length - this.visibleItemCount;\n    });\n    this.items = updatedItems;\n  }\n  getItems() {\n    return Array.from(this.hostElement.querySelectorAll('ix-breadcrumb-item'));\n  }\n  render() {\n    var _a, _b, _c, _d;\n    const a11y = a11yHostAttributes(this.hostElement);\n    return h(Host, null, h(\"ix-dropdown\", {\n      id: this.previousDropdownId,\n      \"aria-label\": this.ariaLabelPreviousButton,\n      trigger: ((_a = this.items) === null || _a === void 0 ? void 0 : _a.length) > this.visibleItemCount ? this.previousButtonRef : null,\n      onShowChanged: ({\n        detail\n      }) => {\n        this.isPreviousDropdownExpanded = detail;\n        const previousButton = this.hostElement.shadowRoot.getElementById(this.previousButtonId);\n        // Need to force update previous button to change `aria-expanded`\n        if (previousButton) {\n          forceUpdate(this.hostElement.shadowRoot.getElementById(this.previousButtonId));\n        }\n      }\n    }, this.items.slice(0, this.items.length - this.visibleItemCount).map(item => {\n      var _a;\n      const label = (_a = item.label) !== null && _a !== void 0 ? _a : item.innerText;\n      return h(\"ix-dropdown-item\", {\n        label: label,\n        onClick: () => {\n          this.onItemClick(label);\n        },\n        onItemClick: event => event.stopPropagation()\n      });\n    })), ((_b = this.items) === null || _b === void 0 ? void 0 : _b.length) > this.visibleItemCount ? h(\"ix-breadcrumb-item\", {\n      id: this.previousButtonId,\n      ref: ref => this.previousButtonRef = ref,\n      label: \"...\",\n      tabIndex: 1,\n      onItemClick: event => event.stopPropagation(),\n      \"aria-describedby\": this.previousDropdownId,\n      \"aria-controls\": this.previousDropdownId,\n      \"aria-expanded\": a11yBoolean(this.isPreviousDropdownExpanded),\n      class: 'previous-button'\n    }) : null, h(\"nav\", {\n      class: \"crumb-items\",\n      \"aria-label\": (_c = a11y['aria-label']) !== null && _c !== void 0 ? _c : 'breadcrumbs'\n    }, h(\"ol\", null, h(\"slot\", null))), h(\"ix-dropdown\", {\n      trigger: this.nextButtonRef\n    }, (_d = this.nextItems) === null || _d === void 0 ? void 0 : _d.map(item => h(\"ix-dropdown-item\", {\n      label: item,\n      onClick: e => {\n        this.nextClick.emit({\n          event: e,\n          item\n        });\n      },\n      onItemClick: event => event.stopPropagation()\n    }))));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"nextItems\": [\"onNextItemsChange\"]\n    };\n  }\n  static get style() {\n    return breadcrumbCss;\n  }\n}, [1, \"ix-breadcrumb\", {\n  \"visibleItemCount\": [2, \"visible-item-count\"],\n  \"nextItems\": [16],\n  \"ghost\": [4],\n  \"ariaLabelPreviousButton\": [1, \"aria-label-previous-button\"],\n  \"previousButtonRef\": [32],\n  \"nextButtonRef\": [32],\n  \"items\": [32],\n  \"isPreviousDropdownExpanded\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-breadcrumb\", \"ix-breadcrumb-item\", \"ix-dropdown\", \"ix-dropdown-item\", \"ix-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-breadcrumb\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Breadcrumb);\n        }\n        break;\n      case \"ix-breadcrumb-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ix-dropdown\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ix-dropdown-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxBreadcrumb = Breadcrumb;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxBreadcrumb, defineCustomElement };","map":{"version":3,"names":["breadcrumbCss","sequenceId","createId","prefix","Breadcrumb","proxyCustomElement","HTMLElement","previousButtonId","previousDropdownId","onNextItemsChange","onChildMutation","onItemClick","item","itemClick","emit","componentDidLoad","mutationObserver","createMutationObserver","observe","hostElement","subtree","childList","componentWillLoad","disconnectedCallback","_a","disconnect","updatedItems","getItems","forEach","bc","index","shouldShowDropdown","nextItems","length","ghost","showChevron","isDropdownTrigger","nextButtonRef","visibleItemCount","visible","items","Array","from","querySelectorAll","render","a11y","a11yHostAttributes","h","Host","id","ariaLabelPreviousButton","trigger","previousButtonRef","onShowChanged","detail","isPreviousDropdownExpanded","previousButton","shadowRoot","getElementById","forceUpdate","slice","map","label","innerText","onClick","event","stopPropagation","_b","ref","tabIndex","a11yBoolean","class","_c","_d","e","nextClick"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\breadcrumb\\breadcrumb.scss?tag=ix-breadcrumb&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\breadcrumb\\breadcrumb.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/hover';\n@import 'mixins/text-truncation';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  justify-content: flex-start;\n  height: 2.5rem;\n  align-items: center;\n  background-color: transparent;\n  overflow: hidden;\n\n  .previous-button {\n    width: 3rem;\n    min-width: 0px;\n  }\n\n  .crumb-dropdown {\n    overflow: visible;\n  }\n\n  .remove-anchor::after {\n    display: none;\n  }\n\n  .more-text {\n    display: flex;\n\n    .more-text-ellipsis {\n      width: 1rem;\n      display: inline-block;\n      font-weight: $font-weight-bold;\n    }\n\n    ix-icon {\n      // line-height: unset; --> Note: 'line-height' can't be applied due to shadow DOM encapsulation at ix-icon\n      // using padding-top to achieve same position as before\n      padding-top: 2px;\n    }\n  }\n\n  nav,\n  ol,\n  .crumb-items {\n    display: contents;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\nimport { a11yBoolean, a11yHostAttributes } from '../utils/a11y';\nimport { createMutationObserver } from '../utils/mutation-observer';\n\nlet sequenceId = 0;\nconst createId = (prefix: string = 'breadcrumb-') => {\n  return `${prefix}-${sequenceId++}`;\n};\n\n@Component({\n  tag: 'ix-breadcrumb',\n  styleUrl: 'breadcrumb.scss',\n  shadow: true,\n})\nexport class Breadcrumb {\n  @Element() hostElement!: HTMLIxBreadcrumbElement;\n\n  /**\n   * Excess items will get hidden inside of dropdown\n   */\n  @Prop() visibleItemCount = 9;\n\n  /**\n   * Items will be accessible through a dropdown\n   */\n  @Prop() nextItems: string[] = [];\n  @Watch('nextItems')\n  onNextItemsChange() {\n    this.onChildMutation();\n  }\n\n  /**\n   * Ghost breadcrumbs will not show solid backgrounds on individual crumbs unless there is a mouse event (e.g. hover)\n   */\n  @Prop() ghost = true;\n\n  /**\n   * Accessibility label for the dropdown button (ellipsis icon) used to access the dropdown list\n   * with conditionally hidden previous items\n   *\n   * @since 2.0.0\n   */\n  @Prop() ariaLabelPreviousButton = 'previous';\n\n  /**\n   * Crumb item clicked event\n   */\n  @Event() itemClick: EventEmitter<string>;\n\n  /**\n   * Next item clicked event\n   */\n  @Event() nextClick: EventEmitter<{ event: UIEvent; item: string }>;\n\n  @State() previousButtonRef: HTMLElement;\n  @State() nextButtonRef: HTMLElement;\n  @State() items: HTMLIxBreadcrumbItemElement[] = [];\n  @State() isPreviousDropdownExpanded = false;\n\n  private mutationObserver: MutationObserver;\n\n  private previousButtonId = createId();\n  private previousDropdownId = createId();\n\n  private onItemClick(item: string) {\n    this.itemClick.emit(item);\n  }\n\n  componentDidLoad() {\n    this.mutationObserver = createMutationObserver(() =>\n      this.onChildMutation()\n    );\n\n    this.mutationObserver.observe(this.hostElement, {\n      subtree: true,\n      childList: true,\n    });\n  }\n\n  componentWillLoad() {\n    this.onChildMutation();\n  }\n\n  disconnectedCallback() {\n    this.mutationObserver?.disconnect();\n  }\n\n  private async onChildMutation() {\n    const updatedItems = this.getItems();\n\n    updatedItems.forEach((bc, index) => {\n      const shouldShowDropdown =\n        this.nextItems.length !== 0 && updatedItems.length - 1 === index;\n\n      bc.ghost = this.ghost;\n      bc.showChevron = updatedItems.length - 1 !== index || shouldShowDropdown;\n      bc.isDropdownTrigger = shouldShowDropdown;\n\n      if (shouldShowDropdown) {\n        this.nextButtonRef = bc;\n      }\n\n      if (updatedItems.length < this.visibleItemCount) {\n        return;\n      }\n\n      bc.visible = index >= updatedItems.length - this.visibleItemCount;\n    });\n\n    this.items = updatedItems;\n  }\n\n  private getItems() {\n    return Array.from(this.hostElement.querySelectorAll('ix-breadcrumb-item'));\n  }\n\n  render() {\n    const a11y = a11yHostAttributes(this.hostElement);\n    return (\n      <Host>\n        <ix-dropdown\n          id={this.previousDropdownId}\n          aria-label={this.ariaLabelPreviousButton}\n          trigger={\n            this.items?.length > this.visibleItemCount\n              ? this.previousButtonRef\n              : null\n          }\n          onShowChanged={({ detail }) => {\n            this.isPreviousDropdownExpanded = detail;\n\n            const previousButton = this.hostElement.shadowRoot.getElementById(\n              this.previousButtonId\n            );\n\n            // Need to force update previous button to change `aria-expanded`\n            if (previousButton) {\n              forceUpdate(\n                this.hostElement.shadowRoot.getElementById(\n                  this.previousButtonId\n                )\n              );\n            }\n          }}\n        >\n          {this.items\n            .slice(0, this.items.length - this.visibleItemCount)\n            .map((item) => {\n              const label = item.label ?? item.innerText;\n\n              return (\n                <ix-dropdown-item\n                  label={label}\n                  onClick={() => {\n                    this.onItemClick(label);\n                  }}\n                  onItemClick={(event) => event.stopPropagation()}\n                ></ix-dropdown-item>\n              );\n            })}\n        </ix-dropdown>\n        {this.items?.length > this.visibleItemCount ? (\n          <ix-breadcrumb-item\n            id={this.previousButtonId}\n            ref={(ref) => (this.previousButtonRef = ref)}\n            label=\"...\"\n            tabIndex={1}\n            onItemClick={(event) => event.stopPropagation()}\n            aria-describedby={this.previousDropdownId}\n            aria-controls={this.previousDropdownId}\n            aria-expanded={a11yBoolean(this.isPreviousDropdownExpanded)}\n            class={'previous-button'}\n          ></ix-breadcrumb-item>\n        ) : null}\n        <nav\n          class=\"crumb-items\"\n          aria-label={a11y['aria-label'] ?? 'breadcrumbs'}\n        >\n          <ol>\n            <slot></slot>\n          </ol>\n        </nav>\n        <ix-dropdown trigger={this.nextButtonRef}>\n          {this.nextItems?.map((item) => (\n            <ix-dropdown-item\n              label={item}\n              onClick={(e) => {\n                this.nextClick.emit({\n                  event: e,\n                  item,\n                });\n              }}\n              onItemClick={(event) => event.stopPropagation()}\n            ></ix-dropdown-item>\n          ))}\n        </ix-dropdown>\n      </Host>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}