{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Host } from '@stencil/core/internal/client';\nimport { d as defineCustomElement$1 } from './dropdown-item.js';\n\n/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nclass IxSelectItemLabelChangeEvent extends CustomEvent {\n  constructor(detail) {\n    super('ix-select-item:labelChange', {\n      bubbles: true,\n      detail\n    });\n  }\n}\nconst selectItemCss = \":host{display:block;position:relative}:host>ix-dropdown-item{width:100%}:host .select-item-checked{background-color:var(--theme-select-list-item--background--selected);--ix-dropdown-item-checked-color:var(--theme-color-std-text)}:host(.d-none){display:none}\";\nconst SelectItem = /*@__PURE__*/proxyCustomElement(class SelectItem extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.itemClick = createEvent(this, \"itemClick\", 7);\n    this.label = undefined;\n    this.value = undefined;\n    this.selected = false;\n    this.hover = false;\n  }\n  /**\n   * @internal\n   * @param event\n   */\n  async onItemClick(event) {\n    event === null || event === void 0 ? void 0 : event.preventDefault();\n    event === null || event === void 0 ? void 0 : event.stopPropagation();\n    this.itemClick.emit(this.value);\n  }\n  componentDidRender() {\n    if (!this.value) {\n      throw Error('ix-select-item must have a `value` property');\n    }\n  }\n  labelChange(newValue, oldValue) {\n    this.hostElement.dispatchEvent(new IxSelectItemLabelChangeEvent({\n      newValue: newValue,\n      oldValue: oldValue\n    }));\n  }\n  render() {\n    return h(Host, null, h(\"ix-dropdown-item\", {\n      class: {\n        'select-item-checked': this.selected\n      },\n      checked: this.selected,\n      label: this.label ? this.label : this.value,\n      onItemClick: e => this.onItemClick(e)\n    }));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"label\": [\"labelChange\"]\n    };\n  }\n  static get style() {\n    return selectItemCss;\n  }\n}, [1, \"ix-select-item\", {\n  \"label\": [513],\n  \"value\": [520],\n  \"selected\": [4],\n  \"hover\": [4],\n  \"onItemClick\": [64]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-select-item\", \"ix-dropdown-item\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-select-item\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, SelectItem);\n        }\n        break;\n      case \"ix-dropdown-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { SelectItem as S, defineCustomElement as d };","map":{"version":3,"names":["IxSelectItemLabelChangeEvent","CustomEvent","constructor","detail","bubbles","selectItemCss","SelectItem","proxyCustomElement","HTMLElement","onItemClick","event","preventDefault","stopPropagation","itemClick","emit","value","componentDidRender","Error","labelChange","newValue","oldValue","hostElement","dispatchEvent","render","h","Host","class","selected","checked","label","e"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\select-item\\events.ts","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\select-item\\select-item.scss?tag=ix-select-item&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\select-item\\select-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport class IxSelectItemLabelChangeEvent extends CustomEvent<{\n  oldValue: string;\n  newValue: string;\n}> {\n  constructor(detail: { oldValue: string; newValue: string }) {\n    super('ix-select-item:labelChange', {\n      bubbles: true,\n      detail,\n    });\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n:host {\n  display: block;\n  position: relative;\n\n  > ix-dropdown-item {\n    width: 100%;\n  }\n\n  .select-item-checked {\n    background-color: var(--theme-select-list-item--background--selected);\n    --ix-dropdown-item-checked-color: var(--theme-color-std-text);\n  }\n}\n\n:host(.d-none) {\n  display: none;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  Watch,\n} from '@stencil/core';\nimport { IxSelectItemLabelChangeEvent } from './events';\n\n@Component({\n  tag: 'ix-select-item',\n  styleUrl: 'select-item.scss',\n  shadow: true,\n})\nexport class SelectItem {\n  @Element() hostElement: HTMLIxSelectItemElement;\n\n  /**\n   * Displayed name of the item\n   */\n  @Prop({ reflect: true }) label: string;\n\n  /**\n   * Item value\n   */\n  @Prop({ reflect: true }) value!: any;\n\n  /**\n   * Whether the item is selected.\n   */\n  @Prop() selected = false;\n\n  /**\n   * @internal\n   */\n  @Prop() hover = false;\n\n  /**\n   * Item clicked\n   */\n  @Event() itemClick: EventEmitter<string>;\n\n  /**\n   * @internal\n   * @param event\n   */\n  @Method()\n  async onItemClick(event?: CustomEvent<HTMLIxDropdownItemElement>) {\n    event?.preventDefault();\n    event?.stopPropagation();\n\n    this.itemClick.emit(this.value);\n  }\n\n  componentDidRender() {\n    if (!this.value) {\n      throw Error('ix-select-item must have a `value` property');\n    }\n  }\n\n  @Watch('label')\n  labelChange(newValue: string, oldValue: string) {\n    this.hostElement.dispatchEvent(\n      new IxSelectItemLabelChangeEvent({\n        newValue: newValue,\n        oldValue: oldValue,\n      })\n    );\n  }\n\n  render() {\n    return (\n      <Host>\n        <ix-dropdown-item\n          class={{\n            'select-item-checked': this.selected,\n          }}\n          checked={this.selected}\n          label={this.label ? this.label : this.value}\n          onItemClick={(e) => this.onItemClick(e)}\n        ></ix-dropdown-item>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;AAAA;;;;;;;;MAQaA,4BAA6B,SAAQC,WAGhD;EACAC,YAAYC,MAA8C;IACxD,KAAK,CAAC,4BAA4B,EAAE;MAClCC,OAAO,EAAE,IAAI;MACbD;KACD,CAAC;;;AChBN,MAAME,aAAa,GAAG,mQAAmQ;MC2B5QC,UAAU,gBAAAC,kBAAA,OAAAD,UAAA,SAAAE,WAAA;;;;;;;;oBAgBF,KAAK;iBAKR,KAAK;;;;;;EAYrB,MAAMC,WAAWA,CAACC,KAA8C;IAC9DA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEC,cAAc,EAAE;IACvBD,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEE,eAAe,EAAE;IAExB,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC,IAAI,CAACC,KAAK,CAAC;;EAGjCC,kBAAkBA,CAAA;IAChB,IAAI,CAAC,IAAI,CAACD,KAAK,EAAE;MACf,MAAME,KAAK,CAAC,6CAA6C,CAAC;;;EAK9DC,WAAWA,CAACC,QAAgB,EAAEC,QAAgB;IAC5C,IAAI,CAACC,WAAW,CAACC,aAAa,CAC5B,IAAItB,4BAA4B,CAAC;MAC/BmB,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX,CAAC,CACH;;EAGHG,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI,QACHD,CAAA;MACEE,KAAK,EAAE;QACL,qBAAqB,EAAE,IAAI,CAACC;OAC7B;MACDC,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBE,KAAK,EAAE,IAAI,CAACA,KAAK,GAAG,IAAI,CAACA,KAAK,GAAG,IAAI,CAACd,KAAK;MAC3CN,WAAW,EAAGqB,CAAC,IAAK,IAAI,CAACrB,WAAW,CAACqB,CAAC;IAAC,EACrB,CACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}