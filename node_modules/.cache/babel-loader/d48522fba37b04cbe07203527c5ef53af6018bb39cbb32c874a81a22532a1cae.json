{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h } from '@stencil/core/internal/client';\nimport { d as defineCustomElement$1 } from './dropdown-item.js';\nconst menuAvatarItemCss = \":host{display:block}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}\";\nconst MenuAvatarItem = /*@__PURE__*/proxyCustomElement(class MenuAvatarItem extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.itemClick = createEvent(this, \"itemClick\", 7);\n    this.icon = undefined;\n    this.label = undefined;\n  }\n  render() {\n    return h(\"ix-dropdown-item\", {\n      icon: this.icon,\n      label: this.label,\n      onClick: e => this.itemClick.emit(e)\n    });\n  }\n  get hostElement() {\n    return this;\n  }\n  static get style() {\n    return menuAvatarItemCss;\n  }\n}, [1, \"ix-menu-avatar-item\", {\n  \"icon\": [1],\n  \"label\": [1]\n}]);\nfunction defineCustomElement() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-menu-avatar-item\", \"ix-dropdown-item\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-menu-avatar-item\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, MenuAvatarItem);\n        }\n        break;\n      case \"ix-dropdown-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$1();\n        }\n        break;\n    }\n  });\n}\nexport { MenuAvatarItem as M, defineCustomElement as d };","map":{"version":3,"names":["menuAvatarItemCss","MenuAvatarItem","proxyCustomElement","HTMLElement","render","h","icon","label","onClick","e","itemClick","emit"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\menu-avatar-item\\menu-avatar-item.scss?tag=ix-menu-avatar-item&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\menu-avatar-item\\menu-avatar-item.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n  display: block;\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Prop,\n} from '@stencil/core';\n\n@Component({\n  tag: 'ix-menu-avatar-item',\n  styleUrl: 'menu-avatar-item.scss',\n  shadow: true,\n})\nexport class MenuAvatarItem {\n  /**\n   * Avatar dropdown icon\n   */\n  @Prop() icon: string;\n\n  /**\n   * Avatar dropdown label\n   */\n  @Prop() label: string;\n\n  /**\n   * Avatar dropdown item clicked\n   */\n  @Event() itemClick: EventEmitter<MouseEvent>;\n\n  @Element() hostElement: HTMLIxMenuAvatarItemElement;\n\n  render() {\n    return (\n      <ix-dropdown-item\n        icon={this.icon}\n        label={this.label}\n        onClick={(e) => this.itemClick.emit(e)}\n      ></ix-dropdown-item>\n    );\n  }\n}\n"],"mappings":";;AAAA,MAAMA,iBAAiB,GAAG,knBAAknB;MCuB/nBC,cAAc,gBAAAC,kBAAA,OAAAD,cAAA,SAAAE,WAAA;;;;;;;;;EAkBzBC,MAAMA,CAAA;IACJ,OACEC,CAAA;MACEC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBC,OAAO,EAAGC,CAAC,IAAK,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,CAAC;IAAC,EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}