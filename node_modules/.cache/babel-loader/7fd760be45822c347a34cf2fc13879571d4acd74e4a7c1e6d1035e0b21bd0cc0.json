{"ast":null,"code":"import { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { u as useContextProvider, A as ApplicationLayoutContext } from './context.js';\nimport { a as applicationLayoutService, m as menuController } from './menu-service.js';\nimport { d as defineCustomElement$5 } from './application-header.js';\nimport { d as defineCustomElement$4 } from './burger-menu.js';\nimport { d as defineCustomElement$3 } from './icon-button.js';\nimport { d as defineCustomElement$2 } from './spinner.js';\nconst basicNavigationCss = \":host{display:flex;position:relative;width:100%;height:100%;flex-direction:column}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host ix-application-header{z-index:calc(var(--theme-z-index-sticky) + 1)}:host .logo-wrapper{display:contents}:host .content{display:flex;height:100%;width:100%;position:relative;margin-left:3.25rem;overflow:auto}:host .navigation-content{display:flex;position:relative;flex-direction:row;height:calc(100% - 2.75rem);width:100%}:host(.hide-header) .navigation-content,:host(.hide-header) .content{height:100%}:host(.breakpoint-lg) .content{margin-left:0rem}:host(.breakpoint-sm) .content{margin-left:0px;width:100%}\";\nconst BasicNavigation = /*@__PURE__*/proxyCustomElement(class BasicNavigation extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.applicationName = undefined;\n    this.hideHeader = false;\n    this.forceBreakpoint = undefined;\n    this.breakpoints = ['sm', 'md', 'lg'];\n    this.breakpoint = 'lg';\n  }\n  onHideHeaderChange() {\n    var _a;\n    (_a = this.contextProvider) === null || _a === void 0 ? void 0 : _a.emit({\n      hideHeader: this.hideHeader,\n      host: 'basic-navigation'\n    });\n    this.breakpoint = applicationLayoutService.breakpoint;\n  }\n  forceLayoutChange(newMode) {\n    if (!newMode) {\n      applicationLayoutService.enableBreakpointDetection();\n      return;\n    }\n    applicationLayoutService.disableBreakpointDetection();\n    applicationLayoutService.setBreakpoint(newMode);\n  }\n  onBreakpointsChange(breakpoints) {\n    applicationLayoutService.setBreakpoints(breakpoints);\n  }\n  get menu() {\n    return this.hostElement.querySelector('ix-menu');\n  }\n  onContentClick() {\n    var _a;\n    if (menuController.isPinned) {\n      return;\n    }\n    (_a = this.menu) === null || _a === void 0 ? void 0 : _a.toggleMenu(false);\n  }\n  componentWillLoad() {\n    applicationLayoutService.setBreakpoints(this.breakpoints);\n    this.contextProvider = useContextProvider(this.hostElement, ApplicationLayoutContext, {\n      hideHeader: this.hideHeader,\n      host: 'basic-navigation'\n    });\n    this.modeDisposable = applicationLayoutService.onChange.on(mode => {\n      this.breakpoint = mode;\n    });\n    this.breakpoint = applicationLayoutService.breakpoint;\n    if (this.forceBreakpoint) {\n      this.forceLayoutChange(this.forceBreakpoint);\n    }\n  }\n  componentDidRender() {\n    if (this.menu) {\n      this.menu.applicationName = this.applicationName;\n    }\n  }\n  disconnectedCallback() {\n    var _a;\n    (_a = this.modeDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n  }\n  render() {\n    return h(Host, {\n      \"data-role\": \"\",\n      class: {\n        'hide-header': this.hideHeader,\n        [`breakpoint-${this.breakpoint}`]: true\n      }\n    }, !this.hideHeader ? h(\"ix-application-header\", {\n      name: this.applicationName\n    }, h(\"slot\", {\n      name: \"logo\",\n      slot: \"logo\"\n    })) : null, h(\"div\", {\n      class: \"navigation-content\"\n    }, h(\"slot\", {\n      name: \"menu\"\n    }), h(\"div\", {\n      class: \"content\",\n      onClick: () => this.onContentClick()\n    }, h(\"slot\", null))));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"hideHeader\": [\"onHideHeaderChange\"],\n      \"breakpoints\": [\"onBreakpointsChange\"]\n    };\n  }\n  static get style() {\n    return basicNavigationCss;\n  }\n}, [1, \"ix-basic-navigation\", {\n  \"applicationName\": [1, \"application-name\"],\n  \"hideHeader\": [4, \"hide-header\"],\n  \"forceBreakpoint\": [1, \"force-breakpoint\"],\n  \"breakpoints\": [16],\n  \"breakpoint\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-basic-navigation\", \"ix-application-header\", \"ix-burger-menu\", \"ix-icon-button\", \"ix-spinner\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-basic-navigation\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, BasicNavigation);\n        }\n        break;\n      case \"ix-application-header\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ix-burger-menu\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ix-icon-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ix-spinner\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IxBasicNavigation = BasicNavigation;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxBasicNavigation, defineCustomElement };","map":{"version":3,"names":["basicNavigationCss","BasicNavigation","proxyCustomElement","HTMLElement","onHideHeaderChange","_a","contextProvider","emit","hideHeader","host","breakpoint","applicationLayoutService","forceLayoutChange","newMode","enableBreakpointDetection","disableBreakpointDetection","setBreakpoint","onBreakpointsChange","breakpoints","setBreakpoints","menu","hostElement","querySelector","onContentClick","menuController","isPinned","toggleMenu","componentWillLoad","useContextProvider","ApplicationLayoutContext","modeDisposable","onChange","on","mode","forceBreakpoint","componentDidRender","applicationName","disconnectedCallback","dispose","render","h","Host","class","name","slot","onClick"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\basic-navigation\\basic-navigation.scss?tag=ix-basic-navigation&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\basic-navigation\\basic-navigation.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  display: flex;\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  flex-direction: column;\n\n  ix-application-header {\n    z-index: calc(var(--theme-z-index-sticky) + 1);\n  }\n\n  .logo-wrapper {\n    display: contents;\n  }\n\n  .content {\n    display: flex;\n    height: 100%;\n    width: 100%;\n    position: relative;\n    margin-left: 3.25rem;\n    overflow: auto;\n  }\n\n  .navigation-content {\n    display: flex;\n    position: relative;\n\n    flex-direction: row;\n\n    height: calc(100% - 2.75rem);\n    width: 100%;\n  }\n}\n\n:host(.hide-header) {\n  .navigation-content,\n  .content {\n    height: 100%;\n  }\n}\n\n:host(.breakpoint-lg) {\n  .content {\n    margin-left: 0rem;\n  }\n}\n\n:host(.breakpoint-sm) {\n  .content {\n    margin-left: 0px;\n    width: 100%;\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { Component, Element, h, Host, Prop, State, Watch } from '@stencil/core';\nimport { ApplicationLayoutContext } from '../utils/application-layout/context';\nimport { applicationLayoutService } from '../utils/application-layout/service';\nimport { Breakpoint } from '../utils/breakpoints';\nimport { ContextProvider, useContextProvider } from '../utils/context';\nimport { menuController } from '../utils/menu-service/menu-service';\nimport { Disposable } from '../utils/typed-event';\n\n@Component({\n  tag: 'ix-basic-navigation',\n  styleUrl: 'basic-navigation.scss',\n  shadow: true,\n})\nexport class BasicNavigation {\n  @Element() hostElement: HTMLIxBasicNavigationElement;\n\n  /**\n   * Application name\n   */\n  @Prop() applicationName: string;\n\n  /**\n   * Hide application header. Will disable responsive feature of basic navigation.\n   */\n  @Prop() hideHeader = false;\n  @Watch('hideHeader')\n  onHideHeaderChange() {\n    this.contextProvider?.emit({\n      hideHeader: this.hideHeader,\n      host: 'basic-navigation',\n    });\n\n    this.breakpoint = applicationLayoutService.breakpoint;\n  }\n\n  /**\n   * Change the responsive layout of the menu structure\n   */\n  @Prop() forceBreakpoint: Breakpoint | undefined;\n  forceLayoutChange(newMode: Breakpoint | undefined) {\n    if (!newMode) {\n      applicationLayoutService.enableBreakpointDetection();\n      return;\n    }\n\n    applicationLayoutService.disableBreakpointDetection();\n    applicationLayoutService.setBreakpoint(newMode);\n  }\n\n  /**\n   * Supported layouts\n   */\n  @Prop() breakpoints: Breakpoint[] = ['sm', 'md', 'lg'];\n  @Watch('breakpoints')\n  onBreakpointsChange(breakpoints: Breakpoint[]) {\n    applicationLayoutService.setBreakpoints(breakpoints);\n  }\n\n  @State() breakpoint: Breakpoint = 'lg';\n\n  get menu(): HTMLIxMenuElement | null {\n    return this.hostElement.querySelector('ix-menu');\n  }\n\n  private modeDisposable: Disposable;\n  private contextProvider: ContextProvider<typeof ApplicationLayoutContext>;\n\n  private onContentClick() {\n    if (menuController.isPinned) {\n      return;\n    }\n    this.menu?.toggleMenu(false);\n  }\n\n  componentWillLoad() {\n    applicationLayoutService.setBreakpoints(this.breakpoints);\n\n    this.contextProvider = useContextProvider(\n      this.hostElement,\n      ApplicationLayoutContext,\n      {\n        hideHeader: this.hideHeader,\n        host: 'basic-navigation',\n      }\n    );\n\n    this.modeDisposable = applicationLayoutService.onChange.on((mode) => {\n      this.breakpoint = mode;\n    });\n    this.breakpoint = applicationLayoutService.breakpoint;\n\n    if (this.forceBreakpoint) {\n      this.forceLayoutChange(this.forceBreakpoint);\n    }\n  }\n\n  componentDidRender() {\n    if (this.menu) {\n      this.menu.applicationName = this.applicationName;\n    }\n  }\n\n  disconnectedCallback() {\n    this.modeDisposable?.dispose();\n  }\n\n  render() {\n    return (\n      <Host\n        data-role=\"\"\n        class={{\n          'hide-header': this.hideHeader,\n          [`breakpoint-${this.breakpoint}`]: true,\n        }}\n      >\n        {!this.hideHeader ? (\n          <ix-application-header name={this.applicationName}>\n            <slot name=\"logo\" slot=\"logo\"></slot>\n          </ix-application-header>\n        ) : null}\n        <div class=\"navigation-content\">\n          <slot name=\"menu\"></slot>\n          <div class=\"content\" onClick={() => this.onContentClick()}>\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":";;;;;;;AAAA,MAAMA,kBAAkB,GAAG,orCAAorC;MCsBlsCC,eAAe,gBAAAC,kBAAA,OAAAD,eAAA,SAAAE,WAAA;;;;;;sBAWL,KAAK;;uBA4BU,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;sBAMpB,IAAI;;EAhCtCC,kBAAkBA,CAAA;;IAChB,CAAAC,EAAA,OAAI,CAACC,eAAe,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,CAAC;MACzBC,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,IAAI,EAAE;KACP,CAAC;IAEF,IAAI,CAACC,UAAU,GAAGC,wBAAwB,CAACD,UAAU;;EAOvDE,iBAAiBA,CAACC,OAA+B;IAC/C,IAAI,CAACA,OAAO,EAAE;MACZF,wBAAwB,CAACG,yBAAyB,EAAE;MACpD;;IAGFH,wBAAwB,CAACI,0BAA0B,EAAE;IACrDJ,wBAAwB,CAACK,aAAa,CAACH,OAAO,CAAC;;EAQjDI,mBAAmBA,CAACC,WAAyB;IAC3CP,wBAAwB,CAACQ,cAAc,CAACD,WAAW,CAAC;;EAKtD,IAAIE,IAAIA,CAAA;IACN,OAAO,IAAI,CAACC,WAAW,CAACC,aAAa,CAAC,SAAS,CAAC;;EAM1CC,cAAcA,CAAA;;IACpB,IAAIC,cAAc,CAACC,QAAQ,EAAE;MAC3B;;IAEF,CAAApB,EAAA,OAAI,CAACe,IAAI,cAAAf,EAAA,uBAAAA,EAAA,CAAEqB,UAAU,CAAC,KAAK,CAAC;;EAG9BC,iBAAiBA,CAAA;IACfhB,wBAAwB,CAACQ,cAAc,CAAC,IAAI,CAACD,WAAW,CAAC;IAEzD,IAAI,CAACZ,eAAe,GAAGsB,kBAAkB,CACvC,IAAI,CAACP,WAAW,EAChBQ,wBAAwB,EACxB;MACErB,UAAU,EAAE,IAAI,CAACA,UAAU;MAC3BC,IAAI,EAAE;KACP,CACF;IAED,IAAI,CAACqB,cAAc,GAAGnB,wBAAwB,CAACoB,QAAQ,CAACC,EAAE,CAAEC,IAAI;MAC9D,IAAI,CAACvB,UAAU,GAAGuB,IAAI;KACvB,CAAC;IACF,IAAI,CAACvB,UAAU,GAAGC,wBAAwB,CAACD,UAAU;IAErD,IAAI,IAAI,CAACwB,eAAe,EAAE;MACxB,IAAI,CAACtB,iBAAiB,CAAC,IAAI,CAACsB,eAAe,CAAC;;;EAIhDC,kBAAkBA,CAAA;IAChB,IAAI,IAAI,CAACf,IAAI,EAAE;MACb,IAAI,CAACA,IAAI,CAACgB,eAAe,GAAG,IAAI,CAACA,eAAe;;;EAIpDC,oBAAoBA,CAAA;;IAClB,CAAAhC,EAAA,OAAI,CAACyB,cAAc,cAAAzB,EAAA,uBAAAA,EAAA,CAAEiC,OAAO,EAAE;;EAGhCC,MAAMA,CAAA;IACJ,OACEC,CAAA,CAACC,IAAI;MAAA,aACO,EAAE;MACZC,KAAK,EAAE;QACL,aAAa,EAAE,IAAI,CAAClC,UAAU;QAC9B,CAAC,cAAc,IAAI,CAACE,UAAU,EAAE,GAAG;;IACpC,GAEA,CAAC,IAAI,CAACF,UAAU,GACfgC,CAAA;MAAuBG,IAAI,EAAE,IAAI,CAACP;IAAe,GAC/CI,CAAA;MAAMG,IAAI,EAAC,MAAM;MAACC,IAAI,EAAC;IAAM,EAAQ,CACf,GACtB,IAAI,EACRJ,CAAA;MAAKE,KAAK,EAAC;IAAoB,GAC7BF,CAAA;MAAMG,IAAI,EAAC;IAAM,EAAQ,EACzBH,CAAA;MAAKE,KAAK,EAAC,SAAS;MAACG,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACtB,cAAc;IAAE,GACvDiB,CAAA,cAAa,CACT,CACF,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}