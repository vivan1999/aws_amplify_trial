{"ast":null,"code":"import { proxyCustomElement, HTMLElement, createEvent, h, Fragment, Host } from '@stencil/core/internal/client';\nconst workflowStepCss = \":host{}:host *,:host *::after,:host *::before{box-sizing:border-box}:host ::-webkit-scrollbar-button{display:none}:host ::-webkit-scrollbar{width:0.5rem;height:0.5rem}:host ::-webkit-scrollbar-track{border-radius:5px;background:var(--theme-scrollbar-track--background)}:host ::-webkit-scrollbar-track:hover{background:var(--theme-scrollbar-track--background--hover)}:host ::-webkit-scrollbar-thumb{border-radius:5px;background:var(--theme-scrollbar-thumb--background)}:host ::-webkit-scrollbar-thumb:hover{background:var(--theme-scrollbar-thumb--background--hover)}:host ::-webkit-scrollbar-corner{display:none}:host .step{display:flex;flex-direction:column;align-items:center;background-color:var(--theme-workflow-step--background);border-radius:var(--theme-workflow--border-radius);width:auto;padding:1.125rem 0 0.5rem 0;height:4rem;width:12.75rem}:host .step .wrapper{display:flex;width:100%;align-items:center;justify-content:center;position:relative}:host .step .wrapper .line{width:100%;height:0.125rem;background-color:var(--theme-workflow-step-icon-default--color)}:host .step .wrapper .line.first,:host .step .wrapper .line.last{width:50%;margin:0 0 0 auto}:host .step .wrapper .line.last{margin:0 auto 0 0}:host .step .wrapper .line.single{width:0}:host .step .wrapper .line.selected{background-color:var(--theme-workflow-step-icon-default--color--selected)}:host .step .wrapper .line.done{background-color:var(--theme-workflow-step-icon-done--color)}:host .step .wrapper .line.done.selected{background-color:var(--theme-workflow-step-icon-done--color--selected)}:host .step .wrapper .line.warning{background-color:var(--theme-color-warning)}:host .step .wrapper .line.success{background-color:var(--theme-color-success)}:host .step .wrapper .line.error{background-color:var(--theme-color-alarm)}:host .step .wrapper .iconWrapper{display:flex;align-items:center;justify-content:center;position:absolute}:host .step .wrapper .iconWrapper .absolute{position:absolute}:host .step .text{margin-top:1rem;width:auto;padding:0 0.5rem}:host .step.vertical{flex-direction:row;padding:0}:host .step.vertical .wrapper{width:auto;padding-left:1.125rem;height:4rem}:host .step.vertical .wrapper .line{width:0.125rem;height:100%}:host .step.vertical .wrapper .line.first,:host .step.vertical .wrapper .line.last{height:50%;margin:auto 0 0 0}:host .step.vertical .wrapper .line.last{margin:0 0 auto 0}:host .step.vertical .wrapper .line.single{width:0}:host .step.vertical .text{margin-top:0;margin-left:1rem;padding:0}:host .step.clickable:hover{background-color:var(--theme-workflow-step--background--hover)}:host .step.clickable:active{background-color:var(--theme-workflow-step--background--active)}:host .step:focus-visible{outline:1px solid var(--focus--border-color);border-radius:0}:host .step.selected{background-color:var(--theme-workflow-step--background--selected)}:host .step.disabled{background-color:var(--theme-workflow-step--background--disabled)}:host .step.disabled .line{background-color:var(--theme-workflow-step-icon-default--color--disabled) !important}:host .step.disabled .text{color:var(--theme-workflow-step--color--disabled)}\";\nconst WorkflowStep = /*@__PURE__*/proxyCustomElement(class WorkflowStep extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.selectedChanged = createEvent(this, \"selectedChanged\", 7);\n    this.vertical = false;\n    this.disabled = false;\n    this.status = 'open';\n    this.clickable = false;\n    this.selected = false;\n    this.position = 'undefined';\n    this.iconName = 'circle';\n    this.iconColor = 'workflow-step-icon-default--color';\n  }\n  selectedHandler() {\n    const selectedStyle = this.selected ? '--selected' : '';\n    if (this.status === 'open') {\n      this.iconName = this.selected ? 'circle-dot' : 'circle';\n      this.iconColor = `workflow-step-icon-default--color${selectedStyle}`;\n    }\n    if (this.status === 'done' && !this.disabled) {\n      this.iconColor = `workflow-step-icon-done--color${selectedStyle}`;\n    }\n  }\n  watchPropHandler() {\n    switch (this.status) {\n      case 'open':\n        this.iconName = 'circle';\n        this.iconColor = 'workflow-step-icon-default--color';\n        break;\n      case 'success':\n        this.iconName = 'success';\n        this.iconColor = 'color-success';\n        break;\n      case 'done':\n        this.iconName = 'success';\n        this.iconColor = 'workflow-step-icon-done--color';\n        break;\n      case 'warning':\n        this.iconName = 'warning';\n        this.iconColor = 'color-warning';\n        break;\n      case 'error':\n        this.iconName = 'error';\n        this.iconColor = 'color-alarm';\n        break;\n      default:\n        this.iconName = 'circle';\n        break;\n    }\n    if (this.disabled) {\n      this.iconColor = 'workflow-step-icon-success--color--disabled';\n    }\n  }\n  componentDidLoad() {\n    this.watchPropHandler();\n    this.selectedHandler();\n    this.customIconSlot = !!this.hostElement.querySelector('[slot=\"custom-icon\"]');\n  }\n  onStepClick() {\n    if (!this.disabled && this.clickable) {\n      this.selectedChanged.emit(this.hostElement);\n    }\n  }\n  render() {\n    const icons = !this.customIconSlot ? h(Fragment, null, h(\"ix-icon\", {\n      color: \"color-1\",\n      name: this.iconName === 'warning' ? 'triangle-filled' : 'circle-filled',\n      class: \"absolute\",\n      size: \"24\"\n    }), h(\"ix-icon\", {\n      color: this.iconColor,\n      name: this.iconName,\n      class: \"absolute\",\n      size: \"24\"\n    })) : null;\n    return h(Host, {\n      onClick: () => this.onStepClick()\n    }, h(\"div\", {\n      tabIndex: 0,\n      class: {\n        step: true,\n        selected: this.selected,\n        vertical: this.vertical,\n        disabled: this.disabled,\n        clickable: this.clickable && !this.disabled\n      }\n    }, h(\"div\", {\n      class: \"wrapper\"\n    }, h(\"div\", {\n      class: {\n        line: true,\n        selected: this.selected,\n        [this.status]: true,\n        [this.position]: true\n      }\n    }), h(\"div\", {\n      class: \"iconWrapper\"\n    }, icons, h(\"slot\", {\n      name: \"custom-icon\"\n    }))), h(\"div\", {\n      class: \"text\"\n    }, h(\"slot\", null))));\n  }\n  get hostElement() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"selected\": [\"selectedHandler\"],\n      \"status\": [\"watchPropHandler\"]\n    };\n  }\n  static get style() {\n    return workflowStepCss;\n  }\n}, [1, \"ix-workflow-step\", {\n  \"vertical\": [4],\n  \"disabled\": [4],\n  \"status\": [1],\n  \"clickable\": [4],\n  \"selected\": [4],\n  \"position\": [1],\n  \"iconName\": [32],\n  \"iconColor\": [32]\n}]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ix-workflow-step\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ix-workflow-step\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, WorkflowStep);\n        }\n        break;\n    }\n  });\n}\nconst IxWorkflowStep = WorkflowStep;\nconst defineCustomElement = defineCustomElement$1;\nexport { IxWorkflowStep, defineCustomElement };","map":{"version":3,"names":["workflowStepCss","WorkflowStep","proxyCustomElement","HTMLElement","selectedHandler","selectedStyle","selected","status","iconName","iconColor","disabled","watchPropHandler","componentDidLoad","customIconSlot","hostElement","querySelector","onStepClick","clickable","selectedChanged","emit","render","icons","h","Fragment","color","name","class","size","Host","onClick","tabIndex","step","vertical","line","position"],"sources":["D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\workflow-step\\workflow-step.scss?tag=ix-workflow-step&encapsulation=shadow","D:\\pci_project_new\\node_modules\\@siemens\\ix\\components\\src\\components\\workflow-step\\workflow-step.tsx"],"sourcesContent":["/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n@import 'common-variables';\n@import 'mixins/shadow-dom/component';\n\n:host {\n  @include ix-component;\n\n  .step {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: var(--theme-workflow-step--background);\n    border-radius: var(--theme-workflow--border-radius);\n    width: auto;\n    padding: 1.125rem 0 $small-space 0;\n    height: 4rem;\n    width: 12.75rem;\n\n    .wrapper {\n      display: flex;\n      width: 100%;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n\n      .line {\n        width: 100%;\n        height: 0.125rem;\n        background-color: var(--theme-workflow-step-icon-default--color);\n\n        &.first,\n        &.last {\n          width: 50%;\n          margin: 0 0 0 auto;\n        }\n\n        &.last {\n          margin: 0 auto 0 0;\n        }\n\n        &.single {\n          width: 0;\n        }\n\n        &.selected {\n          background-color: var(\n            --theme-workflow-step-icon-default--color--selected\n          );\n        }\n\n        &.done {\n          background-color: var(--theme-workflow-step-icon-done--color);\n\n          &.selected {\n            background-color: var(\n              --theme-workflow-step-icon-done--color--selected\n            );\n          }\n        }\n\n        &.warning {\n          background-color: var(--theme-color-warning);\n        }\n\n        &.success {\n          background-color: var(--theme-color-success);\n        }\n\n        &.error {\n          background-color: var(--theme-color-alarm);\n        }\n      }\n\n      .iconWrapper {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        position: absolute;\n\n        .absolute {\n          position: absolute;\n        }\n      }\n    }\n\n    .text {\n      margin-top: $default-space;\n      width: auto;\n      padding: 0 $small-space;\n    }\n\n    &.vertical {\n      flex-direction: row;\n      padding: 0;\n\n      .wrapper {\n        width: auto;\n        padding-left: 1.125rem;\n        height: 4rem;\n\n        .line {\n          width: 0.125rem;\n          height: 100%;\n\n          &.first,\n          &.last {\n            height: 50%;\n            margin: auto 0 0 0;\n          }\n\n          &.last {\n            margin: 0 0 auto 0;\n          }\n\n          &.single {\n            width: 0;\n          }\n        }\n      }\n\n      .text {\n        margin-top: 0;\n        margin-left: $default-space;\n        padding: 0;\n      }\n    }\n\n    &.clickable {\n      &:hover {\n        background-color: var(--theme-workflow-step--background--hover);\n      }\n\n      &:active {\n        background-color: var(--theme-workflow-step--background--active);\n      }\n    }\n\n    &:focus-visible {\n      outline: 1px solid var(--focus--border-color);\n      border-radius: 0;\n    }\n\n    &.selected {\n      background-color: var(--theme-workflow-step--background--selected);\n    }\n\n    &.disabled {\n      background-color: var(--theme-workflow-step--background--disabled);\n\n      .line {\n        background-color: var(\n          --theme-workflow-step-icon-default--color--disabled\n        ) !important;\n      }\n\n      .text {\n        color: var(--theme-workflow-step--color--disabled);\n      }\n    }\n  }\n}\n","/*\n * SPDX-FileCopyrightText: 2023 Siemens AG\n *\n * SPDX-License-Identifier: MIT\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Host,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core';\n\n@Component({\n  tag: 'ix-workflow-step',\n  styleUrl: 'workflow-step.scss',\n  shadow: true,\n})\nexport class WorkflowStep {\n  @Element() hostElement: HTMLIxWorkflowStepElement;\n\n  /**\n   * Select orientation\n   */\n  @Prop() vertical: boolean = false;\n\n  /**\n   * Set disabled\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * Set status\n   */\n  @Prop() status: 'open' | 'success' | 'done' | 'warning' | 'error' = 'open';\n\n  /**\n   * Activate navigation click\n   */\n  @Prop() clickable: boolean = false;\n\n  /**\n   * Set selected\n   */\n  @Prop() selected: boolean = false;\n\n  /**\n   * Activate navigation click\n   *\n   * @internal\n   */\n  @Prop() position: 'first' | 'last' | 'single' | 'undefined' = 'undefined';\n\n  @State() iconName: 'circle' | 'circle-dot' | 'success' | 'warning' | 'error' =\n    'circle';\n\n  @State() iconColor: string = 'workflow-step-icon-default--color';\n\n  /**\n   * @internal\n   */\n  @Event() selectedChanged: EventEmitter<HTMLIxWorkflowStepElement>;\n\n  private customIconSlot: boolean;\n\n  @Watch('selected')\n  selectedHandler() {\n    const selectedStyle = this.selected ? '--selected' : '';\n\n    if (this.status === 'open') {\n      this.iconName = this.selected ? 'circle-dot' : 'circle';\n      this.iconColor = `workflow-step-icon-default--color${selectedStyle}`;\n    }\n\n    if (this.status === 'done' && !this.disabled) {\n      this.iconColor = `workflow-step-icon-done--color${selectedStyle}`;\n    }\n  }\n\n  @Watch('status')\n  watchPropHandler() {\n    switch (this.status) {\n      case 'open':\n        this.iconName = 'circle';\n        this.iconColor = 'workflow-step-icon-default--color';\n        break;\n      case 'success':\n        this.iconName = 'success';\n        this.iconColor = 'color-success';\n        break;\n      case 'done':\n        this.iconName = 'success';\n        this.iconColor = 'workflow-step-icon-done--color';\n        break;\n      case 'warning':\n        this.iconName = 'warning';\n        this.iconColor = 'color-warning';\n        break;\n      case 'error':\n        this.iconName = 'error';\n        this.iconColor = 'color-alarm';\n        break;\n\n      default:\n        this.iconName = 'circle';\n        break;\n    }\n\n    if (this.disabled) {\n      this.iconColor = 'workflow-step-icon-success--color--disabled';\n    }\n  }\n\n  componentDidLoad() {\n    this.watchPropHandler();\n    this.selectedHandler();\n\n    this.customIconSlot = !!this.hostElement.querySelector(\n      '[slot=\"custom-icon\"]'\n    );\n  }\n\n  onStepClick() {\n    if (!this.disabled && this.clickable) {\n      this.selectedChanged.emit(this.hostElement);\n    }\n  }\n\n  render() {\n    const icons = !this.customIconSlot ? (\n      <Fragment>\n        <ix-icon\n          color=\"color-1\"\n          name={\n            this.iconName === 'warning' ? 'triangle-filled' : 'circle-filled'\n          }\n          class=\"absolute\"\n          size=\"24\"\n        ></ix-icon>\n        <ix-icon\n          color={this.iconColor}\n          name={this.iconName}\n          class=\"absolute\"\n          size=\"24\"\n        ></ix-icon>\n      </Fragment>\n    ) : null;\n\n    return (\n      <Host onClick={() => this.onStepClick()}>\n        <div\n          tabIndex={0}\n          class={{\n            step: true,\n            selected: this.selected,\n            vertical: this.vertical,\n            disabled: this.disabled,\n            clickable: this.clickable && !this.disabled,\n          }}\n        >\n          <div class=\"wrapper\">\n            <div\n              class={{\n                line: true,\n                selected: this.selected,\n                [this.status]: true,\n                [this.position]: true,\n              }}\n            ></div>\n            <div class=\"iconWrapper\">\n              {icons}\n              <slot name=\"custom-icon\"></slot>\n            </div>\n          </div>\n          <div class=\"text\">\n            <slot></slot>\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"mappings":";AAAA,MAAMA,eAAe,GAAG,8kGAA8kG;MC2BzlGC,YAAY,gBAAAC,kBAAA,OAAAD,YAAA,SAAAE,WAAA;;;;;;oBAMK,KAAK;oBAKL,KAAK;kBAKmC,MAAM;qBAK7C,KAAK;oBAKN,KAAK;oBAO6B,WAAW;oBAGvE,QAAQ;qBAEmB,mCAAmC;;EAUhEC,eAAeA,CAAA;IACb,MAAMC,aAAa,GAAG,IAAI,CAACC,QAAQ,GAAG,YAAY,GAAG,EAAE;IAEvD,IAAI,IAAI,CAACC,MAAM,KAAK,MAAM,EAAE;MAC1B,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,QAAQ,GAAG,YAAY,GAAG,QAAQ;MACvD,IAAI,CAACG,SAAS,GAAG,oCAAoCJ,aAAa,EAAE;;IAGtE,IAAI,IAAI,CAACE,MAAM,KAAK,MAAM,IAAI,CAAC,IAAI,CAACG,QAAQ,EAAE;MAC5C,IAAI,CAACD,SAAS,GAAG,iCAAiCJ,aAAa,EAAE;;;EAKrEM,gBAAgBA,CAAA;IACd,QAAQ,IAAI,CAACJ,MAAM;MACjB,KAAK,MAAM;QACT,IAAI,CAACC,QAAQ,GAAG,QAAQ;QACxB,IAAI,CAACC,SAAS,GAAG,mCAAmC;QACpD;MACF,KAAK,SAAS;QACZ,IAAI,CAACD,QAAQ,GAAG,SAAS;QACzB,IAAI,CAACC,SAAS,GAAG,eAAe;QAChC;MACF,KAAK,MAAM;QACT,IAAI,CAACD,QAAQ,GAAG,SAAS;QACzB,IAAI,CAACC,SAAS,GAAG,gCAAgC;QACjD;MACF,KAAK,SAAS;QACZ,IAAI,CAACD,QAAQ,GAAG,SAAS;QACzB,IAAI,CAACC,SAAS,GAAG,eAAe;QAChC;MACF,KAAK,OAAO;QACV,IAAI,CAACD,QAAQ,GAAG,OAAO;QACvB,IAAI,CAACC,SAAS,GAAG,aAAa;QAC9B;MAEF;QACE,IAAI,CAACD,QAAQ,GAAG,QAAQ;QACxB;;IAGJ,IAAI,IAAI,CAACE,QAAQ,EAAE;MACjB,IAAI,CAACD,SAAS,GAAG,6CAA6C;;;EAIlEG,gBAAgBA,CAAA;IACd,IAAI,CAACD,gBAAgB,EAAE;IACvB,IAAI,CAACP,eAAe,EAAE;IAEtB,IAAI,CAACS,cAAc,GAAG,CAAC,CAAC,IAAI,CAACC,WAAW,CAACC,aAAa,CACpD,sBAAsB,CACvB;;EAGHC,WAAWA,CAAA;IACT,IAAI,CAAC,IAAI,CAACN,QAAQ,IAAI,IAAI,CAACO,SAAS,EAAE;MACpC,IAAI,CAACC,eAAe,CAACC,IAAI,CAAC,IAAI,CAACL,WAAW,CAAC;;;EAI/CM,MAAMA,CAAA;IACJ,MAAMC,KAAK,GAAG,CAAC,IAAI,CAACR,cAAc,GAChCS,CAAA,CAACC,QAAQ,QACPD,CAAA;MACEE,KAAK,EAAC,SAAS;MACfC,IAAI,EACF,IAAI,CAACjB,QAAQ,KAAK,SAAS,GAAG,iBAAiB,GAAG,eAAe;MAEnEkB,KAAK,EAAC,UAAU;MAChBC,IAAI,EAAC;IAAI,EACA,EACXL,CAAA;MACEE,KAAK,EAAE,IAAI,CAACf,SAAS;MACrBgB,IAAI,EAAE,IAAI,CAACjB,QAAQ;MACnBkB,KAAK,EAAC,UAAU;MAChBC,IAAI,EAAC;IAAI,EACA,CACF,GACT,IAAI;IAER,OACEL,CAAA,CAACM,IAAI;MAACC,OAAO,EAAEA,CAAA,KAAM,IAAI,CAACb,WAAW;IAAE,GACrCM,CAAA;MACEQ,QAAQ,EAAE,CAAC;MACXJ,KAAK,EAAE;QACLK,IAAI,EAAE,IAAI;QACVzB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvB0B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBtB,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBO,SAAS,EAAE,IAAI,CAACA,SAAS,IAAI,CAAC,IAAI,CAACP;;IACpC,GAEDY,CAAA;MAAKI,KAAK,EAAC;IAAS,GAClBJ,CAAA;MACEI,KAAK,EAAE;QACLO,IAAI,EAAE,IAAI;QACV3B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvB,CAAC,IAAI,CAACC,MAAM,GAAG,IAAI;QACnB,CAAC,IAAI,CAAC2B,QAAQ,GAAG;;IAClB,EACI,EACPZ,CAAA;MAAKI,KAAK,EAAC;IAAa,GACrBL,KAAK,EACNC,CAAA;MAAMG,IAAI,EAAC;IAAa,EAAQ,CAC5B,CACF,EACNH,CAAA;MAAKI,KAAK,EAAC;IAAM,GACfJ,CAAA,cAAa,CACT,CACF,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}